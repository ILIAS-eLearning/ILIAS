--TEST--
"autoescape" tag does not apply escaping on literals
--TEMPLATE--
{% autoescape 'html' %}

1. Simple literal
{{ "<br />" }}

2. Conditional expression with only literals
{{ true ? "<br />" : "<br>" }}

3. Conditional expression with a variable
{{ true ? "<br />" : someVar }}
{{ false ? "<br />" : someVar }}
{{ true ? someVar : "<br />" }}
{{ false ? someVar : "<br />" }}

4. Nested conditionals with only literals
{{ true ? (true ? "<br />" : "<br>") : "\n" }}

5. Nested conditionals with a variable
{{ true ? (true ? "<br />" : someVar) : "\n" }}
{{ true ? (false ? "<br />" : someVar) : "\n" }}
{{ true ? (true ? someVar : "<br />") : "\n" }}
{{ true ? (false ? someVar : "<br />") : "\n" }}
{{ false ? "\n" : (true ? someVar : "<br />") }}
{{ false ? "\n" : (false ? someVar : "<br />") }}

6. Nested conditionals with a variable marked safe
{{ true ? (true ? "<br />" : someVar|raw) : "\n" }}
{{ true ? (false ? "<br />" : someVar|raw) : "\n" }}
{{ true ? (true ? someVar|raw : "<br />") : "\n" }}
{{ true ? (false ? someVar|raw : "<br />") : "\n" }}
{{ false ? "\n" : (true ? someVar|raw : "<br />") }}
{{ false ? "\n" : (false ? someVar|raw : "<br />") }}

7. Without then clause
{{ "<br />" ?: someVar }}
{{ someFalseVar ?: "<br />" }}

8. NullCoalesce
{{ aaaa ?? "<br />" }}
{{ "<br />" ?? someVar }}

{% endautoescape %}
--DATA--
return ['someVar' => '<br />', 'someFalseVar' => false]
--EXPECT--

1. Simple literal
<br />

2. Conditional expression with only literals
<br />

3. Conditional expression with a variable
<br />
&lt;br /&gt;
&lt;br /&gt;
<br />

4. Nested conditionals with only literals
<br />

5. Nested conditionals with a variable
<br />
&lt;br /&gt;
&lt;br /&gt;
<br />
&lt;br /&gt;
<br />

6. Nested conditionals with a variable marked safe
<br />
<br />
<br />
<br />
<br />
<br />

7. Without then clause
<br />
<br />

8. NullCoalesce
<br />
<br />
