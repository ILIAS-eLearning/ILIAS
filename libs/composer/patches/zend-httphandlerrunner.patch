diff --git a/src/Emitter/EmitterStack.php b/src/Emitter/EmitterStack.php
index 0c16f0b..11cbfe5 100644
--- a/src/Emitter/EmitterStack.php
+++ b/src/Emitter/EmitterStack.php
@@ -90,7 +90,7 @@ class EmitterStack extends SplStack implements EmitterInterface
      * @param mixed $emitter
      * @throws Exception\InvalidEmitterException for non-emitter instances
      */
-    private function validateEmitter($emitter) : void
+    private function validateEmitter($emitter)
     {
         if (! $emitter instanceof EmitterInterface) {
             throw Exception\InvalidEmitterException::forEmitter($emitter);
diff --git a/src/Emitter/SapiEmitter.php b/src/Emitter/SapiEmitter.php
index 81b215c..c7ff55b 100644
--- a/src/Emitter/SapiEmitter.php
+++ b/src/Emitter/SapiEmitter.php
@@ -35,7 +35,7 @@ class SapiEmitter implements EmitterInterface
     /**
      * Emit the message body.
      */
-    private function emitBody(ResponseInterface $response) : void
+    private function emitBody(ResponseInterface $response)
     {
         echo $response->getBody();
     }
diff --git a/src/Emitter/SapiEmitterTrait.php b/src/Emitter/SapiEmitterTrait.php
index 9a4a7be..d8a8a36 100644
--- a/src/Emitter/SapiEmitterTrait.php
+++ b/src/Emitter/SapiEmitterTrait.php
@@ -52,7 +52,7 @@ trait SapiEmitterTrait
      *
      * @see \Zend\HttpHandlerRunner\Emitter\SapiEmitterTrait::emitHeaders()
      */
-    private function emitStatusLine(ResponseInterface $response) : void
+    private function emitStatusLine(ResponseInterface $response)
     {
         $reasonPhrase = $response->getReasonPhrase();
         $statusCode   = $response->getStatusCode();
@@ -73,7 +73,7 @@ trait SapiEmitterTrait
      * in such a way as to create aggregate headers (instead of replace
      * the previous).
      */
-    private function emitHeaders(ResponseInterface $response) : void
+    private function emitHeaders(ResponseInterface $response)
     {
         $statusCode = $response->getStatusCode();
 
diff --git a/src/Emitter/SapiStreamEmitter.php b/src/Emitter/SapiStreamEmitter.php
index 53b4ec2..e565deb 100644
--- a/src/Emitter/SapiStreamEmitter.php
+++ b/src/Emitter/SapiStreamEmitter.php
@@ -55,7 +55,7 @@ class SapiStreamEmitter implements EmitterInterface
     /**
      * Emit the message body.
      */
-    private function emitBody(ResponseInterface $response) : void
+    private function emitBody(ResponseInterface $response)
     {
         $body = $response->getBody();
 
@@ -76,7 +76,7 @@ class SapiStreamEmitter implements EmitterInterface
     /**
      * Emit a range of the message body.
      */
-    private function emitBodyRange(array $range, ResponseInterface $response) : void
+    private function emitBodyRange(array $range, ResponseInterface $response)
     {
         list($unit, $first, $last, $length) = $range;
 
diff --git a/src/RequestHandlerRunner.php b/src/RequestHandlerRunner.php
index b22253e..f99cc8a 100644
--- a/src/RequestHandlerRunner.php
+++ b/src/RequestHandlerRunner.php
@@ -82,7 +82,7 @@ class RequestHandlerRunner
     /**
      * Run the application
      */
-    public function run() : void
+    public function run()
     {
         try {
             $request = ($this->serverRequestFactory)();
@@ -97,7 +97,7 @@ class RequestHandlerRunner
         $this->emitter->emit($response);
     }
 
-    private function emitMarshalServerRequestException(Throwable $exception) : void
+    private function emitMarshalServerRequestException(Throwable $exception)
     {
         $response = ($this->serverRequestErrorResponseGenerator)($exception);
         $this->emitter->emit($response);
