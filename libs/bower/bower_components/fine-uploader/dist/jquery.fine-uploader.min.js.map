{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","rootDataKey","func","$callbackEl","args","jqueryHandlerResult","fineUploaderDnd","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","strBefore","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_onDeleteComplete","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","expunge","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","errorMessage","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","setUploadHeaders","extraHeaders","toSend","promises","endpointHandler","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.13.0\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var id = this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL\n            });\n\n            sessionData.deleteFileEndpoint && this.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n            sessionData.deleteFileParams && this.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n            if (sessionData.thumbnailUrl) {\n                this._thumbnailUrls[id] = sessionData.thumbnailUrl;\n            }\n\n            this._netUploaded++;\n            this._netUploadedOrQueued++;\n\n            return id;\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n                this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n                // For error reporting, we only have access to the response status if this is not\n                // an `XDomainRequest`.\n                if (xhrOrXdr.withCredentials === undefined) {\n                    this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n                }\n                else {\n                    this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n                }\n            }\n            else {\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n                else {\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\n                        // upload chunk success\n                        function success(response, xhr) {\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                            handler.clearCachedChunk(id, chunkIdx);\n\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                responseToReport = upload.normalizeResponse(response, true),\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                            if (inProgressChunkIdx >= 0) {\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\n                            }\n\n                            handler._maybePersistChunkedState(id);\n\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                chunked.finalize(id);\n                            }\n                            else if (chunked.hasMoreParts(id)) {\n                                chunked.sendNext(id);\n                            }\n                            else {\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                            }\n                        },\n\n                        // upload chunk failure\n                        function failure(response, xhr) {\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\n                        }\n                        )\n                        .done(function() {\n                            handler.clearXhr(id, chunkIdx);\n                        });\n                }\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            params[spec.chunking.paramNames.partIndex] = chunkData.part;\n            params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n            params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n            params[spec.chunking.paramNames.totalParts] = chunkData.count;\n            params[spec.totalFileSizeName] = size;\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            log: log\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                !response.success ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(params, xhr, fileOrBlob, id) {\n            var formData = new FormData(),\n                method = spec.method,\n                endpoint = spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n\n            if (multipart) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(id, xhr) {\n            var extraHeaders = spec.customHeaders.get(id),\n                fileOrBlob = handler.getFile(id);\n\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n            if (!multipart) {\n                xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n            }\n\n            qq.each(extraHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx, resuming) {\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                size = getSize(id),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend(params, xhr, chunkData.blob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n            toSend = setParamsAndGetEntityToSend(params, xhr, fileOrBlob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"POST\",\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {}\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [method],\n        method: method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(params)\n                .withHeaders(headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n"]}