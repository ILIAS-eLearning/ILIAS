{
  "symbols": [
    {
      "name": "ol.AssertionError#code",
      "kind": "member",
      "description": "Error code. The meaning of the code can be found on\n{@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\nthe version found in the OpenLayers script's header comment if a version\nother than the latest is used).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/assertionerror.js",
      "types": [
        "number"
      ],
      "provides": [
        "ol.AssertionError"
      ]
    },
    {
      "name": "ol.Attribution",
      "kind": "class",
      "description": "An attribution for a layer source.\n\nExample:\n\n    source: new ol.source.OSM({\n      attributions: [\n        new ol.Attribution({\n          html: 'All maps &copy; ' +\n              '<a href=\"https://www.opencyclemap.org/\">OpenCycleMap</a>'\n        }),\n        ol.source.OSM.ATTRIBUTION\n      ],\n    ..",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/attribution.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.AttributionOptions"
          ]
        }
      ],
      "provides": [
        "ol.Attribution"
      ]
    },
    {
      "name": "ol.Attribution#getHTML",
      "kind": "function",
      "description": "Get the attribution markup.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/attribution.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.Attribution"
      ]
    },
    {
      "name": "ol.CanvasMap",
      "kind": "class",
      "description": "The map is the core component of OpenLayers. For a map to render, a view,\none or more layers, and a target container are needed:\n\n    var map = new ol.CanvasMap({\n      view: new ol.View({\n        center: [0, 0],\n        zoom: 1\n      }),\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM()\n        })\n      ],\n      target: 'map'\n    });\n\nThe above snippet creates a map using a {@link ol.layer.Tile} to display\n{@link ol.source.OSM} OSM data and render it to a DOM element with the\nid `map`.\n\nThe constructor places a viewport container (with CSS class name\n`ol-viewport`) in the target element (see `getViewport()`), and then two\nfurther elements within the viewport: one with CSS class name\n`ol-overlaycontainer-stopevent` for controls and some overlays, and one with\nCSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\noption of {@link ol.Overlay} for the difference). The map itself is placed in\na further element within the viewport.\n\nLayers are stored as a `ol.Collection` in layerGroups. A top-level group is\nprovided by the library. This is what is accessed by `getLayerGroup` and\n`setLayerGroup`. Layers entered in the options are added to this group, and\n`addLayer` and `removeLayer` change the layer collection in the group.\n`getLayers` is a convenience function for `getLayerGroup().getLayers()`.\nNote that `ol.layer.Group` is a subclass of `ol.layer.Base`, so layers\nentered in the options or added with `addLayer` can be groups, which can\ncontain further groups, and so on.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/canvasmap.js",
      "extends": "ol.PluggableMap",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.MapOptions"
          ]
        }
      ],
      "provides": [
        "ol.CanvasMap"
      ]
    },
    {
      "name": "ol.Collection",
      "kind": "class",
      "description": "An expanded version of standard JS Array, adding convenience methods for\nmanipulation. Add and remove changes to the Collection trigger a Collection\nevent. Note that this does not cover changes to the objects _within_ the\nCollection; they trigger events on the appropriate object, not on the\nCollection as a whole.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_array",
          "types": [
            "Array.<T>"
          ],
          "optional": true
        },
        {
          "name": "opt_options",
          "types": [
            "olx.CollectionOptions"
          ],
          "optional": true
        }
      ],
      "template": "T",
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#clear",
      "kind": "function",
      "description": "Remove all elements from the collection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#extend",
      "kind": "function",
      "description": "Add elements to the collection.  This pushes each item in the provided array\nto the end of the collection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "params": [
        {
          "name": "arr",
          "types": [
            "Array.<T>"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "ol.Collection.<T>"
        ]
      },
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#forEach",
      "kind": "function",
      "description": "Iterate over each element, calling the provided callback.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "params": [
        {
          "name": "f",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "S"
          ],
          "optional": true
        }
      ],
      "template": "S",
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#getArray",
      "kind": "function",
      "description": "Get a reference to the underlying Array object. Warning: if the array\nis mutated, no events will be dispatched by the collection, and the\ncollection's \"length\" property won't be in sync with the actual length\nof the array.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "returns": {
        "types": [
          "Array.<T>"
        ],
        "nullable": false
      },
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#item",
      "kind": "function",
      "description": "Get the element at the provided index.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "T"
        ]
      },
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#getLength",
      "kind": "function",
      "description": "Get the length of this collection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#insertAt",
      "kind": "function",
      "description": "Insert an element at the provided index.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        },
        {
          "name": "elem",
          "types": [
            "T"
          ]
        }
      ],
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#pop",
      "kind": "function",
      "description": "Remove the last element of the collection and return it.\nReturn `undefined` if the collection is empty.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#push",
      "kind": "function",
      "description": "Insert the provided element at the end of the collection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "params": [
        {
          "name": "elem",
          "types": [
            "T"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#remove",
      "kind": "function",
      "description": "Remove the first occurrence of an element from the collection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "params": [
        {
          "name": "elem",
          "types": [
            "T"
          ]
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#removeAt",
      "kind": "function",
      "description": "Remove the element at the provided index and return it.\nReturn `undefined` if the collection does not contain this index.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection#setAt",
      "kind": "function",
      "description": "Set the element at the provided index.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        },
        {
          "name": "elem",
          "types": [
            "T"
          ]
        }
      ],
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.Collection.Event#element",
      "kind": "member",
      "description": "The element that is added to or removed from the collection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/collection.js",
      "types": [
        "*"
      ],
      "provides": [
        "ol.Collection"
      ]
    },
    {
      "name": "ol.color.asArray",
      "kind": "function",
      "description": "Return the color as an array. This function maintains a cache of calculated\narrays which means the result should not be modified.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/color.js",
      "params": [
        {
          "name": "color",
          "types": [
            "ol.Color",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Color"
        ]
      },
      "provides": [
        "ol.color"
      ]
    },
    {
      "name": "ol.color.asString",
      "kind": "function",
      "description": "Return the color as an rgba string.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/color.js",
      "params": [
        {
          "name": "color",
          "types": [
            "ol.Color",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.color"
      ]
    },
    {
      "name": "ol.colorlike.asColorLike",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/colorlike.js",
      "params": [
        {
          "name": "color",
          "types": [
            "ol.Color",
            "ol.ColorLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.ColorLike"
        ]
      },
      "provides": [
        "ol.colorlike"
      ]
    },
    {
      "name": "ol.control.defaults",
      "kind": "function",
      "description": "Set of controls included in maps by default. Unless configured otherwise,\nthis returns a collection containing an instance of each of the following\ncontrols:\n* {@link ol.control.Zoom}\n* {@link ol.control.Rotate}\n* {@link ol.control.Attribution}",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.DefaultsOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Collection.<ol.control.Control>"
        ]
      },
      "provides": [
        "ol.control"
      ]
    },
    {
      "name": "ol.coordinate.add",
      "kind": "function",
      "description": "Add `delta` to `coordinate`. `coordinate` is modified in place and returned\nby the function.\n\nExample:\n\n    var coord = [7.85, 47.983333];\n    ol.coordinate.add(coord, [-2, 4]);\n    // coord is now [5.85, 51.983333]",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "delta",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.createStringXY",
      "kind": "function",
      "description": "Returns a {@link ol.CoordinateFormatType} function that can be used to format\na {ol.Coordinate} to a string.\n\nExample without specifying the fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var stringifyFunc = ol.coordinate.createStringXY();\n    var out = stringifyFunc(coord);\n    // out is now '8, 48'\n\nExample with explicitly specifying 2 fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var stringifyFunc = ol.coordinate.createStringXY(2);\n    var out = stringifyFunc(coord);\n    // out is now '7.85, 47.98'",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/coordinate.js",
      "params": [
        {
          "name": "opt_fractionDigits",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.CoordinateFormatType"
        ]
      },
      "provides": [
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.format",
      "kind": "function",
      "description": "Transforms the given {@link ol.Coordinate} to a string using the given string\ntemplate. The strings `{x}` and `{y}` in the template will be replaced with\nthe first and second coordinate values respectively.\n\nExample without specifying the fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var template = 'Coordinate is ({x}|{y}).';\n    var out = ol.coordinate.format(coord, template);\n    // out is now 'Coordinate is (8|48).'\n\nExample explicitly specifying the fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var template = 'Coordinate is ({x}|{y}).';\n    var out = ol.coordinate.format(coord, template, 2);\n    // out is now 'Coordinate is (7.85|47.98).'",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        },
        {
          "name": "template",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_fractionDigits",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.rotate",
      "kind": "function",
      "description": "Rotate `coordinate` by `angle`. `coordinate` is modified in place and\nreturned by the function.\n\nExample:\n\n    var coord = [7.85, 47.983333];\n    var rotateRadians = Math.PI / 2; // 90 degrees\n    ol.coordinate.rotate(coord, rotateRadians);\n    // coord is now [-47.983333, 7.85]",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "angle",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.toStringHDMS",
      "kind": "function",
      "description": "Format a geographic coordinate with the hemisphere, degrees, minutes, and\nseconds.\n\nExample without specifying fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var out = ol.coordinate.toStringHDMS(coord);\n    // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n\nExample explicitly specifying 1 fractional digit:\n\n    var coord = [7.85, 47.983333];\n    var out = ol.coordinate.toStringHDMS(coord, 1);\n    // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        },
        {
          "name": "opt_fractionDigits",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.toStringXY",
      "kind": "function",
      "description": "Format a coordinate as a comma delimited string.\n\nExample without specifying fractional digits:\n\n    var coord = [7.85, 47.983333];\n    var out = ol.coordinate.toStringXY(coord);\n    // out is now '8, 48'\n\nExample explicitly specifying 1 fractional digit:\n\n    var coord = [7.85, 47.983333];\n    var out = ol.coordinate.toStringXY(coord, 1);\n    // out is now '7.8, 48.0'",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/coordinate.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        },
        {
          "name": "opt_fractionDigits",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.DeviceOrientation",
      "kind": "class",
      "description": "The ol.DeviceOrientation class provides access to information from\nDeviceOrientation events.  See the [HTML 5 DeviceOrientation Specification](\nhttp://www.w3.org/TR/orientation-event/) for more details.\n\nMany new computers, and especially mobile phones\nand tablets, provide hardware support for device orientation. Web\ndevelopers targeting mobile devices will be especially interested in this\nclass.\n\nDevice orientation data are relative to a common starting point. For mobile\ndevices, the starting point is to lay your phone face up on a table with the\ntop of the phone pointing north. This represents the zero state. All\nangles are then relative to this state. For computers, it is the same except\nthe screen is open at 90 degrees.\n\nDevice orientation is reported as three angles - `alpha`, `beta`, and\n`gamma` - relative to the starting position along the three planar axes X, Y\nand Z. The X axis runs from the left edge to the right edge through the\nmiddle of the device. Similarly, the Y axis runs from the bottom to the top\nof the device through the middle. The Z axis runs from the back to the front\nthrough the middle. In the starting position, the X axis points to the\nright, the Y axis points away from you and the Z axis points straight up\nfrom the device lying flat.\n\nThe three angles representing the device orientation are relative to the\nthree axes. `alpha` indicates how much the device has been rotated around the\nZ axis, which is commonly interpreted as the compass heading (see note\nbelow). `beta` indicates how much the device has been rotated around the X\naxis, or how much it is tilted from front to back.  `gamma` indicates how\nmuch the device has been rotated around the Y axis, or how much it is tilted\nfrom left to right.\n\nFor most browsers, the `alpha` value returns the compass heading so if the\ndevice points north, it will be 0.  With Safari on iOS, the 0 value of\n`alpha` is calculated from when device orientation was first requested.\nol.DeviceOrientation provides the `heading` property which normalizes this\nbehavior across all browsers for you.\n\nIt is important to note that the HTML 5 DeviceOrientation specification\nindicates that `alpha`, `beta` and `gamma` are in degrees while the\nequivalent properties in ol.DeviceOrientation are in radians for consistency\nwith all other uses of angles throughout OpenLayers.\n\nTo get notified of device orientation changes, register a listener for the\ngeneric `change` event on your `ol.DeviceOrientation` instance.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/deviceorientation.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.DeviceOrientationOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.DeviceOrientation"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getAlpha",
      "kind": "function",
      "description": "Rotation around the device z-axis (in radians).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.DeviceOrientation"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getBeta",
      "kind": "function",
      "description": "Rotation around the device x-axis (in radians).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.DeviceOrientation"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getGamma",
      "kind": "function",
      "description": "Rotation around the device y-axis (in radians).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.DeviceOrientation"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getHeading",
      "kind": "function",
      "description": "The heading of the device relative to north (in radians).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.DeviceOrientation"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getTracking",
      "kind": "function",
      "description": "Determine if orientation is being tracked.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/deviceorientation.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.DeviceOrientation"
      ]
    },
    {
      "name": "ol.DeviceOrientation#setTracking",
      "kind": "function",
      "description": "Enable or disable tracking of device orientation events.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/deviceorientation.js",
      "params": [
        {
          "name": "tracking",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.DeviceOrientation"
      ]
    },
    {
      "name": "ol.easing.easeIn",
      "kind": "function",
      "description": "Start slow and speed up.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.easeOut",
      "kind": "function",
      "description": "Start fast and slow down.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.inAndOut",
      "kind": "function",
      "description": "Start slow, speed up, and then slow down again.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.linear",
      "kind": "function",
      "description": "Maintain a constant speed over time.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.upAndDown",
      "kind": "function",
      "description": "Start slow, speed up, and at the very end slow down again.  This has the\nsame general behavior as {@link ol.easing.inAndOut}, but the final slowdown\nis delayed.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/easing.js",
      "params": [
        {
          "name": "t",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.extent.boundingExtent",
      "kind": "function",
      "description": "Build an extent that includes all given coordinates.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.buffer",
      "kind": "function",
      "description": "Return extent increased by the provided value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "value",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.containsCoordinate",
      "kind": "function",
      "description": "Check if the passed coordinate is contained or on the edge of the extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.containsExtent",
      "kind": "function",
      "description": "Check if one extent contains another.\n\nAn extent is deemed contained if it lies completely within the other extent,\nincluding if they share one or more edges.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.containsXY",
      "kind": "function",
      "description": "Check if the passed coordinate is contained or on the edge of the extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "x",
          "types": [
            "number"
          ]
        },
        {
          "name": "y",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.createEmpty",
      "kind": "function",
      "description": "Create an empty extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.equals",
      "kind": "function",
      "description": "Determine if two extents are equivalent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.extend",
      "kind": "function",
      "description": "Modify an extent to include another extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getArea",
      "kind": "function",
      "description": "Get the size of an extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getBottomLeft",
      "kind": "function",
      "description": "Get the bottom left coordinate of an extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getBottomRight",
      "kind": "function",
      "description": "Get the bottom right coordinate of an extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getCenter",
      "kind": "function",
      "description": "Get the center coordinate of an extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getHeight",
      "kind": "function",
      "description": "Get the height of an extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getIntersection",
      "kind": "function",
      "description": "Get the intersection of two extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getSize",
      "kind": "function",
      "description": "Get the size (width, height) of an extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Size"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getTopLeft",
      "kind": "function",
      "description": "Get the top left coordinate of an extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getTopRight",
      "kind": "function",
      "description": "Get the top right coordinate of an extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.getWidth",
      "kind": "function",
      "description": "Get the width of an extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.intersects",
      "kind": "function",
      "description": "Determine if one extent intersects another.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent1",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "extent2",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.isEmpty",
      "kind": "function",
      "description": "Determine if an extent is empty.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.extent.applyTransform",
      "kind": "function",
      "description": "Apply a transform function to the extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "transformFn",
          "types": [
            "ol.TransformFunction"
          ]
        },
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.extent"
      ]
    },
    {
      "name": "ol.Feature",
      "kind": "class",
      "description": "A vector object for geographic features with a geometry and other\nattribute properties, similar to the features in vector file formats like\nGeoJSON.\n\nFeatures can be styled individually with `setStyle`; otherwise they use the\nstyle of their vector layer.\n\nNote that attribute properties are set as {@link ol.Object} properties on\nthe feature object, so they are observable, and have get/set accessors.\n\nTypically, a feature has a single geometry property. You can set the\ngeometry using the `setGeometry` method and get it with `getGeometry`.\nIt is possible to store more than one geometry on a feature using attribute\nproperties. By default, the geometry used for rendering is identified by\nthe property name `geometry`. If you want to use another geometry property\nfor rendering, use the `setGeometryName` method to change the attribute\nproperty associated with the geometry for the feature.  For example:\n\n```js\nvar feature = new ol.Feature({\n  geometry: new ol.geom.Polygon(polyCoords),\n  labelPoint: new ol.geom.Point(labelCoords),\n  name: 'My Polygon'\n});\n\n// get the polygon geometry\nvar poly = feature.getGeometry();\n\n// Render the feature as a point using the coordinates from labelPoint\nfeature.setGeometryName('labelPoint');\n\n// get the point geometry\nvar point = feature.getGeometry();\n```",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_geometryOrProperties",
          "types": [
            "ol.geom.Geometry",
            "Object.<string, *>="
          ]
        }
      ],
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#clone",
      "kind": "function",
      "description": "Clone this feature. If the original feature has a geometry it\nis also cloned. The feature id is not set in the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#getGeometry",
      "kind": "function",
      "description": "Get the feature's default geometry.  A feature may have any number of named\ngeometries.  The \"default\" geometry (the one that is rendered by default) is\nset when calling {@link ol.Feature#setGeometry}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "returns": {
        "types": [
          "ol.geom.Geometry",
          "undefined"
        ]
      },
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#getId",
      "kind": "function",
      "description": "Get the feature identifier.  This is a stable identifier for the feature and\nis either set when reading data from a remote source or set explicitly by\ncalling {@link ol.Feature#setId}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "returns": {
        "types": [
          "number",
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#getGeometryName",
      "kind": "function",
      "description": "Get the name of the feature's default geometry.  By default, the default\ngeometry is named `geometry`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#getStyle",
      "kind": "function",
      "description": "Get the feature's style. Will return what was provided to the\n{@link ol.Feature#setStyle} method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.FeatureStyleFunction",
          "ol.StyleFunction"
        ]
      },
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#getStyleFunction",
      "kind": "function",
      "description": "Get the feature's style function.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "returns": {
        "types": [
          "ol.FeatureStyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#setGeometry",
      "kind": "function",
      "description": "Set the default geometry for the feature.  This will update the property\nwith the name returned by {@link ol.Feature#getGeometryName}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#setStyle",
      "kind": "function",
      "description": "Set the style for the feature.  This can be a single style object, an array\nof styles, or a function that takes a resolution and returns an array of\nstyles. If it is `null` the feature has no style (a `null` style).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.FeatureStyleFunction",
            "ol.StyleFunction"
          ]
        }
      ],
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#setId",
      "kind": "function",
      "description": "Set the feature id.  The feature id is considered stable and may be used when\nrequesting features or comparing identifiers returned from a remote source.\nThe feature id can be used with the {@link ol.source.Vector#getFeatureById}\nmethod.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "params": [
        {
          "name": "id",
          "types": [
            "number",
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.Feature#setGeometryName",
      "kind": "function",
      "description": "Set the property name to be used when getting the feature's default geometry.\nWhen calling {@link ol.Feature#getGeometry}, the value of the property with\nthis name will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/feature.js",
      "params": [
        {
          "name": "name",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Feature"
      ]
    },
    {
      "name": "ol.featureloader.xhr",
      "kind": "function",
      "description": "Create an XHR feature loader for a `url` and `format`. The feature loader\nloads features (with XHR), parses the features, and adds them to the\nvector source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/featureloader.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string",
            "ol.FeatureUrlFunction"
          ]
        },
        {
          "name": "format",
          "types": [
            "ol.format.Feature"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.FeatureLoader"
        ]
      },
      "provides": [
        "ol.featureloader"
      ]
    },
    {
      "name": "ol.Geolocation",
      "kind": "class",
      "description": "Helper class for providing HTML5 Geolocation capabilities.\nThe [Geolocation API](http://www.w3.org/TR/geolocation-API/)\nis used to locate a user's position.\n\nTo get notified of position changes, register a listener for the generic\n`change` event on your instance of `ol.Geolocation`.\n\nExample:\n\n    var geolocation = new ol.Geolocation({\n      // take the projection to use from the map's view\n      projection: view.getProjection()\n    });\n    // listen to changes in position\n    geolocation.on('change', function(evt) {\n      window.console.log(geolocation.getPosition());\n    });",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.GeolocationOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getAccuracy",
      "kind": "function",
      "description": "Get the accuracy of the position in meters.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getAccuracyGeometry",
      "kind": "function",
      "description": "Get a geometry of the position accuracy.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ],
        "nullable": true
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getAltitude",
      "kind": "function",
      "description": "Get the altitude associated with the position.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getAltitudeAccuracy",
      "kind": "function",
      "description": "Get the altitude accuracy of the position.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getHeading",
      "kind": "function",
      "description": "Get the heading as radians clockwise from North.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getPosition",
      "kind": "function",
      "description": "Get the position of the device.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "ol.Coordinate",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getProjection",
      "kind": "function",
      "description": "Get the projection associated with the position.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "ol.proj.Projection",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getSpeed",
      "kind": "function",
      "description": "Get the speed in meters per second.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getTracking",
      "kind": "function",
      "description": "Determine if the device location is being tracked.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#getTrackingOptions",
      "kind": "function",
      "description": "Get the tracking options.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "returns": {
        "types": [
          "GeolocationPositionOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#setProjection",
      "kind": "function",
      "description": "Set the projection to use for transforming the coordinates.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#setTracking",
      "kind": "function",
      "description": "Enable or disable tracking.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "params": [
        {
          "name": "tracking",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Geolocation#setTrackingOptions",
      "kind": "function",
      "description": "Set the tracking options.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geolocation.js",
      "params": [
        {
          "name": "options",
          "types": [
            "GeolocationPositionOptions"
          ]
        }
      ],
      "provides": [
        "ol.Geolocation"
      ]
    },
    {
      "name": "ol.Graticule",
      "kind": "class",
      "description": "Render a grid for a coordinate system on a map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/graticule.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.GraticuleOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.Graticule#getMap",
      "kind": "function",
      "description": "Get the map associated with this graticule.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/graticule.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.Graticule#getMeridians",
      "kind": "function",
      "description": "Get the list of meridians.  Meridians are lines of equal longitude.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/graticule.js",
      "returns": {
        "types": [
          "Array.<ol.geom.LineString>"
        ]
      },
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.Graticule#getParallels",
      "kind": "function",
      "description": "Get the list of parallels.  Parallels are lines of equal latitude.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/graticule.js",
      "returns": {
        "types": [
          "Array.<ol.geom.LineString>"
        ]
      },
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.Graticule#setMap",
      "kind": "function",
      "description": "Set the map for this graticule.  The graticule will be rendered on the\nprovided map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/graticule.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.Graticule"
      ]
    },
    {
      "name": "ol.has.DEVICE_PIXEL_RATIO",
      "kind": "constant",
      "description": "The ratio between physical pixels and device-independent pixels\n(dips) on the device (`window.devicePixelRatio`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/has.js",
      "types": [
        "number"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.CANVAS",
      "kind": "constant",
      "description": "True if both the library and browser support Canvas.  Always `false`\nif `ol.ENABLE_CANVAS` is set to `false` at compile time.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.DEVICE_ORIENTATION",
      "kind": "constant",
      "description": "Indicates if DeviceOrientation is supported in the user's browser.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.GEOLOCATION",
      "kind": "constant",
      "description": "Is HTML5 geolocation supported in the current browser?",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.TOUCH",
      "kind": "constant",
      "description": "True if browser supports touch events.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.has.WEBGL",
      "kind": "constant",
      "description": "True if both OpenLayers and browser support WebGL.  Always `false`\nif `ol.ENABLE_WEBGL` is set to `false` at compile time.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/has.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.has"
      ]
    },
    {
      "name": "ol.Image#getImage",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/image.js",
      "provides": [
        "ol.Image"
      ]
    },
    {
      "name": "ol.Image#load",
      "kind": "function",
      "description": "Load the image or retry if loading previously failed.\nLoading is taken care of by the tile queue, and calling this method is\nonly needed for preloading or for reloading in case of an error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/image.js",
      "provides": [
        "ol.Image"
      ]
    },
    {
      "name": "ol.ImageTile#getImage",
      "kind": "function",
      "description": "Get the HTML image element for this tile (may be a Canvas, Image, or Video).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/imagetile.js",
      "returns": {
        "types": [
          "HTMLCanvasElement",
          "HTMLImageElement",
          "HTMLVideoElement"
        ]
      },
      "provides": [
        "ol.ImageTile"
      ]
    },
    {
      "name": "ol.inherits",
      "kind": "function",
      "description": "Inherit the prototype methods from one constructor into another.\n\nUsage:\n\n    function ParentClass(a, b) { }\n    ParentClass.prototype.foo = function(a) { }\n\n    function ChildClass(a, b, c) {\n      // Call parent constructor\n      ParentClass.call(this, a, b);\n    }\n    ol.inherits(ChildClass, ParentClass);\n\n    var child = new ChildClass('a', 'b', 'see');\n    child.foo(); // This works.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/index.js",
      "params": [
        {
          "name": "childCtor",
          "types": [
            "Function"
          ],
          "nullable": false
        },
        {
          "name": "parentCtor",
          "types": [
            "Function"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol"
      ]
    },
    {
      "name": "ol.interaction.defaults",
      "kind": "function",
      "description": "Set of interactions included in maps by default. Specific interactions can be\nexcluded by setting the appropriate option to false in the constructor\noptions, but the order of the interactions is fixed.  If you want to specify\na different order for interactions, you will need to create your own\n{@link ol.interaction.Interaction} instances and insert them into a\n{@link ol.Collection} in the order you want before creating your\n{@link ol.Map} instance. The default set of interactions, in sequence, is:\n* {@link ol.interaction.DragRotate}\n* {@link ol.interaction.DoubleClickZoom}\n* {@link ol.interaction.DragPan}\n* {@link ol.interaction.PinchRotate}\n* {@link ol.interaction.PinchZoom}\n* {@link ol.interaction.KeyboardPan}\n* {@link ol.interaction.KeyboardZoom}\n* {@link ol.interaction.MouseWheelZoom}\n* {@link ol.interaction.DragZoom}",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DefaultsOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Collection.<ol.interaction.Interaction>"
        ]
      },
      "provides": [
        "ol.interaction"
      ]
    },
    {
      "name": "ol.Kinetic",
      "kind": "class",
      "description": "Implementation of inertial deceleration for map movement.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/kinetic.js",
      "params": [
        {
          "name": "decay",
          "types": [
            "number"
          ]
        },
        {
          "name": "minVelocity",
          "types": [
            "number"
          ]
        },
        {
          "name": "delay",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.Kinetic"
      ]
    },
    {
      "name": "ol.loadingstrategy.all",
      "kind": "function",
      "description": "Strategy function for loading all features with a single request.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/loadingstrategy.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Extent>"
        ]
      },
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.loadingstrategy.bbox",
      "kind": "function",
      "description": "Strategy function for loading features based on the view's extent and\nresolution.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/loadingstrategy.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Extent>"
        ]
      },
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.loadingstrategy.tile",
      "kind": "function",
      "description": "Creates a strategy function for loading features based on a tile grid.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/loadingstrategy.js",
      "params": [
        {
          "name": "tileGrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "returns": {
        "types": [
          "Function"
        ]
      },
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.Map",
      "kind": "class",
      "description": "The map is the core component of OpenLayers. For a map to render, a view,\none or more layers, and a target container are needed:\n\n    var map = new ol.Map({\n      view: new ol.View({\n        center: [0, 0],\n        zoom: 1\n      }),\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM()\n        })\n      ],\n      target: 'map'\n    });\n\nThe above snippet creates a map using a {@link ol.layer.Tile} to display\n{@link ol.source.OSM} OSM data and render it to a DOM element with the\nid `map`.\n\nThe constructor places a viewport container (with CSS class name\n`ol-viewport`) in the target element (see `getViewport()`), and then two\nfurther elements within the viewport: one with CSS class name\n`ol-overlaycontainer-stopevent` for controls and some overlays, and one with\nCSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\noption of {@link ol.Overlay} for the difference). The map itself is placed in\na further element within the viewport.\n\nLayers are stored as a `ol.Collection` in layerGroups. A top-level group is\nprovided by the library. This is what is accessed by `getLayerGroup` and\n`setLayerGroup`. Layers entered in the options are added to this group, and\n`addLayer` and `removeLayer` change the layer collection in the group.\n`getLayers` is a convenience function for `getLayerGroup().getLayers()`.\nNote that `ol.layer.Group` is a subclass of `ol.layer.Base`, so layers\nentered in the options or added with `addLayer` can be groups, which can\ncontain further groups, and so on.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/map.js",
      "extends": "ol.PluggableMap",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.MapOptions"
          ]
        }
      ],
      "provides": [
        "ol.Map"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#originalEvent",
      "kind": "constant",
      "description": "The original browser event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapbrowserevent.js",
      "types": [
        "Event"
      ],
      "provides": [
        "ol.MapBrowserEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#pixel",
      "kind": "member",
      "description": "The map pixel relative to the viewport corresponding to the original browser event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapbrowserevent.js",
      "types": [
        "ol.Pixel"
      ],
      "provides": [
        "ol.MapBrowserEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#coordinate",
      "kind": "member",
      "description": "The coordinate in view projection corresponding to the original browser event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapbrowserevent.js",
      "types": [
        "ol.Coordinate"
      ],
      "provides": [
        "ol.MapBrowserEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#dragging",
      "kind": "member",
      "description": "Indicates if the map is currently being dragged. Only set for\n`POINTERDRAG` and `POINTERMOVE` events. Default is `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapbrowserevent.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.MapBrowserEvent"
      ]
    },
    {
      "name": "ol.MapEvent#map",
      "kind": "member",
      "description": "The map where the event occurred.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapevent.js",
      "types": [
        "ol.PluggableMap"
      ],
      "provides": [
        "ol.MapEvent"
      ]
    },
    {
      "name": "ol.MapEvent#frameState",
      "kind": "member",
      "description": "The frame state at the time of the event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapevent.js",
      "types": [
        "olx.FrameState"
      ],
      "provides": [
        "ol.MapEvent"
      ]
    },
    {
      "name": "ol.Object",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nMost non-trivial classes inherit from this.\n\nThis extends {@link ol.Observable} with observable properties, where each\nproperty is observable as well as the object as a whole.\n\nClasses that inherit from this have pre-defined properties, to which you can\nadd your owns. The pre-defined properties are listed in this documentation as\n'Observable Properties', and have their own accessors; for example,\n{@link ol.Map} has a `target` property, accessed with `getTarget()`  and\nchanged with `setTarget()`. Not all properties are however settable. There\nare also general-purpose accessors `get()` and `set()`. For example,\n`get('target')` is equivalent to `getTarget()`.\n\nThe `set` accessors trigger a change event, and you can monitor this by\nregistering a listener. For example, {@link ol.View} has a `center`\nproperty, so `view.on('change:center', function(evt) {...});` would call the\nfunction whenever the value of the center property changes. Within the\nfunction, `evt.target` would be the view, so `evt.target.getCenter()` would\nreturn the new center.\n\nYou can add your own observable properties with\n`object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\nYou can listen for changes on that property value with\n`object.on('change:prop', listener)`. You can get a list of all\nproperties with {@link ol.Object#getProperties object.getProperties()}.\n\nNote that the observable properties are separate from standard JS properties.\nYou can, for example, give your map object a title with\n`map.title='New title'` and with `map.set('title', 'Another title')`. The\nfirst will be a `hasOwnProperty`; the second will appear in\n`getProperties()`. Only the second is observable.\n\nProperties can be deleted by using the unset method. E.g.\nobject.unset('foo').",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "extends": "ol.Observable",
      "params": [
        {
          "name": "opt_values",
          "types": [
            "Object.<string, *>"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Object#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Object#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Object#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Object#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Object#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Object#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Object.Event#key",
      "kind": "member",
      "description": "The name of the property whose value is changing.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Object.Event#oldValue",
      "kind": "member",
      "description": "The old value. To get the new value use `e.target.get(e.key)` where\n`e` is the event object.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "types": [
        "*"
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Observable",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nAn event target providing convenient methods for listener registration\nand unregistration. A generic `change` event is always available through\n{@link ol.Observable#changed}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "extends": "ol.Disposable",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable.unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "key",
          "types": [
            "ol.EventsKey",
            "Array.<ol.EventsKey>"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay",
      "kind": "class",
      "description": "An element to be displayed over the map and attached to a single map\nlocation.  Like {@link ol.control.Control}, Overlays are visible widgets.\nUnlike Controls, they are not in a fixed position on the screen, but are tied\nto a geographical coordinate, so panning the map will move an Overlay but not\na Control.\n\nExample:\n\n    var popup = new ol.Overlay({\n      element: document.getElementById('popup')\n    });\n    popup.setPosition(coordinate);\n    map.addOverlay(popup);",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.OverlayOptions"
          ]
        }
      ],
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#getElement",
      "kind": "function",
      "description": "Get the DOM element of this overlay.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "returns": {
        "types": [
          "Element",
          "undefined"
        ]
      },
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#getId",
      "kind": "function",
      "description": "Get the overlay identifier which is set on constructor.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "returns": {
        "types": [
          "number",
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#getMap",
      "kind": "function",
      "description": "Get the map associated with this overlay.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "returns": {
        "types": [
          "ol.PluggableMap",
          "undefined"
        ]
      },
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#getOffset",
      "kind": "function",
      "description": "Get the offset of this overlay.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#getPosition",
      "kind": "function",
      "description": "Get the current position of this overlay.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "returns": {
        "types": [
          "ol.Coordinate",
          "undefined"
        ]
      },
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#getPositioning",
      "kind": "function",
      "description": "Get the current positioning of this overlay.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "returns": {
        "types": [
          "ol.OverlayPositioning"
        ]
      },
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#setElement",
      "kind": "function",
      "description": "Set the DOM element to be associated with this overlay.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "params": [
        {
          "name": "element",
          "types": [
            "Element",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#setMap",
      "kind": "function",
      "description": "Set the map to be associated with this overlay.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#setOffset",
      "kind": "function",
      "description": "Set the offset for this overlay.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "params": [
        {
          "name": "offset",
          "types": [
            "Array.<number>"
          ]
        }
      ],
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#setPosition",
      "kind": "function",
      "description": "Set the position for this overlay. If the position is `undefined` the\noverlay is hidden.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "params": [
        {
          "name": "position",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.Overlay#setPositioning",
      "kind": "function",
      "description": "Set the positioning for this overlay.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/overlay.js",
      "params": [
        {
          "name": "positioning",
          "types": [
            "ol.OverlayPositioning"
          ]
        }
      ],
      "provides": [
        "ol.Overlay"
      ]
    },
    {
      "name": "ol.PluggableMap",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.MapOptions"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#addControl",
      "kind": "function",
      "description": "Add the given control to the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "control",
          "types": [
            "ol.control.Control"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#addInteraction",
      "kind": "function",
      "description": "Add the given interaction to the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "interaction",
          "types": [
            "ol.interaction.Interaction"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#addLayer",
      "kind": "function",
      "description": "Adds the given layer to the top of this map. If you want to add a layer\nelsewhere in the stack, use `getLayers()` and the methods available on\n{@link ol.Collection}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Base"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#addOverlay",
      "kind": "function",
      "description": "Add the given overlay to the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "overlay",
          "types": [
            "ol.Overlay"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#forEachFeatureAtPixel",
      "kind": "function",
      "description": "Detect features that intersect a pixel on the viewport, and execute a\ncallback with each intersecting feature. Layers included in the detection can\nbe configured through the `layerFilter` option in `opt_options`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.AtPixelOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "template": "S,T",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getFeaturesAtPixel",
      "kind": "function",
      "description": "Get all features that intersect a pixel on the viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.AtPixelOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<(ol.Feature|ol.render.Feature)>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#forEachLayerAtPixel",
      "kind": "function",
      "description": "Detect layers that have a color value at a pixel on the viewport, and\nexecute a callback with each matching layer. Layers included in the\ndetection can be configured through `opt_layerFilter`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "S"
          ],
          "optional": true
        },
        {
          "name": "opt_layerFilter",
          "types": [
            "Function"
          ],
          "optional": true
        },
        {
          "name": "opt_this2",
          "types": [
            "U"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "template": "S,T,U",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#hasFeatureAtPixel",
      "kind": "function",
      "description": "Detect if features intersect a pixel on the viewport. Layers included in the\ndetection can be configured through `opt_layerFilter`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.AtPixelOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "template": "U",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getEventCoordinate",
      "kind": "function",
      "description": "Returns the coordinate in view projection for a browser event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Event"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getEventPixel",
      "kind": "function",
      "description": "Returns the map pixel position for a browser event relative to the viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Event"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Pixel"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getTarget",
      "kind": "function",
      "description": "Get the target in which this map is rendered.\nNote that this returns what is entered as an option or in setTarget:\nif that was an element, it returns an element; if a string, it returns that.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "Element",
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getTargetElement",
      "kind": "function",
      "description": "Get the DOM element into which this map is rendered. In contrast to\n`getTarget` this method always return an `Element`, or `null` if the\nmap has no target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "Element"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getCoordinateFromPixel",
      "kind": "function",
      "description": "Get the coordinate for a given pixel.  This returns a coordinate in the\nmap view projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getControls",
      "kind": "function",
      "description": "Get the map controls. Modifying this collection changes the controls\nassociated with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.control.Control>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getOverlays",
      "kind": "function",
      "description": "Get the map overlays. Modifying this collection changes the overlays\nassociated with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.Overlay>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getOverlayById",
      "kind": "function",
      "description": "Get an overlay by its identifier (the value returned by overlay.getId()).\nNote that the index treats string and numeric identifiers as the same. So\n`map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Overlay"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getInteractions",
      "kind": "function",
      "description": "Get the map interactions. Modifying this collection changes the interactions\nassociated with the map.\n\nInteractions are used for e.g. pan, zoom and rotate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.interaction.Interaction>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getLayerGroup",
      "kind": "function",
      "description": "Get the layergroup associated with this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.layer.Group"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getLayers",
      "kind": "function",
      "description": "Get the collection of layers associated with this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.layer.Base>"
        ],
        "nullable": false
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getPixelFromCoordinate",
      "kind": "function",
      "description": "Get the pixel for a coordinate.  This takes a coordinate in the map view\nprojection and returns the corresponding pixel.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Pixel"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getSize",
      "kind": "function",
      "description": "Get the size of this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Size",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getView",
      "kind": "function",
      "description": "Get the view associated with this map. A view manages properties such as\ncenter and resolution.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.View"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#getViewport",
      "kind": "function",
      "description": "Get the element that serves as the map viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "Element"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#renderSync",
      "kind": "function",
      "description": "Requests an immediate render in a synchronous manner.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#render",
      "kind": "function",
      "description": "Request a map rendering (at the next animation frame).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#removeControl",
      "kind": "function",
      "description": "Remove the given control from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "control",
          "types": [
            "ol.control.Control"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.control.Control",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#removeInteraction",
      "kind": "function",
      "description": "Remove the given interaction from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "interaction",
          "types": [
            "ol.interaction.Interaction"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.interaction.Interaction",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#removeLayer",
      "kind": "function",
      "description": "Removes the given layer from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Base"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.layer.Base",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#removeOverlay",
      "kind": "function",
      "description": "Remove the given overlay from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "overlay",
          "types": [
            "ol.Overlay"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Overlay",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#setLayerGroup",
      "kind": "function",
      "description": "Sets the layergroup of this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "layerGroup",
          "types": [
            "ol.layer.Group"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#setSize",
      "kind": "function",
      "description": "Set the size of this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "size",
          "types": [
            "ol.Size",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#setTarget",
      "kind": "function",
      "description": "Set the target element to render this map into.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#setView",
      "kind": "function",
      "description": "Set the view for this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "view",
          "types": [
            "ol.View"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.PluggableMap#updateSize",
      "kind": "function",
      "description": "Force a recalculation of the map viewport size.  This should be called when\nthird-party code changes the size of the map viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.proj.METERS_PER_UNIT",
      "kind": "constant",
      "description": "Meters per unit lookup table.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "types": [
        "Object.<ol.proj.Units, number>"
      ],
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.setProj4",
      "kind": "function",
      "description": "Register proj4. If not explicitly registered, it will be assumed that\nproj4js will be loaded in the global namespace. For example in a\nbrowserify ES6 environment you could use:\n\n    import ol from 'openlayers';\n    import proj4 from 'proj4';\n    ol.proj.setProj4(proj4);",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "proj4",
          "types": [
            "Proj4"
          ]
        }
      ],
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.getPointResolution",
      "kind": "function",
      "description": "Get the resolution of the point in degrees or distance units.\nFor projections with degrees as the unit this will simply return the\nprovided resolution. For other projections the point resolution is\nby default estimated by transforming the 'point' pixel to EPSG:4326,\nmeasuring its width and height on the normal sphere,\nand taking the average of the width and height.\nA custom function can be provided for a specific projection, either\nby setting the `getPointResolution` option in the\n{@link ol.proj.Projection} constructor or by using\n{@link ol.proj.Projection#setGetPointResolution} to change an existing\nprojection object.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_units",
          "types": [
            "ol.proj.Units"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.addEquivalentProjections",
      "kind": "function",
      "description": "Registers transformation functions that don't alter coordinates. Those allow\nto transform between projections with equal meaning.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "projections",
          "types": [
            "Array.<ol.proj.Projection>"
          ]
        }
      ],
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.addProjection",
      "kind": "function",
      "description": "Add a Projection object to the list of supported projections that can be\nlooked up by their code.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.proj.Projection"
          ]
        }
      ],
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.addCoordinateTransforms",
      "kind": "function",
      "description": "Registers coordinate transform functions to convert coordinates between the\nsource projection and the destination projection.\nThe forward and inverse functions convert coordinate pairs; this function\nconverts these into the functions used internally which also handle\nextents and coordinate arrays.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "forward",
          "types": [
            "Function"
          ]
        },
        {
          "name": "inverse",
          "types": [
            "Function"
          ]
        }
      ],
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.fromLonLat",
      "kind": "function",
      "description": "Transforms a coordinate from longitude/latitude to a different projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_projection",
          "types": [
            "ol.ProjectionLike"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.toLonLat",
      "kind": "function",
      "description": "Transforms a coordinate to longitude/latitude.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_projection",
          "types": [
            "ol.ProjectionLike"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.get",
      "kind": "function",
      "description": "Fetches a Projection object for the code specified.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "projectionLike",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.equivalent",
      "kind": "function",
      "description": "Checks if two projections are the same, that is every coordinate in one\nprojection does represent the same geographic point as the same coordinate in\nthe other projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "projection1",
          "types": [
            "ol.proj.Projection"
          ]
        },
        {
          "name": "projection2",
          "types": [
            "ol.proj.Projection"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.getTransform",
      "kind": "function",
      "description": "Given the projection-like objects, searches for a transformation\nfunction to convert a coordinates array from the source projection to the\ndestination projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.TransformFunction"
        ]
      },
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.transform",
      "kind": "function",
      "description": "Transforms a coordinate from source projection to destination projection.\nThis returns a new coordinate (and does not modify the original).\n\nSee {@link ol.proj.transformExtent} for extent transformation.\nSee the transform method of {@link ol.geom.Geometry} and its subclasses for\ngeometry transforms.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.proj.transformExtent",
      "kind": "function",
      "description": "Transforms an extent from source projection to destination projection.  This\nreturns a new extent (and does not modify the original).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.proj"
      ]
    },
    {
      "name": "ol.render.toContext",
      "kind": "function",
      "description": "Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\nto the context's canvas.\n\nThe units for geometry coordinates are css pixels relative to the top left\ncorner of the canvas element.\n```js\nvar canvas = document.createElement('canvas');\nvar render = ol.render.toContext(canvas.getContext('2d'),\n    { size: [100, 100] });\nrender.setFillStrokeStyle(new ol.style.Fill({ color: blue }));\nrender.drawPolygon(\n    new ol.geom.Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n```",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render.js",
      "params": [
        {
          "name": "context",
          "types": [
            "CanvasRenderingContext2D"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.render.ToContextOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.render.canvas.Immediate"
        ]
      },
      "provides": [
        "ol.render"
      ]
    },
    {
      "name": "ol.size.toSize",
      "kind": "function",
      "description": "Returns an `ol.Size` array for the passed in number (meaning: square) or\n`ol.Size` array.\n(meaning: non-square),",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/size.js",
      "params": [
        {
          "name": "size",
          "types": [
            "number",
            "ol.Size"
          ]
        },
        {
          "name": "opt_size",
          "types": [
            "ol.Size"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Size"
        ]
      },
      "provides": [
        "ol.size"
      ]
    },
    {
      "name": "ol.Sphere",
      "kind": "class",
      "description": "Class to create objects that can be used with {@link\nol.geom.Polygon.circular}.\n\nFor example to create a sphere whose radius is equal to the semi-major\naxis of the WGS84 ellipsoid:\n\n```js\nvar wgs84Sphere= new ol.Sphere(6378137);\n```",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/sphere.js",
      "params": [
        {
          "name": "radius",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.Sphere"
      ]
    },
    {
      "name": "ol.Sphere#geodesicArea",
      "kind": "function",
      "description": "Returns the geodesic area for a list of coordinates.\n\n[Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\nRobert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\nPolygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\nLaboratory, Pasadena, CA, June 2007",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/sphere.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Sphere"
      ]
    },
    {
      "name": "ol.Sphere#haversineDistance",
      "kind": "function",
      "description": "Returns the distance from c1 to c2 using the haversine formula.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/sphere.js",
      "params": [
        {
          "name": "c1",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "c2",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Sphere"
      ]
    },
    {
      "name": "ol.Sphere.getLength",
      "kind": "function",
      "description": "Get the spherical length of a geometry.  This length is the sum of the\ngreat circle distances between coordinates.  For polygons, the length is\nthe sum of all rings.  For points, the length is zero.  For multi-part\ngeometries, the length is the sum of the length of each part.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/sphere.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.SphereMetricOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Sphere"
      ]
    },
    {
      "name": "ol.Sphere.getArea",
      "kind": "function",
      "description": "Get the spherical area of a geometry.  This is the area (in meters) assuming\nthat polygon edges are segments of great circles on a sphere.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/sphere.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.SphereMetricOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Sphere"
      ]
    },
    {
      "name": "ol.style.iconImageCache",
      "kind": "member",
      "description": "The {@link ol.style.IconImageCache} for {@link ol.style.Icon} images.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style.js",
      "provides": [
        "ol.style"
      ]
    },
    {
      "name": "ol.Tile#getTileCoord",
      "kind": "function",
      "description": "Get the tile coordinate for this tile.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.Tile#load",
      "kind": "function",
      "description": "Load the image or retry if loading previously failed.\nLoading is taken care of by the tile queue, and calling this method is\nonly needed for preloading or for reloading in case of an error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "virtual": true,
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.tilegrid.createXYZ",
      "kind": "function",
      "description": "Creates a tile grid with a standard XYZ tiling scheme.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.tilegrid.XYZOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ],
        "nullable": false
      },
      "provides": [
        "ol.tilegrid"
      ]
    },
    {
      "name": "ol.VectorTile#getExtent",
      "kind": "function",
      "description": "Gets the extent of the vector tile.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/vectortile.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.VectorTile"
      ]
    },
    {
      "name": "ol.VectorTile#getFormat",
      "kind": "function",
      "description": "Get the feature format assigned for reading this tile's features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/vectortile.js",
      "returns": {
        "types": [
          "ol.format.Feature"
        ]
      },
      "provides": [
        "ol.VectorTile"
      ]
    },
    {
      "name": "ol.VectorTile#getFeatures",
      "kind": "function",
      "description": "Get the features for this tile. Geometries will be in the projection returned\nby {@link ol.VectorTile#getProjection}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/vectortile.js",
      "returns": {
        "types": [
          "Array.<(ol.Feature|ol.render.Feature)>"
        ]
      },
      "provides": [
        "ol.VectorTile"
      ]
    },
    {
      "name": "ol.VectorTile#getProjection",
      "kind": "function",
      "description": "Get the feature projection of features returned by\n{@link ol.VectorTile#getFeatures}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/vectortile.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.VectorTile"
      ]
    },
    {
      "name": "ol.VectorTile#setExtent",
      "kind": "function",
      "description": "Function for use in an {@link ol.source.VectorTile}'s `tileLoadFunction`.\nSets the extent of the vector tile. This is only required for tiles in\nprojections with `tile-pixels` as units. The extent should be set to\n`[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is calculated\nby multiplying the tile size with the tile pixel ratio. For sources using\n{@link ol.format.MVT} as feature format, the\n{@link ol.format.MVT#getLastExtent} method will return the correct extent.\nThe default is `[0, 0, 4096, 4096]`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/vectortile.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "provides": [
        "ol.VectorTile"
      ]
    },
    {
      "name": "ol.VectorTile#setFeatures",
      "kind": "function",
      "description": "Function for use in an {@link ol.source.VectorTile}'s `tileLoadFunction`.\nSets the features for the tile.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/vectortile.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.VectorTile"
      ]
    },
    {
      "name": "ol.VectorTile#setProjection",
      "kind": "function",
      "description": "Function for use in an {@link ol.source.VectorTile}'s `tileLoadFunction`.\nSets the projection of the features that were added with\n{@link ol.VectorTile#setFeatures}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/vectortile.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.proj.Projection"
          ]
        }
      ],
      "provides": [
        "ol.VectorTile"
      ]
    },
    {
      "name": "ol.VectorTile#setLoader",
      "kind": "function",
      "description": "Set the feature loader for reading this tile's features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/vectortile.js",
      "params": [
        {
          "name": "loader",
          "types": [
            "ol.FeatureLoader"
          ]
        }
      ],
      "provides": [
        "ol.VectorTile"
      ]
    },
    {
      "name": "ol.View",
      "kind": "class",
      "description": "An ol.View object represents a simple 2D view of the map.\n\nThis is the object to act upon to change the center, resolution,\nand rotation of the map.\n\n### The view states\n\nAn `ol.View` is determined by three states: `center`, `resolution`,\nand `rotation`. Each state has a corresponding getter and setter, e.g.\n`getCenter` and `setCenter` for the `center` state.\n\nAn `ol.View` has a `projection`. The projection determines the\ncoordinate system of the center, and its units determine the units of the\nresolution (projection units per pixel). The default projection is\nSpherical Mercator (EPSG:3857).\n\n### The constraints\n\n`setCenter`, `setResolution` and `setRotation` can be used to change the\nstates of the view. Any value can be passed to the setters. And the value\nthat is passed to a setter will effectively be the value set in the view,\nand returned by the corresponding getter.\n\nBut an `ol.View` object also has a *resolution constraint*, a\n*rotation constraint* and a *center constraint*.\n\nAs said above, no constraints are applied when the setters are used to set\nnew states for the view. Applying constraints is done explicitly through\nthe use of the `constrain*` functions (`constrainResolution` and\n`constrainRotation` and `constrainCenter`).\n\nThe main users of the constraints are the interactions and the\ncontrols. For example, double-clicking on the map changes the view to\nthe \"next\" resolution. And releasing the fingers after pinch-zooming\nsnaps to the closest resolution (with an animation).\n\nThe *resolution constraint* snaps to specific resolutions. It is\ndetermined by the following options: `resolutions`, `maxResolution`,\n`maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\noptions are ignored. See documentation for each option for more\ninformation.\n\nThe *rotation constraint* snaps to specific angles. It is determined\nby the following options: `enableRotation` and `constrainRotation`.\nBy default the rotation value is snapped to zero when approaching the\nhorizontal.\n\nThe *center constraint* is determined by the `extent` option. By\ndefault the center is not constrained at all.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.ViewOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#animate",
      "kind": "function",
      "description": "Animate the view.  The view's center, zoom (or resolution), and rotation\ncan be animated for smooth transitions between view states.  For example,\nto animate the view to a new zoom level:\n\n    view.animate({zoom: view.getZoom() + 1});\n\nBy default, the animation lasts one second and uses in-and-out easing.  You\ncan customize this behavior by including `duration` (in milliseconds) and\n`easing` options (see {@link ol.easing}).\n\nTo chain together multiple animations, call the method with multiple\nanimation objects.  For example, to first zoom and then pan:\n\n    view.animate({zoom: 10}, {center: [0, 0]});\n\nIf you provide a function as the last argument to the animate method, it\nwill get called at the end of an animation series.  The callback will be\ncalled with `true` if the animation series completed on its own or `false`\nif it was cancelled.\n\nAnimations are cancelled by user interactions (e.g. dragging the map) or by\ncalling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n(or another method that calls one of these).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "var_args",
          "types": [
            "olx.AnimationOptions",
            "Function"
          ],
          "variable": true
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getAnimating",
      "kind": "function",
      "description": "Determine if the view is being animated.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getInteracting",
      "kind": "function",
      "description": "Determine if the user is interacting with the view, such as panning or zooming.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#cancelAnimations",
      "kind": "function",
      "description": "Cancel any ongoing animations.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#constrainCenter",
      "kind": "function",
      "description": "Get the constrained center of this view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate",
          "undefined"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#constrainResolution",
      "kind": "function",
      "description": "Get the constrained resolution of this view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "resolution",
          "types": [
            "number",
            "undefined"
          ]
        },
        {
          "name": "opt_delta",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_direction",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#constrainRotation",
      "kind": "function",
      "description": "Get the constrained rotation of this view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number",
            "undefined"
          ]
        },
        {
          "name": "opt_delta",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getCenter",
      "kind": "function",
      "description": "Get the view center.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "ol.Coordinate",
          "undefined"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#calculateExtent",
      "kind": "function",
      "description": "Calculate the extent for the current view state and the passed size.\nThe size is the pixel dimensions of the box into which the calculated extent\nshould fit. In most cases you want to get the extent of the entire map,\nthat is `map.getSize()`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "opt_size",
          "types": [
            "ol.Size"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getMaxResolution",
      "kind": "function",
      "description": "Get the maximum resolution of the view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getMinResolution",
      "kind": "function",
      "description": "Get the minimum resolution of the view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getMaxZoom",
      "kind": "function",
      "description": "Get the maximum zoom level for the view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#setMaxZoom",
      "kind": "function",
      "description": "Set a new maximum zoom level for the view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "zoom",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getMinZoom",
      "kind": "function",
      "description": "Get the minimum zoom level for the view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#setMinZoom",
      "kind": "function",
      "description": "Set a new minimum zoom level for the view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "zoom",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getProjection",
      "kind": "function",
      "description": "Get the view projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getResolution",
      "kind": "function",
      "description": "Get the view resolution.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getResolutions",
      "kind": "function",
      "description": "Get the resolutions for the view. This returns the array of resolutions\npassed to the constructor of the {ol.View}, or undefined if none were given.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "Array.<number>",
          "undefined"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getResolutionForExtent",
      "kind": "function",
      "description": "Get the resolution for a provided extent (in map units) and size (in pixels).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "opt_size",
          "types": [
            "ol.Size"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getRotation",
      "kind": "function",
      "description": "Get the view rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getZoom",
      "kind": "function",
      "description": "Get the current zoom level.  If you configured your view with a resolutions\narray (this is rare), this method may return non-integer zoom levels (so\nthe zoom level is not safe to use as an index into a resolutions array).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getZoomForResolution",
      "kind": "function",
      "description": "Get the zoom level for a resolution.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#getResolutionForZoom",
      "kind": "function",
      "description": "Get the resolution for a zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "zoom",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#fit",
      "kind": "function",
      "description": "Fit the given geometry or extent based on the given map size and border.\nThe size is pixel dimensions of the box to fit the extent into.\nIn most cases you will want to use the map size, that is `map.getSize()`.\nTakes care of the map angle.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "geometryOrExtent",
          "types": [
            "ol.geom.SimpleGeometry",
            "ol.Extent"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.view.FitOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#centerOn",
      "kind": "function",
      "description": "Center on coordinate and view position.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "size",
          "types": [
            "ol.Size"
          ]
        },
        {
          "name": "position",
          "types": [
            "ol.Pixel"
          ]
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#rotate",
      "kind": "function",
      "description": "Rotate the view around a given coordinate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#setCenter",
      "kind": "function",
      "description": "Set the center of the current view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#setResolution",
      "kind": "function",
      "description": "Set the resolution for this view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "resolution",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#setRotation",
      "kind": "function",
      "description": "Set the rotation for this view.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.View#setZoom",
      "kind": "function",
      "description": "Zoom to a specific zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/view.js",
      "params": [
        {
          "name": "zoom",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.View"
      ]
    },
    {
      "name": "ol.xml.getAllTextContent",
      "kind": "function",
      "description": "Recursively grab all text content of child nodes into a single string.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/xml.js",
      "params": [
        {
          "name": "node",
          "types": [
            "Node"
          ]
        },
        {
          "name": "normalizeWhitespace",
          "types": [
            "boolean"
          ]
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.xml"
      ]
    },
    {
      "name": "ol.xml.parse",
      "kind": "function",
      "description": "Parse an XML string to an XML Document.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/xml.js",
      "params": [
        {
          "name": "xml",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Document"
        ]
      },
      "provides": [
        "ol.xml"
      ]
    },
    {
      "name": "ol.webgl.Context#getGL",
      "kind": "function",
      "description": "Get the WebGL rendering context",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/webgl/context.js",
      "returns": {
        "types": [
          "WebGLRenderingContext"
        ]
      },
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.webgl.Context#useProgram",
      "kind": "function",
      "description": "Use a program.  If the program is already in use, this will return `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/webgl/context.js",
      "params": [
        {
          "name": "program",
          "types": [
            "WebGLProgram"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid",
      "kind": "class",
      "description": "Base class for setting the grid pattern for sources accessing tiled-image\nservers.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.tilegrid.TileGridOptions"
          ]
        }
      ],
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#forEachTileCoord",
      "kind": "function",
      "description": "Call a function with each tile coordinate for a given extent and zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "zoom",
          "types": [
            "number"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        }
      ],
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getMaxZoom",
      "kind": "function",
      "description": "Get the maximum zoom level for the grid.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getMinZoom",
      "kind": "function",
      "description": "Get the minimum zoom level for the grid.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getOrigin",
      "kind": "function",
      "description": "Get the origin for the grid at the given zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getResolution",
      "kind": "function",
      "description": "Get the resolution for the given zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getResolutions",
      "kind": "function",
      "description": "Get the list of resolutions for the tile grid.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getTileCoordExtent",
      "kind": "function",
      "description": "Get the extent of a tile coordinate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "tileCoord",
          "types": [
            "ol.TileCoord"
          ]
        },
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getTileCoordForCoordAndResolution",
      "kind": "function",
      "description": "Get the tile coordinate for the given map coordinate and resolution.  This\nmethod considers that coordinates that intersect tile boundaries should be\nassigned the higher tile coordinate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getTileCoordForCoordAndZ",
      "kind": "function",
      "description": "Get a tile coordinate given a map coordinate and zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "z",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getTileSize",
      "kind": "function",
      "description": "Get the tile size for a zoom level. The type of the return value matches the\n`tileSize` or `tileSizes` that the tile grid was configured with. To always\nget an `ol.Size`, run the result through `ol.size.toSize()`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number",
          "ol.Size"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getZForResolution",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_direction",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS",
      "kind": "class",
      "description": "Set the grid pattern for sources accessing WMTS tiled-image servers.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/wmts.js",
      "extends": "ol.tilegrid.TileGrid",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.tilegrid.WMTSOptions"
          ]
        }
      ],
      "provides": [
        "ol.tilegrid.WMTS"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMatrixIds",
      "kind": "function",
      "description": "Get the list of matrix identifiers.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/wmts.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.tilegrid.WMTS"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS.createFromCapabilitiesMatrixSet",
      "kind": "function",
      "description": "Create a tile grid from a WMTS capabilities matrix set and an\noptional TileMatrixSetLimits.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/wmts.js",
      "params": [
        {
          "name": "matrixSet",
          "types": [
            "Object"
          ]
        },
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        },
        {
          "name": "opt_matrixLimits",
          "types": [
            "Array.<Object>"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.tilegrid.WMTS"
        ]
      },
      "provides": [
        "ol.tilegrid.WMTS"
      ]
    },
    {
      "name": "ol.style.AtlasManager",
      "kind": "class",
      "description": "Manages the creation of image atlases.\n\nImages added to this manager will be inserted into an atlas, which\nwill be used for rendering.\nThe `size` given in the constructor is the size for the first\natlas. After that, when new atlases are created, they will have\ntwice the size as the latest atlas (until `maxSize` is reached).\n\nIf an application uses many images or very large images, it is recommended\nto set a higher `size` value to avoid the creation of too many atlases.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/atlasmanager.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.AtlasManagerOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.AtlasManager"
      ]
    },
    {
      "name": "ol.style.Circle",
      "kind": "class",
      "description": "Set circle style for vector features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/circle.js",
      "extends": "ol.style.RegularShape",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.CircleOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#setRadius",
      "kind": "function",
      "description": "Set the circle radius.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/circle.js",
      "params": [
        {
          "name": "radius",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Fill",
      "kind": "class",
      "description": "Set fill style for vector features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/fill.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.FillOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Fill#clone",
      "kind": "function",
      "description": "Clones the style. The color is not cloned if it is an {@link ol.ColorLike}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/fill.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Fill#getColor",
      "kind": "function",
      "description": "Get the fill color.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/fill.js",
      "returns": {
        "types": [
          "ol.Color",
          "ol.ColorLike"
        ]
      },
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Fill#setColor",
      "kind": "function",
      "description": "Set the color.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/fill.js",
      "params": [
        {
          "name": "color",
          "types": [
            "ol.Color",
            "ol.ColorLike"
          ]
        }
      ],
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Icon",
      "kind": "class",
      "description": "Set icon style for vector features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/icon.js",
      "extends": "ol.style.Image",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.IconOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Icon"
      ]
    },
    {
      "name": "ol.style.Icon#clone",
      "kind": "function",
      "description": "Clones the style. The underlying Image/HTMLCanvasElement is not cloned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/icon.js",
      "returns": {
        "types": [
          "ol.style.Icon"
        ]
      },
      "provides": [
        "ol.style.Icon"
      ]
    },
    {
      "name": "ol.style.Icon#getAnchor",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/icon.js",
      "provides": [
        "ol.style.Icon"
      ]
    },
    {
      "name": "ol.style.Icon#getColor",
      "kind": "function",
      "description": "Get the icon color.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/icon.js",
      "returns": {
        "types": [
          "ol.Color"
        ]
      },
      "provides": [
        "ol.style.Icon"
      ]
    },
    {
      "name": "ol.style.Icon#getImage",
      "kind": "function",
      "description": "Get the image icon.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/icon.js",
      "params": [
        {
          "name": "pixelRatio",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "Image",
          "HTMLCanvasElement"
        ]
      },
      "provides": [
        "ol.style.Icon"
      ]
    },
    {
      "name": "ol.style.Icon#getOrigin",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/icon.js",
      "provides": [
        "ol.style.Icon"
      ]
    },
    {
      "name": "ol.style.Icon#getSrc",
      "kind": "function",
      "description": "Get the image URL.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/icon.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Icon"
      ]
    },
    {
      "name": "ol.style.Icon#getSize",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/icon.js",
      "provides": [
        "ol.style.Icon"
      ]
    },
    {
      "name": "ol.style.Icon#load",
      "kind": "function",
      "description": "Load not yet loaded URI.\nWhen rendering a feature with an icon style, the vector renderer will\nautomatically call this method. However, you might want to call this\nmethod yourself for preloading or other purposes.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/icon.js",
      "provides": [
        "ol.style.Icon"
      ]
    },
    {
      "name": "ol.style.IconImageCache#setSize",
      "kind": "function",
      "description": "Set the cache size of the icon cache. Default is `32`. Change this value when\nyour map uses more than 32 different icon images and you are not caching icon\nstyles on the application level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/iconimagecache.js",
      "params": [
        {
          "name": "maxCacheSize",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.IconImageCache"
      ]
    },
    {
      "name": "ol.style.Image",
      "kind": "class",
      "description": "A base class used for creating subclasses and not instantiated in\napps. Base class for {@link ol.style.Icon}, {@link ol.style.Circle} and\n{@link ol.style.RegularShape}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "virtual": true,
      "params": [
        {
          "name": "options",
          "types": [
            "ol.StyleImageOptions"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Image#getOpacity",
      "kind": "function",
      "description": "Get the symbolizer opacity.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Image#getRotateWithView",
      "kind": "function",
      "description": "Determine whether the symbolizer rotates with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Image#getRotation",
      "kind": "function",
      "description": "Get the symoblizer rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Image#getScale",
      "kind": "function",
      "description": "Get the symbolizer scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Image#getSnapToPixel",
      "kind": "function",
      "description": "Determine whether the symbolizer should be snapped to a pixel.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Image#setOpacity",
      "kind": "function",
      "description": "Set the opacity.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Image#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Image#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.RegularShape",
      "kind": "class",
      "description": "Set regular shape style for vector features. The resulting shape will be\na regular polygon when `radius` is provided, or a star when `radius1` and\n`radius2` are provided.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "extends": "ol.style.Image",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.style.RegularShapeOptions"
          ]
        }
      ],
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#clone",
      "kind": "function",
      "description": "Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "ol.style.RegularShape"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getAnchor",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getAngle",
      "kind": "function",
      "description": "Get the angle used in generating the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getFill",
      "kind": "function",
      "description": "Get the fill style for the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getImage",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getOrigin",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getPoints",
      "kind": "function",
      "description": "Get the number of points for generating the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getRadius",
      "kind": "function",
      "description": "Get the (primary) radius for the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getRadius2",
      "kind": "function",
      "description": "Get the secondary radius for the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getSize",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.RegularShape#getStroke",
      "kind": "function",
      "description": "Get the stroke style for the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.Stroke",
      "kind": "class",
      "description": "Set stroke style for vector features.\nNote that the defaults given are the Canvas defaults, which will be used if\noption is not defined. The `get` functions return whatever was entered in\nthe options; they will not return the default.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.StrokeOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#clone",
      "kind": "function",
      "description": "Clones the style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getColor",
      "kind": "function",
      "description": "Get the stroke color.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "returns": {
        "types": [
          "ol.Color",
          "ol.ColorLike"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineCap",
      "kind": "function",
      "description": "Get the line cap type for the stroke.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineDash",
      "kind": "function",
      "description": "Get the line dash style for the stroke.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineDashOffset",
      "kind": "function",
      "description": "Get the line dash offset for the stroke.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineJoin",
      "kind": "function",
      "description": "Get the line join type for the stroke.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getMiterLimit",
      "kind": "function",
      "description": "Get the miter limit for the stroke.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getWidth",
      "kind": "function",
      "description": "Get the stroke width.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setColor",
      "kind": "function",
      "description": "Set the color.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "params": [
        {
          "name": "color",
          "types": [
            "ol.Color",
            "ol.ColorLike"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setLineCap",
      "kind": "function",
      "description": "Set the line cap.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "params": [
        {
          "name": "lineCap",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setLineDash",
      "kind": "function",
      "description": "Set the line dash.\n\nPlease note that Internet Explorer 10 and lower [do not support][mdn] the\n`setLineDash` method on the `CanvasRenderingContext2D` and therefore this\nproperty will have no visual effect in these browsers.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "params": [
        {
          "name": "lineDash",
          "types": [
            "Array.<number>"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setLineDashOffset",
      "kind": "function",
      "description": "Set the line dash offset.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "params": [
        {
          "name": "lineDashOffset",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setLineJoin",
      "kind": "function",
      "description": "Set the line join.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "params": [
        {
          "name": "lineJoin",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setMiterLimit",
      "kind": "function",
      "description": "Set the miter limit.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "params": [
        {
          "name": "miterLimit",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#setWidth",
      "kind": "function",
      "description": "Set the width.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/stroke.js",
      "params": [
        {
          "name": "width",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Style",
      "kind": "class",
      "description": "Container for vector feature rendering styles. Any changes made to the style\nor its children through `set*()` methods will not take effect until the\nfeature or layer that uses the style is re-rendered.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.StyleOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#clone",
      "kind": "function",
      "description": "Clones the style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.Style"
        ]
      },
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getRenderer",
      "kind": "function",
      "description": "Get the custom renderer function that was configured with\n{@link #setRenderer} or the `renderer` constructor option.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.StyleRenderFunction",
          "null"
        ]
      },
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#setRenderer",
      "kind": "function",
      "description": "Sets a custom renderer function for this style. When set, `fill`, `stroke`\nand `image` options of the style will be ignored.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "params": [
        {
          "name": "renderer",
          "types": [
            "ol.StyleRenderFunction",
            "null"
          ]
        }
      ],
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getGeometry",
      "kind": "function",
      "description": "Get the geometry to be rendered.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "returns": {
        "types": [
          "string",
          "ol.geom.Geometry",
          "ol.StyleGeometryFunction"
        ]
      },
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getGeometryFunction",
      "kind": "function",
      "description": "Get the function used to generate a geometry for rendering.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.StyleGeometryFunction"
        ],
        "nullable": false
      },
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getFill",
      "kind": "function",
      "description": "Get the fill style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#setFill",
      "kind": "function",
      "description": "Set the fill style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "params": [
        {
          "name": "fill",
          "types": [
            "ol.style.Fill"
          ]
        }
      ],
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getImage",
      "kind": "function",
      "description": "Get the image style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.Image"
        ]
      },
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#setImage",
      "kind": "function",
      "description": "Set the image style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "params": [
        {
          "name": "image",
          "types": [
            "ol.style.Image"
          ]
        }
      ],
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getStroke",
      "kind": "function",
      "description": "Get the stroke style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#setStroke",
      "kind": "function",
      "description": "Set the stroke style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "params": [
        {
          "name": "stroke",
          "types": [
            "ol.style.Stroke"
          ]
        }
      ],
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getText",
      "kind": "function",
      "description": "Get the text style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "returns": {
        "types": [
          "ol.style.Text"
        ]
      },
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#setText",
      "kind": "function",
      "description": "Set the text style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "params": [
        {
          "name": "text",
          "types": [
            "ol.style.Text"
          ]
        }
      ],
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getZIndex",
      "kind": "function",
      "description": "Get the z-index for the style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#setGeometry",
      "kind": "function",
      "description": "Set a geometry that is rendered instead of the feature's geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "string",
            "ol.geom.Geometry",
            "ol.StyleGeometryFunction"
          ]
        }
      ],
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#setZIndex",
      "kind": "function",
      "description": "Set the z-index.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/style.js",
      "params": [
        {
          "name": "zIndex",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Text",
      "kind": "class",
      "description": "Set text style for vector features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.style.TextOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#clone",
      "kind": "function",
      "description": "Clones the style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "ol.style.Text"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getOverflow",
      "kind": "function",
      "description": "Get the `overflow` configuration.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getFont",
      "kind": "function",
      "description": "Get the font name.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getMaxAngle",
      "kind": "function",
      "description": "Get the maximum angle between adjacent characters.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getPlacement",
      "kind": "function",
      "description": "Get the label placement.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "ol.style.TextPlacement",
          "string"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getOffsetX",
      "kind": "function",
      "description": "Get the x-offset for the text.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getOffsetY",
      "kind": "function",
      "description": "Get the y-offset for the text.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getFill",
      "kind": "function",
      "description": "Get the fill style for the text.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getRotateWithView",
      "kind": "function",
      "description": "Determine whether the text rotates with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "boolean",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getRotation",
      "kind": "function",
      "description": "Get the text rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getScale",
      "kind": "function",
      "description": "Get the text scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getStroke",
      "kind": "function",
      "description": "Get the stroke style for the text.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getText",
      "kind": "function",
      "description": "Get the text to be rendered.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getTextAlign",
      "kind": "function",
      "description": "Get the text alignment.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getTextBaseline",
      "kind": "function",
      "description": "Get the text baseline.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getBackgroundFill",
      "kind": "function",
      "description": "Get the background fill style for the text.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getBackgroundStroke",
      "kind": "function",
      "description": "Get the background stroke style for the text.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getPadding",
      "kind": "function",
      "description": "Get the padding for the text.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setOverflow",
      "kind": "function",
      "description": "Set the `overflow` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "overflow",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setFont",
      "kind": "function",
      "description": "Set the font.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "font",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setMaxAngle",
      "kind": "function",
      "description": "Set the maximum angle between adjacent characters.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "maxAngle",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setOffsetX",
      "kind": "function",
      "description": "Set the x offset.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "offsetX",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setOffsetY",
      "kind": "function",
      "description": "Set the y offset.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "offsetY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setPlacement",
      "kind": "function",
      "description": "Set the text placement.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "placement",
          "types": [
            "ol.style.TextPlacement",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setFill",
      "kind": "function",
      "description": "Set the fill.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "fill",
          "types": [
            "ol.style.Fill"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setStroke",
      "kind": "function",
      "description": "Set the stroke.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "stroke",
          "types": [
            "ol.style.Stroke"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setText",
      "kind": "function",
      "description": "Set the text.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "text",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setTextAlign",
      "kind": "function",
      "description": "Set the text alignment.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "textAlign",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setTextBaseline",
      "kind": "function",
      "description": "Set the text baseline.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "textBaseline",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setBackgroundFill",
      "kind": "function",
      "description": "Set the background fill.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "fill",
          "types": [
            "ol.style.Fill"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setBackgroundStroke",
      "kind": "function",
      "description": "Set the background stroke.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "stroke",
          "types": [
            "ol.style.Stroke"
          ]
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#setPadding",
      "kind": "function",
      "description": "Set the padding (`[top, right, bottom, left]`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/text.js",
      "params": [
        {
          "name": "padding",
          "types": [
            "Array.<number>"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.source.BingMaps",
      "kind": "class",
      "description": "Layer source for Bing Maps tile data.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/bingmaps.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.BingMapsOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.BingMaps.TOS_ATTRIBUTION",
      "kind": "constant",
      "description": "The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\nTerms Of Use.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/bingmaps.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.BingMaps#getApiKey",
      "kind": "function",
      "description": "Get the api key used for this source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/bingmaps.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.BingMaps#getImagerySet",
      "kind": "function",
      "description": "Get the imagery set associated with this source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/bingmaps.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.CartoDB",
      "kind": "class",
      "description": "Layer source for the CartoDB Maps API.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/cartodb.js",
      "extends": "ol.source.XYZ",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.CartoDBOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.CartoDB"
      ]
    },
    {
      "name": "ol.source.CartoDB#getConfig",
      "kind": "function",
      "description": "Returns the current config.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/cartodb.js",
      "returns": {
        "types": [
          "Object"
        ],
        "nullable": false
      },
      "provides": [
        "ol.source.CartoDB"
      ]
    },
    {
      "name": "ol.source.CartoDB#updateConfig",
      "kind": "function",
      "description": "Updates the carto db config.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/cartodb.js",
      "params": [
        {
          "name": "config",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.CartoDB"
      ]
    },
    {
      "name": "ol.source.CartoDB#setConfig",
      "kind": "function",
      "description": "Sets the CartoDB config",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/cartodb.js",
      "params": [
        {
          "name": "config",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.CartoDB"
      ]
    },
    {
      "name": "ol.source.Cluster",
      "kind": "class",
      "description": "Layer source to cluster vector data. Works out of the box with point\ngeometries. For other geometry types, or if not all geometries should be\nconsidered for clustering, a custom `geometryFunction` can be defined.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/cluster.js",
      "extends": "ol.source.Vector",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ClusterOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Cluster"
      ]
    },
    {
      "name": "ol.source.Cluster#getDistance",
      "kind": "function",
      "description": "Get the distance in pixels between clusters.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/cluster.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.source.Cluster"
      ]
    },
    {
      "name": "ol.source.Cluster#getSource",
      "kind": "function",
      "description": "Get a reference to the wrapped source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/cluster.js",
      "returns": {
        "types": [
          "ol.source.Vector"
        ]
      },
      "provides": [
        "ol.source.Cluster"
      ]
    },
    {
      "name": "ol.source.Cluster#setDistance",
      "kind": "function",
      "description": "Set the distance in pixels between clusters.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/cluster.js",
      "params": [
        {
          "name": "distance",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.source.Cluster"
      ]
    },
    {
      "name": "ol.source.Image",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for sources providing a single image.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/image.js",
      "extends": "ol.source.Source",
      "virtual": true,
      "params": [
        {
          "name": "options",
          "types": [
            "ol.SourceImageOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Image"
      ]
    },
    {
      "name": "ol.source.Image.Event#image",
      "kind": "member",
      "description": "The image related to the event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/image.js",
      "types": [
        "ol.Image"
      ],
      "provides": [
        "ol.source.Image"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest",
      "kind": "class",
      "description": "Source for data from ArcGIS Rest services providing single, untiled images.\nUseful when underlying map service has labels.\n\nIf underlying map service is not using labels,\ntake advantage of ol image caching and use\n{@link ol.source.TileArcGISRest} data source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagearcgisrest.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.ImageArcGISRestOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.ImageArcGISRest"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagearcgisrest.js",
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.source.ImageArcGISRest"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getImageLoadFunction",
      "kind": "function",
      "description": "Return the image load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagearcgisrest.js",
      "returns": {
        "types": [
          "ol.ImageLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.ImageArcGISRest"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getUrl",
      "kind": "function",
      "description": "Return the URL used for this ArcGIS source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagearcgisrest.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.ImageArcGISRest"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#setImageLoadFunction",
      "kind": "function",
      "description": "Set the image load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagearcgisrest.js",
      "params": [
        {
          "name": "imageLoadFunction",
          "types": [
            "ol.ImageLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageArcGISRest"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagearcgisrest.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageArcGISRest"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagearcgisrest.js",
      "params": [
        {
          "name": "params",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageArcGISRest"
      ]
    },
    {
      "name": "ol.source.ImageCanvas",
      "kind": "class",
      "description": "Base class for image sources where a canvas element is the image.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagecanvas.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ImageCanvasOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageCanvas"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide",
      "kind": "class",
      "description": "Source for images from Mapguide servers",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagemapguide.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ImageMapGuideOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagemapguide.js",
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getImageLoadFunction",
      "kind": "function",
      "description": "Return the image load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagemapguide.js",
      "returns": {
        "types": [
          "ol.ImageLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagemapguide.js",
      "params": [
        {
          "name": "params",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#setImageLoadFunction",
      "kind": "function",
      "description": "Set the image load function of the MapGuide source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagemapguide.js",
      "params": [
        {
          "name": "imageLoadFunction",
          "types": [
            "ol.ImageLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageMapGuide"
      ]
    },
    {
      "name": "ol.source.ImageStatic",
      "kind": "class",
      "description": "A layer source for displaying a single, static image.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagestatic.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ImageStaticOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageStatic"
      ]
    },
    {
      "name": "ol.source.ImageVector",
      "kind": "class",
      "description": "**Deprecated**. Use an `ol.layer.Vector` with `renderMode: 'image'` and an\n`ol.source.Vector` instead.\n\nAn image source whose images are canvas elements into which vector features\nread from a vector source (`ol.source.Vector`) are drawn. An\n`ol.source.ImageVector` object is to be used as the `source` of an image\nlayer (`ol.layer.Image`). Image layers are rotated, scaled, and translated,\nas opposed to being re-rendered, during animations and interactions. So, like\nany other image layer, an image layer configured with an\n`ol.source.ImageVector` will exhibit this behaviour. This is in contrast to a\nvector layer, where vector features are re-drawn during animations and\ninteractions.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagevector.js",
      "extends": "ol.source.ImageCanvas",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.ImageVectorOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#getSource",
      "kind": "function",
      "description": "Get a reference to the wrapped source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagevector.js",
      "returns": {
        "types": [
          "ol.source.Vector"
        ]
      },
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagevector.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.StyleFunction"
        ]
      },
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagevector.js",
      "returns": {
        "types": [
          "ol.StyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles. If it is `undefined` the default style is used. If\nit is `null` the layer has no style (a `null` style), so only features\nthat have their own styles will be rendered in the layer. See\n{@link ol.style} for information on the default style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagevector.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.StyleFunction",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageWMS",
      "kind": "class",
      "description": "Source for WMS servers providing single, untiled images.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagewms.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.ImageWMSOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getGetFeatureInfoUrl",
      "kind": "function",
      "description": "Return the GetFeatureInfo URL for the passed coordinate, resolution, and\nprojection. Return `undefined` if the GetFeatureInfo URL cannot be\nconstructed.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagewms.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "params",
          "types": [
            "Object"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagewms.js",
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getImageLoadFunction",
      "kind": "function",
      "description": "Return the image load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagewms.js",
      "returns": {
        "types": [
          "ol.ImageLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getUrl",
      "kind": "function",
      "description": "Return the URL used for this WMS source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagewms.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#setImageLoadFunction",
      "kind": "function",
      "description": "Set the image load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagewms.js",
      "params": [
        {
          "name": "imageLoadFunction",
          "types": [
            "ol.ImageLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagewms.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/imagewms.js",
      "params": [
        {
          "name": "params",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.OSM",
      "kind": "class",
      "description": "Layer source for the OpenStreetMap tile server.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/osm.js",
      "extends": "ol.source.XYZ",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.OSMOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.OSM.ATTRIBUTION",
      "kind": "constant",
      "description": "The attribution containing a link to the OpenStreetMap Copyright and License\npage.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/osm.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.Raster",
      "kind": "class",
      "description": "A source that transforms data from any number of input sources using an\n{@link ol.RasterOperation} function to transform input pixel values into\noutput pixel values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/raster.js",
      "extends": "ol.source.Image",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.RasterOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Raster"
      ]
    },
    {
      "name": "ol.source.Raster#setOperation",
      "kind": "function",
      "description": "Set the operation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/raster.js",
      "params": [
        {
          "name": "operation",
          "types": [
            "ol.RasterOperation"
          ]
        },
        {
          "name": "opt_lib",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Raster"
      ]
    },
    {
      "name": "ol.source.Raster.Event#extent",
      "kind": "member",
      "description": "The raster extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/raster.js",
      "types": [
        "ol.Extent"
      ],
      "provides": [
        "ol.source.Raster"
      ]
    },
    {
      "name": "ol.source.Raster.Event#resolution",
      "kind": "member",
      "description": "The pixel resolution (map units per pixel).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/raster.js",
      "types": [
        "number"
      ],
      "provides": [
        "ol.source.Raster"
      ]
    },
    {
      "name": "ol.source.Raster.Event#data",
      "kind": "member",
      "description": "An object made available to all operations.  This can be used by operations\nas a storage object (e.g. for calculating statistics).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/raster.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.source.Raster"
      ]
    },
    {
      "name": "ol.source.Source",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for {@link ol.layer.Layer} sources.\n\nA generic `change` event is triggered when the state of the source changes.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "extends": "ol.Object",
      "virtual": true,
      "params": [
        {
          "name": "options",
          "types": [
            "ol.SourceSourceOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Source#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Source#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Source#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Source#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Source#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Source#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Stamen",
      "kind": "class",
      "description": "Layer source for the Stamen tile server.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/stamen.js",
      "extends": "ol.source.XYZ",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.StamenOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Stamen"
      ]
    },
    {
      "name": "ol.source.Tile",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for sources providing images divided into a tile grid.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "extends": "ol.source.Source",
      "virtual": true,
      "params": [
        {
          "name": "options",
          "types": [
            "ol.SourceTileOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.Tile#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.Tile.Event#tile",
      "kind": "member",
      "description": "The tile related to the event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "types": [
        "ol.Tile"
      ],
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest",
      "kind": "class",
      "description": "Layer source for tile data from ArcGIS Rest services. Map and Image\nServices are supported.\n\nFor cached ArcGIS services, better performance is available using the\n{@link ol.source.XYZ} data source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tilearcgisrest.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.TileArcGISRestOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.TileArcGISRest"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tilearcgisrest.js",
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.source.TileArcGISRest"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tilearcgisrest.js",
      "params": [
        {
          "name": "params",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.TileArcGISRest"
      ]
    },
    {
      "name": "ol.source.TileDebug",
      "kind": "class",
      "description": "A pseudo tile source, which does not fetch tiles from a server, but renders\na grid outline for the tile grid/projection along with the coordinates for\neach tile. See examples/canvas-tiles for an example.\n\nUses Canvas context2d, so requires Canvas support.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tiledebug.js",
      "extends": "ol.source.Tile",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.TileDebugOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.TileDebug"
      ]
    },
    {
      "name": "ol.source.TileImage",
      "kind": "class",
      "description": "Base class for sources providing images divided into a tile grid.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "extends": "ol.source.Tile",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.TileImageOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON",
      "kind": "class",
      "description": "Layer source for tile data in TileJSON format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tilejson.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.TileJSONOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.TileJSON"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileJSON",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tilejson.js",
      "returns": {
        "types": [
          "TileJSON"
        ]
      },
      "provides": [
        "ol.source.TileJSON"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid",
      "kind": "class",
      "description": "Layer source for UTFGrid interaction data loaded from TileJSON format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileutfgrid.js",
      "extends": "ol.source.Tile",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.TileUTFGridOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.TileUTFGrid"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getTemplate",
      "kind": "function",
      "description": "Return the template from TileJSON.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileutfgrid.js",
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.TileUTFGrid"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#forDataAtCoordinateAndResolution",
      "kind": "function",
      "description": "Calls the callback (synchronously by default) with the available data\nfor given coordinate and resolution (or `null` if not yet loaded or\nin case of an error).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileutfgrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        },
        {
          "name": "opt_request",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "template": "T",
      "provides": [
        "ol.source.TileUTFGrid"
      ]
    },
    {
      "name": "ol.source.TileWMS",
      "kind": "class",
      "description": "Layer source for tile data from WMS servers.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tilewms.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.TileWMSOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getGetFeatureInfoUrl",
      "kind": "function",
      "description": "Return the GetFeatureInfo URL for the passed coordinate, resolution, and\nprojection. Return `undefined` if the GetFeatureInfo URL cannot be\nconstructed.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tilewms.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "params",
          "types": [
            "Object"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tilewms.js",
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tilewms.js",
      "params": [
        {
          "name": "params",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.UrlTile#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.UrlTile#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.UrlTile#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.UrlTile#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.UrlTile#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.UrlTile#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.UrlTile#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Vector",
      "kind": "class",
      "description": "Provides a source of features for vector layers. Vector features provided\nby this source are suitable for editing. See {@link ol.source.VectorTile} for\nvector data that is optimized for rendering.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "extends": "ol.source.Source",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.VectorOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead. A feature will not be added to the source if feature with\nthe same id is already there. The reason for this behavior is to avoid\nfeature duplication when using bbox or tile loading strategies.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.\n\nWhen `useSpatialIndex` is set to false, this method will loop through all\nfeatures, equivalent to {@link ol.source.Vector#forEachFeature}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#getFeaturesCollection",
      "kind": "function",
      "description": "Get the features collection associated with this source. Will be `null`\nunless the source was configured with `useSpatialIndex` set to `false`, or\nwith an {@link ol.Collection} as `features`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#getFeatures",
      "kind": "function",
      "description": "Get all features on the source in random order.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#getFeaturesInExtent",
      "kind": "function",
      "description": "Get all features in the provided extent.  Note that this returns an array of\nall features intersecting the given extent in random order (so it may include\nfeatures whose geometries do not intersect the extent).\n\nThis method is not available when the source is configured with\n`useSpatialIndex` set to `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.\n\nThis method is not available when the source is configured with\n`useSpatialIndex` set to `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_filter",
          "types": [
            "Function"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.\n\nThis method is not available when the source is configured with\n`useSpatialIndex` set to `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#getFormat",
      "kind": "function",
      "description": "Get the format associated with this source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "returns": {
        "types": [
          "ol.format.Feature",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#getUrl",
      "kind": "function",
      "description": "Get the url associated with this source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "returns": {
        "types": [
          "string",
          "ol.FeatureUrlFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#removeLoadedExtent",
      "kind": "function",
      "description": "Remove an extent from the list of loaded extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector#setLoader",
      "kind": "function",
      "description": "Set the new loader of the source. The next loadFeatures call will use the\nnew loader.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "loader",
          "types": [
            "ol.FeatureLoader"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Vector.Event#feature",
      "kind": "member",
      "description": "The feature being added or removed.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "types": [
        "ol.Feature",
        "undefined"
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.VectorTile",
      "kind": "class",
      "description": "Class for layer sources providing vector data divided into a tile grid, to be\nused with {@link ol.layer.VectorTile}. Although this source receives tiles\nwith vector features from the server, it is not meant for feature editing.\nFeatures are optimized for rendering, their geometries are clipped at or near\ntile boundaries and simplified for a view resolution. See\n{@link ol.source.Vector} for vector sources that are suitable for feature\nediting.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vectortile.js",
      "extends": "ol.source.Tile",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.VectorTileOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.VectorTile"
      ]
    },
    {
      "name": "ol.source.VectorTile#clear",
      "kind": "function",
      "description": "clear {@link ol.TileCache} and delete all source tiles",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vectortile.js",
      "provides": [
        "ol.source.VectorTile"
      ]
    },
    {
      "name": "ol.source.WMTS",
      "kind": "class",
      "description": "Layer source for tile data from WMTS servers.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.source.WMTSOptions"
          ]
        }
      ],
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.WMTS#getDimensions",
      "kind": "function",
      "description": "Get the dimensions, i.e. those passed to the constructor through the\n\"dimensions\" option, and possibly updated using the updateDimensions\nmethod.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "returns": {
        "types": [
          "Object"
        ],
        "nullable": false
      },
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.WMTS#getFormat",
      "kind": "function",
      "description": "Return the image format of the WMTS source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.WMTS#getLayer",
      "kind": "function",
      "description": "Return the layer of the WMTS source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.WMTS#getMatrixSet",
      "kind": "function",
      "description": "Return the matrix set of the WMTS source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.WMTS#getRequestEncoding",
      "kind": "function",
      "description": "Return the request encoding, either \"KVP\" or \"REST\".",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "returns": {
        "types": [
          "ol.source.WMTSRequestEncoding"
        ]
      },
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.WMTS#getStyle",
      "kind": "function",
      "description": "Return the style of the WMTS source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.WMTS#getVersion",
      "kind": "function",
      "description": "Return the version of the WMTS source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.WMTS#updateDimensions",
      "kind": "function",
      "description": "Update the dimensions.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "params": [
        {
          "name": "dimensions",
          "types": [
            "Object"
          ]
        }
      ],
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.WMTS.optionsFromCapabilities",
      "kind": "function",
      "description": "Generate source options from a capabilities object.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/wmts.js",
      "params": [
        {
          "name": "wmtsCap",
          "types": [
            "Object"
          ]
        },
        {
          "name": "config",
          "types": [
            "Object"
          ]
        }
      ],
      "returns": {
        "types": [
          "olx.source.WMTSOptions"
        ],
        "nullable": true
      },
      "provides": [
        "ol.source.WMTS"
      ]
    },
    {
      "name": "ol.source.XYZ",
      "kind": "class",
      "description": "Layer source for tile data with URLs in a set XYZ format that are\ndefined in a URL template. By default, this follows the widely-used\nGoogle grid where `x` 0 and `y` 0 are in the top left. Grids like\nTMS where `x` 0 and `y` 0 are in the bottom left can be used by\nusing the `{-y}` placeholder in the URL template, so long as the\nsource does not have a custom tile grid. In this case,\n{@link ol.source.TileImage} can be used with a `tileUrlFunction`\nsuch as:\n\n tileUrlFunction: function(coordinate) {\n   return 'http://mapserver.com/' + coordinate[0] + '/' +\n       coordinate[1] + '/' + coordinate[2] + '.png';\n   }",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/xyz.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.XYZOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.Zoomify",
      "kind": "class",
      "description": "Layer source for tile data in Zoomify format (both Zoomify and Internet\nImaging Protocol are supported).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/zoomify.js",
      "extends": "ol.source.TileImage",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.source.ZoomifyOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Zoomify"
      ]
    },
    {
      "name": "ol.renderer.webgl.ImageLayer",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/webgl/imagelayer.js",
      "extends": "ol.Observable",
      "params": [
        {
          "name": "mapRenderer",
          "types": [
            "ol.renderer.webgl.Map"
          ]
        },
        {
          "name": "imageLayer",
          "types": [
            "ol.layer.Image"
          ]
        }
      ],
      "provides": [
        "ol.renderer.webgl.ImageLayer"
      ]
    },
    {
      "name": "ol.renderer.webgl.Map",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/webgl/map.js",
      "extends": "ol.Disposable",
      "params": [
        {
          "name": "container",
          "types": [
            "Element"
          ]
        },
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.renderer.webgl.Map"
      ]
    },
    {
      "name": "ol.renderer.webgl.TileLayer",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/webgl/tilelayer.js",
      "extends": "ol.Observable",
      "params": [
        {
          "name": "mapRenderer",
          "types": [
            "ol.renderer.webgl.Map"
          ]
        },
        {
          "name": "tileLayer",
          "types": [
            "ol.layer.Tile"
          ]
        }
      ],
      "provides": [
        "ol.renderer.webgl.TileLayer"
      ]
    },
    {
      "name": "ol.renderer.webgl.VectorLayer",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/webgl/vectorlayer.js",
      "extends": "ol.Observable",
      "params": [
        {
          "name": "mapRenderer",
          "types": [
            "ol.renderer.webgl.Map"
          ]
        },
        {
          "name": "vectorLayer",
          "types": [
            "ol.layer.Vector"
          ]
        }
      ],
      "provides": [
        "ol.renderer.webgl.VectorLayer"
      ]
    },
    {
      "name": "ol.renderer.canvas.ImageLayer",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/canvas/imagelayer.js",
      "extends": "ol.Observable",
      "params": [
        {
          "name": "imageLayer",
          "types": [
            "ol.layer.Image"
          ]
        }
      ],
      "provides": [
        "ol.renderer.canvas.ImageLayer"
      ]
    },
    {
      "name": "ol.renderer.canvas.Map",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/canvas/map.js",
      "extends": "ol.Disposable",
      "params": [
        {
          "name": "container",
          "types": [
            "Element"
          ]
        },
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.renderer.canvas.Map"
      ]
    },
    {
      "name": "ol.renderer.canvas.TileLayer",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/canvas/tilelayer.js",
      "extends": "ol.Observable",
      "params": [
        {
          "name": "tileLayer",
          "types": [
            "ol.layer.Tile",
            "ol.layer.VectorTile"
          ]
        }
      ],
      "provides": [
        "ol.renderer.canvas.TileLayer"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorLayer",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/canvas/vectorlayer.js",
      "extends": "ol.Observable",
      "params": [
        {
          "name": "vectorLayer",
          "types": [
            "ol.layer.Vector"
          ]
        }
      ],
      "provides": [
        "ol.renderer.canvas.VectorLayer"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorTileLayer",
      "kind": "class",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/canvas/vectortilelayer.js",
      "extends": "ol.renderer.canvas.TileLayer",
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.VectorTile"
          ]
        }
      ],
      "provides": [
        "ol.renderer.canvas.VectorTileLayer"
      ]
    },
    {
      "name": "ol.render.Event#vectorContext",
      "kind": "member",
      "description": "For canvas, this is an instance of {@link ol.render.canvas.Immediate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/event.js",
      "types": [
        "ol.render.VectorContext",
        "undefined"
      ],
      "provides": [
        "ol.render.Event"
      ]
    },
    {
      "name": "ol.render.Event#frameState",
      "kind": "member",
      "description": "An object representing the current render frame state.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/event.js",
      "types": [
        "olx.FrameState",
        "undefined"
      ],
      "provides": [
        "ol.render.Event"
      ]
    },
    {
      "name": "ol.render.Event#context",
      "kind": "member",
      "description": "Canvas context. Only available when a Canvas renderer is used, null\notherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/event.js",
      "types": [
        "CanvasRenderingContext2D",
        "null",
        "undefined"
      ],
      "provides": [
        "ol.render.Event"
      ]
    },
    {
      "name": "ol.render.Event#glContext",
      "kind": "member",
      "description": "WebGL context. Only available when a WebGL renderer is used, null\notherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/event.js",
      "types": [
        "ol.webgl.Context",
        "null",
        "undefined"
      ],
      "provides": [
        "ol.render.Event"
      ]
    },
    {
      "name": "ol.render.Feature#get",
      "kind": "function",
      "description": "Get a feature property by its key.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/feature.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.render.Feature"
      ]
    },
    {
      "name": "ol.render.Feature#getExtent",
      "kind": "function",
      "description": "Get the extent of this feature's geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/feature.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.render.Feature"
      ]
    },
    {
      "name": "ol.render.Feature#getId",
      "kind": "function",
      "description": "Get the feature identifier.  This is a stable identifier for the feature and\nis set when reading data from a remote source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/feature.js",
      "returns": {
        "types": [
          "number",
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.render.Feature"
      ]
    },
    {
      "name": "ol.render.Feature#getGeometry",
      "kind": "function",
      "description": "For API compatibility with {@link ol.Feature}, this method is useful when\ndetermining the geometry type in style function (see {@link #getType}).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/feature.js",
      "returns": {
        "types": [
          "ol.render.Feature"
        ]
      },
      "provides": [
        "ol.render.Feature"
      ]
    },
    {
      "name": "ol.render.Feature#getProperties",
      "kind": "function",
      "description": "Get the feature properties.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/feature.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.render.Feature"
      ]
    },
    {
      "name": "ol.render.Feature#getType",
      "kind": "function",
      "description": "Get the type of this feature's geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/feature.js",
      "returns": {
        "types": [
          "ol.geom.GeometryType"
        ]
      },
      "provides": [
        "ol.render.Feature"
      ]
    },
    {
      "name": "ol.render.VectorContext",
      "kind": "class",
      "description": "Context for drawing geometries.  A vector context is available on render\nevents and does not need to be constructed directly.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/vectorcontext.js",
      "virtual": true,
      "provides": [
        "ol.render.VectorContext"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#setStyle",
      "kind": "function",
      "description": "Set the rendering style.  Note that since this is an immediate rendering API,\nany `zIndex` on the provided style will be ignored.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/webgl/immediate.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style"
          ]
        }
      ],
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawGeometry",
      "kind": "function",
      "description": "Render a geometry into the canvas.  Call\n{@link ol.render.webgl.Immediate#setStyle} first to set the rendering style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/webgl/immediate.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry",
            "ol.render.Feature"
          ]
        }
      ],
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.webgl.Immediate#drawFeature",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/webgl/immediate.js",
      "provides": [
        "ol.render.webgl.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawCircle",
      "kind": "function",
      "description": "Render a circle geometry into the canvas.  Rendering is immediate and uses\nthe current fill and stroke styles.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/canvas/immediate.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Circle"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setStyle",
      "kind": "function",
      "description": "Set the rendering style.  Note that since this is an immediate rendering API,\nany `zIndex` on the provided style will be ignored.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/canvas/immediate.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawGeometry",
      "kind": "function",
      "description": "Render a geometry into the canvas.  Call\n{@link ol.render.canvas.Immediate#setStyle} first to set the rendering style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/canvas/immediate.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry",
            "ol.render.Feature"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawFeature",
      "kind": "function",
      "description": "Render a feature into the canvas.  Note that any `zIndex` on the provided\nstyle will be ignored - features are rendered immediately in the order that\nthis method is called.  If you need `zIndex` support, you should be using an\n{@link ol.layer.Vector} instead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/canvas/immediate.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "style",
          "types": [
            "ol.style.Style"
          ]
        }
      ],
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.proj.common.add",
      "kind": "member",
      "description": "Deprecated.  Transforms between EPSG:4326 and EPSG:3857 are now included by\ndefault.  There is no need to call this function in application code and it\nwill be removed in a future major release.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/common.js",
      "provides": [
        "ol.proj.common"
      ]
    },
    {
      "name": "ol.proj.Projection",
      "kind": "class",
      "description": "Projection definition class. One of these is created for each projection\nsupported in the application and stored in the {@link ol.proj} namespace.\nYou can use these in applications, but this is not required, as API params\nand options use {@link ol.ProjectionLike} which means the simple string\ncode will suffice.\n\nYou can use {@link ol.proj.get} to retrieve the object for a particular\nprojection.\n\nThe library includes definitions for `EPSG:4326` and `EPSG:3857`, together\nwith the following aliases:\n* `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n    urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n    http://www.opengis.net/gml/srs/epsg.xml#4326,\n    urn:x-ogc:def:crs:EPSG:4326\n* `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n    urn:ogc:def:crs:EPSG:6.18:3:3857,\n    http://www.opengis.net/gml/srs/epsg.xml#3857\n\nIf you use proj4js, aliases can be added using `proj4.defs()`; see\n[documentation](https://github.com/proj4js/proj4js). To set an alternative\nnamespace for proj4, use {@link ol.proj.setProj4}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.ProjectionOptions"
          ]
        }
      ],
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#getCode",
      "kind": "function",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#getExtent",
      "kind": "function",
      "description": "Get the validity extent for this projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#getUnits",
      "kind": "function",
      "description": "Get the units of this projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "returns": {
        "types": [
          "ol.proj.Units"
        ]
      },
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#getMetersPerUnit",
      "kind": "function",
      "description": "Get the amount of meters per unit of this projection.  If the projection is\nnot configured with `metersPerUnit` or a units identifier, the return is\n`undefined`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#getWorldExtent",
      "kind": "function",
      "description": "Get the world extent for this projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#getAxisOrientation",
      "kind": "function",
      "description": "Get the axis orientation of this projection.\nExample values are:\nenu - the default easting, northing, elevation.\nneu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n    or south orientated transverse mercator.\nwnu - westing, northing, up - some planetary coordinate systems have\n    \"west positive\" coordinate systems",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#isGlobal",
      "kind": "function",
      "description": "Is this projection a global projection which spans the whole world?",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#setGlobal",
      "kind": "function",
      "description": "Set if the projection is a global projection which spans the whole world",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "params": [
        {
          "name": "global",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#setExtent",
      "kind": "function",
      "description": "Set the validity extent for this projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#setWorldExtent",
      "kind": "function",
      "description": "Set the world extent for this projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "params": [
        {
          "name": "worldExtent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Projection#setGetPointResolution",
      "kind": "function",
      "description": "Set the getPointResolution function (see {@link ol.proj#getPointResolution}\nfor this projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/projection.js",
      "params": [
        {
          "name": "func",
          "types": [
            "Function"
          ]
        }
      ],
      "provides": [
        "ol.proj.Projection"
      ]
    },
    {
      "name": "ol.proj.Units.METERS_PER_UNIT",
      "kind": "constant",
      "description": "Meters per unit lookup table.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/proj/units.js",
      "types": [
        "Object.<ol.proj.Units, number>"
      ],
      "provides": [
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.layer.Base",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nNote that with `ol.layer.Base` and all its subclasses, any property set in\nthe options is set as a {@link ol.Object} property on the layer object, so\nis observable, and has get/set accessors.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "extends": "ol.Object",
      "virtual": true,
      "params": [
        {
          "name": "options",
          "types": [
            "olx.layer.BaseOptions"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#getExtent",
      "kind": "function",
      "description": "Return the {@link ol.Extent extent} of the layer or `undefined` if it\nwill be visible regardless of extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#getMaxResolution",
      "kind": "function",
      "description": "Return the maximum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#getMinResolution",
      "kind": "function",
      "description": "Return the minimum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#getOpacity",
      "kind": "function",
      "description": "Return the opacity of the layer (between 0 and 1).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#getVisible",
      "kind": "function",
      "description": "Return the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#getZIndex",
      "kind": "function",
      "description": "Return the Z-index of the layer, which is used to order layers before\nrendering. The default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#setMaxResolution",
      "kind": "function",
      "description": "Set the maximum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#setMinResolution",
      "kind": "function",
      "description": "Set the minimum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#setOpacity",
      "kind": "function",
      "description": "Set the opacity of the layer, allowed values range from 0 to 1.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#setVisible",
      "kind": "function",
      "description": "Set the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Base#setZIndex",
      "kind": "function",
      "description": "Set Z-index of the layer, which is used to order layers before rendering.\nThe default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "zindex",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group",
      "kind": "class",
      "description": "A {@link ol.Collection} of layers that are handled together.\n\nA generic `change` event is triggered when the group/Collection changes.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/group.js",
      "extends": "ol.layer.Base",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.GroupOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Group"
      ]
    },
    {
      "name": "ol.layer.Group#getLayers",
      "kind": "function",
      "description": "Returns the {@link ol.Collection collection} of {@link ol.layer.Layer layers}\nin this group.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/group.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.layer.Base>"
        ],
        "nullable": false
      },
      "provides": [
        "ol.layer.Group"
      ]
    },
    {
      "name": "ol.layer.Group#setLayers",
      "kind": "function",
      "description": "Set the {@link ol.Collection collection} of {@link ol.layer.Layer layers}\nin this group.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/group.js",
      "params": [
        {
          "name": "layers",
          "types": [
            "ol.Collection.<ol.layer.Base>"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.layer.Group"
      ]
    },
    {
      "name": "ol.layer.Heatmap",
      "kind": "class",
      "description": "Layer for rendering vector data as a heatmap.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/heatmap.js",
      "extends": "ol.layer.Vector",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.HeatmapOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getBlur",
      "kind": "function",
      "description": "Return the blur size in pixels.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/heatmap.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getGradient",
      "kind": "function",
      "description": "Return the gradient colors as array of strings.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/heatmap.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getRadius",
      "kind": "function",
      "description": "Return the size of the radius in pixels.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/heatmap.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setBlur",
      "kind": "function",
      "description": "Set the blur size in pixels.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/heatmap.js",
      "params": [
        {
          "name": "blur",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setGradient",
      "kind": "function",
      "description": "Set the gradient colors as array of strings.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/heatmap.js",
      "params": [
        {
          "name": "colors",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setRadius",
      "kind": "function",
      "description": "Set the size of the radius in pixels.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/heatmap.js",
      "params": [
        {
          "name": "radius",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Image",
      "kind": "class",
      "description": "Server-rendered images that are available for arbitrary extents and\nresolutions.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/image.js",
      "extends": "ol.layer.Layer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.ImageOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Image"
      ]
    },
    {
      "name": "ol.layer.Image#getSource",
      "kind": "function",
      "description": "Return the associated {@link ol.source.Image source} of the image layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/image.js",
      "returns": {
        "types": [
          "ol.source.Image"
        ]
      },
      "provides": [
        "ol.layer.Image"
      ]
    },
    {
      "name": "ol.layer.Layer",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nA visual representation of raster or vector map data.\nLayers group together those properties that pertain to how the data is to be\ndisplayed, irrespective of the source of that data.\n\nLayers are usually added to a map with {@link ol.Map#addLayer}. Components\nlike {@link ol.interaction.Select} use unmanaged layers internally. These\nunmanaged layers are associated with the map using\n{@link ol.layer.Layer#setMap} instead.\n\nA generic `change` event is fired when the state of the source changes.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "extends": "ol.layer.Base",
      "virtual": true,
      "params": [
        {
          "name": "options",
          "types": [
            "olx.layer.LayerOptions"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Layer#getSource",
      "kind": "function",
      "description": "Get the layer source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "returns": {
        "types": [
          "ol.source.Source"
        ]
      },
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Layer#setMap",
      "kind": "function",
      "description": "Sets the layer to be rendered on top of other layers on a map. The map will\nnot manage this layer in its layers collection, and the callback in\n{@link ol.Map#forEachLayerAtPixel} will receive `null` as layer. This\nis useful for temporary layers. To remove an unmanaged layer from the map,\nuse `#setMap(null)`.\n\nTo add the layer to a map and have it managed by the map, use\n{@link ol.Map#addLayer} instead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Layer#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Tile",
      "kind": "class",
      "description": "For layer sources that provide pre-rendered, tiled images in grids that are\norganized by zoom levels for specific resolutions.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/tile.js",
      "extends": "ol.layer.Layer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.TileOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#getPreload",
      "kind": "function",
      "description": "Return the level as number to which we will preload tiles up to.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/tile.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#getSource",
      "kind": "function",
      "description": "Return the associated {@link ol.source.Tile tilesource} of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/tile.js",
      "returns": {
        "types": [
          "ol.source.Tile"
        ]
      },
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#setPreload",
      "kind": "function",
      "description": "Set the level as number to which we will preload tiles up to.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/tile.js",
      "params": [
        {
          "name": "preload",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#getUseInterimTilesOnError",
      "kind": "function",
      "description": "Whether we use interim tiles on error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/tile.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#setUseInterimTilesOnError",
      "kind": "function",
      "description": "Set whether we use interim tiles on error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/tile.js",
      "params": [
        {
          "name": "useInterimTilesOnError",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Vector",
      "kind": "class",
      "description": "Vector data that is rendered client-side.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "extends": "ol.layer.Layer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.VectorOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getSource",
      "kind": "function",
      "description": "Return the associated {@link ol.source.Vector vectorsource} of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "returns": {
        "types": [
          "ol.source.Vector"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.StyleFunction"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "returns": {
        "types": [
          "ol.StyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles. If it is `undefined` the default style is used. If\nit is `null` the layer has no style (a `null` style), so only features\nthat have their own styles will be rendered in the layer. See\n{@link ol.style} for information on the default style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.StyleFunction",
            "null",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.VectorTile",
      "kind": "class",
      "description": "Layer for vector tile data that is rendered client-side.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vectortile.js",
      "extends": "ol.layer.Vector",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.layer.VectorTileOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.layer.VectorTile"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getPreload",
      "kind": "function",
      "description": "Return the level as number to which we will preload tiles up to.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vectortile.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.VectorTile"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getUseInterimTilesOnError",
      "kind": "function",
      "description": "Whether we use interim tiles on error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vectortile.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.VectorTile"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setPreload",
      "kind": "function",
      "description": "Set the level as number to which we will preload tiles up to.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vectortile.js",
      "params": [
        {
          "name": "preload",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.VectorTile"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setUseInterimTilesOnError",
      "kind": "function",
      "description": "Set whether we use interim tiles on error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vectortile.js",
      "params": [
        {
          "name": "useInterimTilesOnError",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.VectorTile"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getSource",
      "kind": "function",
      "description": "Return the associated {@link ol.source.VectorTile vectortilesource} of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vectortile.js",
      "returns": {
        "types": [
          "ol.source.VectorTile"
        ]
      },
      "provides": [
        "ol.layer.VectorTile"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom",
      "kind": "class",
      "description": "Allows the user to zoom by double-clicking on the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/doubleclickzoom.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DoubleClickZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DoubleClickZoom"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom.handleEvent",
      "kind": "function",
      "description": "Handles the {@link ol.MapBrowserEvent map browser event} (if it was a\ndoubleclick) and eventually zooms the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/doubleclickzoom.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.DoubleClickZoom"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop",
      "kind": "class",
      "description": "Handles input of vector data by drag and drop.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draganddrop.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragAndDropOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragAndDrop"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop.handleEvent",
      "kind": "member",
      "description": "Handles the {@link ol.MapBrowserEvent map browser event} unconditionally and\nneither prevents the browser default nor stops event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draganddrop.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.DragAndDrop"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop.Event#features",
      "kind": "member",
      "description": "The features parsed from dropped data.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draganddrop.js",
      "types": [
        "Array.<ol.Feature>",
        "undefined"
      ],
      "provides": [
        "ol.interaction.DragAndDrop"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop.Event#file",
      "kind": "member",
      "description": "The dropped file.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draganddrop.js",
      "types": [
        "File"
      ],
      "provides": [
        "ol.interaction.DragAndDrop"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop.Event#projection",
      "kind": "member",
      "description": "The feature projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draganddrop.js",
      "types": [
        "ol.proj.Projection",
        "undefined"
      ],
      "provides": [
        "ol.interaction.DragAndDrop"
      ]
    },
    {
      "name": "ol.interaction.DragBox",
      "kind": "class",
      "description": "Allows the user to draw a vector box by clicking and dragging on the map,\nnormally combined with an {@link ol.events.condition} that limits\nit to when the shift or other key is held down. This is used, for example,\nfor zooming to a specific area of the map\n(see {@link ol.interaction.DragZoom} and\n{@link ol.interaction.DragRotateAndZoom}).\n\nThis interaction is only supported for mouse devices.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/dragbox.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragBoxOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getGeometry",
      "kind": "function",
      "description": "Returns geometry of last drawn box.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/dragbox.js",
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragBox.Event#coordinate",
      "kind": "constant",
      "description": "The coordinate of the drag event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/dragbox.js",
      "types": [
        "ol.Coordinate"
      ],
      "provides": [
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragBox.Event#mapBrowserEvent",
      "kind": "constant",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/dragbox.js",
      "types": [
        "ol.MapBrowserEvent"
      ],
      "provides": [
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragPan",
      "kind": "class",
      "description": "Allows the user to pan the map by dragging the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/dragpan.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragPanOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragPan"
      ]
    },
    {
      "name": "ol.interaction.DragRotate",
      "kind": "class",
      "description": "Allows the user to rotate the map by clicking and dragging on the map,\nnormally combined with an {@link ol.events.condition} that limits\nit to when the alt and shift keys are held down.\n\nThis interaction is only supported for mouse devices.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/dragrotate.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragRotateOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragRotate"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom",
      "kind": "class",
      "description": "Allows the user to zoom and rotate the map by clicking and dragging\non the map.  By default, this interaction is limited to when the shift\nkey is held down.\n\nThis interaction is only supported for mouse devices.\n\nAnd this interaction is not included in the default interactions.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/dragrotateandzoom.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragRotateAndZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragRotateAndZoom"
      ]
    },
    {
      "name": "ol.interaction.DragZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map by clicking and dragging on the map,\nnormally combined with an {@link ol.events.condition} that limits\nit to when a key, shift by default, is held down.\n\nTo change the style of the box, use CSS and the `.ol-dragzoom` selector, or\nyour custom one configured with `className`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/dragzoom.js",
      "extends": "ol.interaction.DragBox",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.DragZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.DragZoom"
      ]
    },
    {
      "name": "ol.interaction.Draw",
      "kind": "class",
      "description": "Interaction for drawing feature geometries.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draw.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.interaction.DrawOptions"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw.handleEvent",
      "kind": "function",
      "description": "Handles the {@link ol.MapBrowserEvent map browser event} and may actually\ndraw or finish the drawing.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draw.js",
      "params": [
        {
          "name": "event",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw#removeLastPoint",
      "kind": "function",
      "description": "Remove last point of the feature currently being drawn.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draw.js",
      "provides": [
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw#finishDrawing",
      "kind": "function",
      "description": "Stop drawing and add the sketch feature to the target layer.\nThe {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\ninserting the feature.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draw.js",
      "provides": [
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw#extend",
      "kind": "function",
      "description": "Extend an existing geometry by adding additional points. This only works\non features with `LineString` geometries, where the interaction will\nextend lines by adding points to the end of the coordinates array.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draw.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw.createRegularPolygon",
      "kind": "function",
      "description": "Create a `geometryFunction` for `type: 'Circle'` that will create a regular\npolygon with a user specified number of sides and start angle instead of an\n`ol.geom.Circle` geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draw.js",
      "params": [
        {
          "name": "opt_sides",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_angle",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.DrawGeometryFunctionType"
        ]
      },
      "provides": [
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw.createBox",
      "kind": "function",
      "description": "Create a `geometryFunction` that will create a box-shaped polygon (aligned\nwith the coordinate system axes).  Use this with the draw interaction and\n`type: 'Circle'` to return a box instead of a circle geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draw.js",
      "returns": {
        "types": [
          "ol.DrawGeometryFunctionType"
        ]
      },
      "provides": [
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw.Event#feature",
      "kind": "member",
      "description": "The feature being drawn.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/draw.js",
      "types": [
        "ol.Feature"
      ],
      "provides": [
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Extent",
      "kind": "class",
      "description": "Allows the user to draw a vector box by clicking and dragging on the map.\nOnce drawn, the vector box can be modified by dragging its vertices or edges.\nThis interaction is only supported for mouse devices.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/extent.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.ExtentOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.Extent"
      ]
    },
    {
      "name": "ol.interaction.Extent#getExtent",
      "kind": "function",
      "description": "Returns the current drawn extent in the view projection",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/extent.js",
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.interaction.Extent"
      ]
    },
    {
      "name": "ol.interaction.Extent#setExtent",
      "kind": "function",
      "description": "Manually sets the drawn extent, using the view projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/extent.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Extent"
      ]
    },
    {
      "name": "ol.interaction.Extent.Event#extent",
      "kind": "member",
      "description": "The current extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/extent.js",
      "types": [
        "ol.Extent"
      ],
      "provides": [
        "ol.interaction.Extent"
      ]
    },
    {
      "name": "ol.interaction.Interaction",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nUser actions that change the state of the map. Some are similar to controls,\nbut are not associated with a DOM element.\nFor example, {@link ol.interaction.KeyboardZoom} is functionally the same as\n{@link ol.control.Zoom}, but triggered by a keyboard event not a button\nelement event.\nAlthough interactions do not have a DOM element, some of them do render\nvectors and so are visible on the screen.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.interaction.InteractionOptions"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Interaction#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan",
      "kind": "class",
      "description": "Allows the user to pan the map using keyboard arrows.\nNote that, although this interaction is by default included in maps,\nthe keys can only be used when browser focus is on the element to which\nthe keyboard events are attached. By default, this is the map div,\nthough you can change this with the `keyboardEventTarget` in\n{@link ol.Map}. `document` never loses focus but, for any other element,\nfocus will have to be on, and returned to, this element if the keys are to\nfunction.\nSee also {@link ol.interaction.KeyboardZoom}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/keyboardpan.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.KeyboardPanOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.KeyboardPan"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan.handleEvent",
      "kind": "function",
      "description": "Handles the {@link ol.MapBrowserEvent map browser event} if it was a\n`KeyEvent`, and decides the direction to pan to (if an arrow key was\npressed).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/keyboardpan.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.KeyboardPan"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map using keyboard + and -.\nNote that, although this interaction is by default included in maps,\nthe keys can only be used when browser focus is on the element to which\nthe keyboard events are attached. By default, this is the map div,\nthough you can change this with the `keyboardEventTarget` in\n{@link ol.Map}. `document` never loses focus but, for any other element,\nfocus will have to be on, and returned to, this element if the keys are to\nfunction.\nSee also {@link ol.interaction.KeyboardPan}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/keyboardzoom.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.KeyboardZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.KeyboardZoom"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom.handleEvent",
      "kind": "function",
      "description": "Handles the {@link ol.MapBrowserEvent map browser event} if it was a\n`KeyEvent`, and decides whether to zoom in or out (depending on whether the\nkey pressed was '+' or '-').",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/keyboardzoom.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.KeyboardZoom"
      ]
    },
    {
      "name": "ol.interaction.Modify",
      "kind": "class",
      "description": "Interaction for modifying feature geometries.  To modify features that have\nbeen added to an existing source, construct the modify interaction with the\n`source` option.  If you want to modify features in a collection (for example,\nthe collection used by a select interaction), construct the interaction with\nthe `features` option.  The interaction must be constructed with either a\n`source` or `features` option.\n\nBy default, the interaction will allow deletion of vertices when the `alt`\nkey is pressed.  To configure the interaction with a different condition\nfor deletion, use the `deleteCondition` option.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/modify.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.interaction.ModifyOptions"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Modify"
      ]
    },
    {
      "name": "ol.interaction.Modify.handleEvent",
      "kind": "function",
      "description": "Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\ngeometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/modify.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Modify"
      ]
    },
    {
      "name": "ol.interaction.Modify#removePoint",
      "kind": "function",
      "description": "Removes the vertex currently being pointed.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/modify.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Modify"
      ]
    },
    {
      "name": "ol.interaction.Modify.Event#features",
      "kind": "member",
      "description": "The features being modified.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/modify.js",
      "types": [
        "ol.Collection.<ol.Feature>"
      ],
      "provides": [
        "ol.interaction.Modify"
      ]
    },
    {
      "name": "ol.interaction.Modify.Event#mapBrowserEvent",
      "kind": "member",
      "description": "Associated {@link ol.MapBrowserEvent}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/modify.js",
      "types": [
        "ol.MapBrowserEvent"
      ],
      "provides": [
        "ol.interaction.Modify"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map by scrolling the mouse wheel.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/mousewheelzoom.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.MouseWheelZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.MouseWheelZoom"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom.handleEvent",
      "kind": "function",
      "description": "Handles the {@link ol.MapBrowserEvent map browser event} (if it was a\nmousewheel-event) and eventually zooms the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/mousewheelzoom.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.MouseWheelZoom"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#setMouseAnchor",
      "kind": "function",
      "description": "Enable or disable using the mouse's location as an anchor when zooming",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/mousewheelzoom.js",
      "params": [
        {
          "name": "useAnchor",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.MouseWheelZoom"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate",
      "kind": "class",
      "description": "Allows the user to rotate the map by twisting with two fingers\non a touch screen.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/pinchrotate.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.PinchRotateOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.PinchRotate"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map by pinching with two fingers\non a touch screen.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/pinchzoom.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.PinchZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.PinchZoom"
      ]
    },
    {
      "name": "ol.interaction.Pointer",
      "kind": "class",
      "description": "Base class that calls user-defined functions on `down`, `move` and `up`\nevents. This class also manages \"drag sequences\".\n\nWhen the `handleDownEvent` user function returns `true` a drag sequence is\nstarted. During a drag sequence the `handleDragEvent` user function is\ncalled on `move` events. The drag sequence ends when the `handleUpEvent`\nuser function is called and returns `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/pointer.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.PointerOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.Pointer"
      ]
    },
    {
      "name": "ol.interaction.Pointer.handleEvent",
      "kind": "function",
      "description": "Handles the {@link ol.MapBrowserEvent map browser event} and may call into\nother functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\ndetected.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/pointer.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Pointer"
      ]
    },
    {
      "name": "ol.interaction.Select",
      "kind": "class",
      "description": "Interaction for selecting vector features. By default, selected features are\nstyled differently, so this interaction can be used for visual highlighting,\nas well as selecting features for other actions, such as modification or\noutput. There are three ways of controlling which features are selected:\nusing the browser event as defined by the `condition` and optionally the\n`toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\nfurther feature filter using the `filter` option.\n\nSelected features are added to an internal unmanaged layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "extends": "ol.interaction.Interaction",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.SelectOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#getFeatures",
      "kind": "function",
      "description": "Get the selected features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#getHitTolerance",
      "kind": "function",
      "description": "Returns the Hit-detection tolerance.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#getLayer",
      "kind": "function",
      "description": "Returns the associated {@link ol.layer.Vector vectorlayer} of\nthe (last) selected feature. Note that this will not work with any\nprogrammatic method like pushing features to\n{@link ol.interaction.Select#getFeatures collection}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature",
            "ol.render.Feature"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.layer.Vector"
        ]
      },
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select.handleEvent",
      "kind": "function",
      "description": "Handles the {@link ol.MapBrowserEvent map browser event} and may change the\nselected state of features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#setHitTolerance",
      "kind": "function",
      "description": "Hit-detection tolerance. Pixels inside the radius around the given position\nwill be checked for features. This only works for the canvas renderer and\nnot for WebGL.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "params": [
        {
          "name": "hitTolerance",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#setMap",
      "kind": "function",
      "description": "Remove the interaction from its current map, if any,  and attach it to a new\nmap, if any. Pass `null` to just remove the interaction from the current map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select.Event#selected",
      "kind": "member",
      "description": "Selected features array.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "types": [
        "Array.<ol.Feature>"
      ],
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select.Event#deselected",
      "kind": "member",
      "description": "Deselected features array.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "types": [
        "Array.<ol.Feature>"
      ],
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select.Event#mapBrowserEvent",
      "kind": "member",
      "description": "Associated {@link ol.MapBrowserEvent}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/select.js",
      "types": [
        "ol.MapBrowserEvent"
      ],
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Snap",
      "kind": "class",
      "description": "Handles snapping of vector features while modifying or drawing them.  The\nfeatures can come from a {@link ol.source.Vector} or {@link ol.Collection}\nAny interaction object that allows the user to interact\nwith the features using the mouse can benefit from the snapping, as long\nas it is added before.\n\nThe snap interaction modifies map browser event `coordinate` and `pixel`\nproperties to force the snap to occur to any interaction that them.\n\nExample:\n\n    var snap = new ol.interaction.Snap({\n      source: source\n    });",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/snap.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.SnapOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.Snap"
      ]
    },
    {
      "name": "ol.interaction.Snap#addFeature",
      "kind": "function",
      "description": "Add a feature to the collection of features that we may snap to.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/snap.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "opt_listen",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.Snap"
      ]
    },
    {
      "name": "ol.interaction.Snap#removeFeature",
      "kind": "function",
      "description": "Remove a feature from the collection of features that we may snap to.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/snap.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "opt_unlisten",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.Snap"
      ]
    },
    {
      "name": "ol.interaction.Translate",
      "kind": "class",
      "description": "Interaction for translating (moving) features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/translate.js",
      "extends": "ol.interaction.Pointer",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.interaction.TranslateOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.interaction.Translate"
      ]
    },
    {
      "name": "ol.interaction.Translate#getHitTolerance",
      "kind": "function",
      "description": "Returns the Hit-detection tolerance.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/translate.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.interaction.Translate"
      ]
    },
    {
      "name": "ol.interaction.Translate#setHitTolerance",
      "kind": "function",
      "description": "Hit-detection tolerance. Pixels inside the radius around the given position\nwill be checked for features. This only works for the canvas renderer and\nnot for WebGL.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/translate.js",
      "params": [
        {
          "name": "hitTolerance",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Translate"
      ]
    },
    {
      "name": "ol.interaction.Translate.Event#features",
      "kind": "member",
      "description": "The features being translated.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/translate.js",
      "types": [
        "ol.Collection.<ol.Feature>"
      ],
      "provides": [
        "ol.interaction.Translate"
      ]
    },
    {
      "name": "ol.interaction.Translate.Event#coordinate",
      "kind": "constant",
      "description": "The coordinate of the drag event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/translate.js",
      "types": [
        "ol.Coordinate"
      ],
      "provides": [
        "ol.interaction.Translate"
      ]
    },
    {
      "name": "ol.geom.Circle",
      "kind": "class",
      "description": "Circle geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_radius",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "returns": {
        "types": [
          "ol.geom.Circle"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getCenter",
      "kind": "function",
      "description": "Return the center of the circle as {@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getRadius",
      "kind": "function",
      "description": "Return the radius of the circle.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setCenter",
      "kind": "function",
      "description": "Set the center of the circle as {@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setCenterAndRadius",
      "kind": "function",
      "description": "Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\nnumber) of the circle.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "params": [
        {
          "name": "center",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "radius",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setRadius",
      "kind": "function",
      "description": "Set the radius of the circle. The radius is in the units of the projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "params": [
        {
          "name": "radius",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#transform",
      "kind": "function",
      "description": "Transform each coordinate of the circle from one coordinate reference system\nto another. The geometry is modified in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.\n\nInternally a circle is currently represented by two points: the center of\nthe circle `[cx, cy]`, and the point to the right of the circle\n`[cx + r, cy]`. This `transform` function just transforms these two points.\nSo the resulting geometry is also a circle, and that circle does not\ncorrespond to the shape that would be obtained by transforming every point\nof the original circle.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/circle.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Circle"
        ]
      },
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Geometry",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for vector geometries.\n\nTo get notified of changes to the geometry, register a listener for the\ngeneric `change` event on your geometry instance.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "extends": "ol.Object",
      "virtual": true,
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Geometry#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Geometry#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Geometry#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Geometry#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "virtual": true,
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Geometry#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "virtual": true,
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Geometry#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Geometry#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection",
      "kind": "class",
      "description": "An array of {@link ol.geom.Geometry} objects.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometrycollection.js",
      "extends": "ol.geom.Geometry",
      "params": [
        {
          "name": "opt_geometries",
          "types": [
            "Array.<ol.geom.Geometry>"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometrycollection.js",
      "returns": {
        "types": [
          "ol.geom.GeometryCollection"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getGeometries",
      "kind": "function",
      "description": "Return the geometries that make up this geometry collection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometrycollection.js",
      "returns": {
        "types": [
          "Array.<ol.geom.Geometry>"
        ]
      },
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#setGeometries",
      "kind": "function",
      "description": "Set the geometries that make up this geometry collection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometrycollection.js",
      "params": [
        {
          "name": "geometries",
          "types": [
            "Array.<ol.geom.Geometry>"
          ]
        }
      ],
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#applyTransform",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#translate",
      "kind": "function",
      "description": "Translate the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometrycollection.js",
      "params": [
        {
          "name": "deltaX",
          "types": [
            "number"
          ]
        },
        {
          "name": "deltaY",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.LinearRing",
      "kind": "class",
      "description": "Linear ring geometry. Only used as part of polygon; cannot be rendered\non its own.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linearring.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linearring.js",
      "returns": {
        "types": [
          "ol.geom.LinearRing"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getArea",
      "kind": "function",
      "description": "Return the area of the linear ring on projected plane.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linearring.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getCoordinates",
      "kind": "function",
      "description": "Return the coordinates of the linear ring.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linearring.js",
      "returns": {
        "types": [
          "Array.<ol.Coordinate>"
        ]
      },
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#setCoordinates",
      "kind": "function",
      "description": "Set the coordinates of the linear ring.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linearring.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LineString",
      "kind": "class",
      "description": "Linestring geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#appendCoordinate",
      "kind": "function",
      "description": "Append the passed coordinate to the coordinates of the linestring.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "returns": {
        "types": [
          "ol.geom.LineString"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#forEachSegment",
      "kind": "function",
      "description": "Iterate over each segment, calling the provided callback.\nIf the callback returns a truthy value the function returns that\nvalue immediately. Otherwise the function returns `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "S"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "T",
          "boolean"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getCoordinateAtM",
      "kind": "function",
      "description": "Returns the coordinate at `m` using linear interpolation, or `null` if no\nsuch coordinate exists.\n\n`opt_extrapolate` controls extrapolation beyond the range of Ms in the\nMultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\nM will return the first coordinate and Ms greater than the last M will\nreturn the last coordinate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "params": [
        {
          "name": "m",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_extrapolate",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getCoordinates",
      "kind": "function",
      "description": "Return the coordinates of the linestring.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "returns": {
        "types": [
          "Array.<ol.Coordinate>"
        ]
      },
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getCoordinateAt",
      "kind": "function",
      "description": "Return the coordinate at the provided fraction along the linestring.\nThe `fraction` is a number between 0 and 1, where 0 is the start of the\nlinestring and 1 is the end.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "params": [
        {
          "name": "fraction",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_dest",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getLength",
      "kind": "function",
      "description": "Return the length of the linestring on projected plane.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#setCoordinates",
      "kind": "function",
      "description": "Set the coordinates of the linestring.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/linestring.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString",
      "kind": "class",
      "description": "Multi-linestring geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<ol.Coordinate>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#appendLineString",
      "kind": "function",
      "description": "Append the passed linestring to the multilinestring.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "params": [
        {
          "name": "lineString",
          "types": [
            "ol.geom.LineString"
          ]
        }
      ],
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "returns": {
        "types": [
          "ol.geom.MultiLineString"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getCoordinateAtM",
      "kind": "function",
      "description": "Returns the coordinate at `m` using linear interpolation, or `null` if no\nsuch coordinate exists.\n\n`opt_extrapolate` controls extrapolation beyond the range of Ms in the\nMultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\nM will return the first coordinate and Ms greater than the last M will\nreturn the last coordinate.\n\n`opt_interpolate` controls interpolation between consecutive LineStrings\nwithin the MultiLineString. If `opt_interpolate` is `true` the coordinates\nwill be linearly interpolated between the last coordinate of one LineString\nand the first coordinate of the next LineString.  If `opt_interpolate` is\n`false` then the function will return `null` for Ms falling between\nLineStrings.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "params": [
        {
          "name": "m",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_extrapolate",
          "types": [
            "boolean"
          ],
          "optional": true
        },
        {
          "name": "opt_interpolate",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getCoordinates",
      "kind": "function",
      "description": "Return the coordinates of the multilinestring.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "returns": {
        "types": [
          "Array.<Array.<ol.Coordinate>>"
        ]
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLineString",
      "kind": "function",
      "description": "Return the linestring at the specified index.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.LineString"
        ]
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLineStrings",
      "kind": "function",
      "description": "Return the linestrings of this multilinestring.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "returns": {
        "types": [
          "Array.<ol.geom.LineString>"
        ]
      },
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#setCoordinates",
      "kind": "function",
      "description": "Set the coordinates of the multilinestring.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multilinestring.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<ol.Coordinate>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiPoint",
      "kind": "class",
      "description": "Multi-point geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipoint.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#appendPoint",
      "kind": "function",
      "description": "Append the passed point to this multipoint.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipoint.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.geom.Point"
          ]
        }
      ],
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipoint.js",
      "returns": {
        "types": [
          "ol.geom.MultiPoint"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getCoordinates",
      "kind": "function",
      "description": "Return the coordinates of the multipoint.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipoint.js",
      "returns": {
        "types": [
          "Array.<ol.Coordinate>"
        ]
      },
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getPoint",
      "kind": "function",
      "description": "Return the point at the specified index.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipoint.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Point"
        ]
      },
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getPoints",
      "kind": "function",
      "description": "Return the points of this multipoint.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipoint.js",
      "returns": {
        "types": [
          "Array.<ol.geom.Point>"
        ]
      },
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#setCoordinates",
      "kind": "function",
      "description": "Set the coordinates of the multipoint.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipoint.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<ol.Coordinate>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon",
      "kind": "class",
      "description": "Multi-polygon geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<Array.<ol.Coordinate>>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#appendPolygon",
      "kind": "function",
      "description": "Append the passed polygon to this multipolygon.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "params": [
        {
          "name": "polygon",
          "types": [
            "ol.geom.Polygon"
          ]
        }
      ],
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "returns": {
        "types": [
          "ol.geom.MultiPolygon"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getArea",
      "kind": "function",
      "description": "Return the area of the multipolygon on projected plane.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getCoordinates",
      "kind": "function",
      "description": "Get the coordinate array for this geometry.  This array has the structure\nof a GeoJSON coordinate array for multi-polygons.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "params": [
        {
          "name": "opt_right",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<Array.<Array.<ol.Coordinate>>>"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getInteriorPoints",
      "kind": "function",
      "description": "Return the interior points as {@link ol.geom.MultiPoint multipoint}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "returns": {
        "types": [
          "ol.geom.MultiPoint"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getPolygon",
      "kind": "function",
      "description": "Return the polygon at the specified index.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getPolygons",
      "kind": "function",
      "description": "Return the polygons of this multipolygon.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "returns": {
        "types": [
          "Array.<ol.geom.Polygon>"
        ]
      },
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#setCoordinates",
      "kind": "function",
      "description": "Set the coordinates of the multipolygon.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/multipolygon.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<Array.<ol.Coordinate>>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.Point",
      "kind": "class",
      "description": "Point geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/point.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/point.js",
      "returns": {
        "types": [
          "ol.geom.Point"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#getCoordinates",
      "kind": "function",
      "description": "Return the coordinate of the point.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/point.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#setCoordinates",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Polygon",
      "kind": "class",
      "description": "Polygon geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "extends": "ol.geom.SimpleGeometry",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<ol.Coordinate>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#appendLinearRing",
      "kind": "function",
      "description": "Append the passed linear ring to this polygon.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "linearRing",
          "types": [
            "ol.geom.LinearRing"
          ]
        }
      ],
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ],
        "nullable": false
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getArea",
      "kind": "function",
      "description": "Return the area of the polygon on projected plane.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getCoordinates",
      "kind": "function",
      "description": "Get the coordinate array for this geometry.  This array has the structure\nof a GeoJSON coordinate array for polygons.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "opt_right",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<Array.<ol.Coordinate>>"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getInteriorPoint",
      "kind": "function",
      "description": "Return an interior point of the polygon.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "ol.geom.Point"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRingCount",
      "kind": "function",
      "description": "Return the number of rings of the polygon,  this includes the exterior\nring and any interior rings.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRing",
      "kind": "function",
      "description": "Return the Nth linear ring of the polygon geometry. Return `null` if the\ngiven index is out of range.\nThe exterior linear ring is available at index `0` and the interior rings\nat index `1` and beyond.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "index",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.LinearRing"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRings",
      "kind": "function",
      "description": "Return the linear rings of the polygon.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "returns": {
        "types": [
          "Array.<ol.geom.LinearRing>"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getType",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#intersectsExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#setCoordinates",
      "kind": "function",
      "description": "Set the coordinates of the polygon.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "coordinates",
          "types": [
            "Array.<Array.<ol.Coordinate>>"
          ]
        },
        {
          "name": "opt_layout",
          "types": [
            "ol.geom.GeometryLayout"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon.circular",
      "kind": "function",
      "description": "Create an approximation of a circle on the surface of a sphere.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "sphere",
          "types": [
            "ol.Sphere"
          ]
        },
        {
          "name": "center",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "radius",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_n",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon.fromExtent",
      "kind": "function",
      "description": "Create a polygon from an extent. The layout used is `XY`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon.fromCircle",
      "kind": "function",
      "description": "Create a regular polygon from a circle.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/polygon.js",
      "params": [
        {
          "name": "circle",
          "types": [
            "ol.geom.Circle"
          ]
        },
        {
          "name": "opt_sides",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_angle",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry",
      "kind": "class",
      "description": "Abstract base class; only used for creating subclasses; do not instantiate\nin apps, as cannot be rendered.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "extends": "ol.geom.Geometry",
      "virtual": true,
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getFirstCoordinate",
      "kind": "function",
      "description": "Return the first coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getLastCoordinate",
      "kind": "function",
      "description": "Return the last coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getLayout",
      "kind": "function",
      "description": "Return the {@link ol.geom.GeometryLayout layout} of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#applyTransform",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#translate",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.format.EsriJSON",
      "kind": "class",
      "description": "Feature format for reading and writing data in the EsriJSON format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.EsriJSONOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#readFeature",
      "kind": "function",
      "description": "Read a feature from a EsriJSON Feature source.  Only works for Feature,\nuse `readFeatures` to read FeatureCollection source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#readFeatures",
      "kind": "function",
      "description": "Read all features from a EsriJSON source.  Works with both Feature and\nFeatureCollection sources.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#readGeometry",
      "kind": "function",
      "description": "Read a geometry from a EsriJSON source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#readProjection",
      "kind": "function",
      "description": "Read the projection from a EsriJSON source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ArrayBuffer",
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#writeGeometry",
      "kind": "function",
      "description": "Encode a geometry as a EsriJSON string.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#writeGeometryObject",
      "kind": "function",
      "description": "Encode a geometry as a EsriJSON object.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "EsriJSONGeometry"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#writeFeature",
      "kind": "function",
      "description": "Encode a feature as a EsriJSON Feature string.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#writeFeatureObject",
      "kind": "function",
      "description": "Encode a feature as a esriJSON Feature object.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features as EsriJSON.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.EsriJSON#writeFeaturesObject",
      "kind": "function",
      "description": "Encode an array of features as a EsriJSON object.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/esrijson.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.format.EsriJSON"
      ]
    },
    {
      "name": "ol.format.Feature",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for feature formats.\n{ol.format.Feature} subclasses provide the ability to decode and encode\n{@link ol.Feature} objects from a variety of commonly used geospatial\nfile formats.  See the documentation for each format for more details.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/feature.js",
      "virtual": true,
      "provides": [
        "ol.format.Feature"
      ]
    },
    {
      "name": "ol.format.filter.and",
      "kind": "function",
      "description": "Create a logical `<And>` operator between two or more filter conditions.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "conditions",
          "types": [
            "ol.format.filter.Filter"
          ],
          "variable": true
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.And"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.or",
      "kind": "function",
      "description": "Create a logical `<Or>` operator between two or more filter conditions.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "conditions",
          "types": [
            "ol.format.filter.Filter"
          ],
          "variable": true
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.Or"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.not",
      "kind": "function",
      "description": "Represents a logical `<Not>` operator for a filter condition.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "condition",
          "types": [
            "ol.format.filter.Filter"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.Not"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.bbox",
      "kind": "function",
      "description": "Create a `<BBOX>` operator to test whether a geometry-valued property\nintersects a fixed bounding box",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "geometryName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ],
          "nullable": false
        },
        {
          "name": "opt_srsName",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.Bbox"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.contains",
      "kind": "function",
      "description": "Create a `<Contains>` operator to test whether a geometry-valued property\ncontains a given geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "geometryName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ],
          "nullable": false
        },
        {
          "name": "opt_srsName",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.Contains"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.intersects",
      "kind": "function",
      "description": "Create a `<Intersects>` operator to test whether a geometry-valued property\nintersects a given geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "geometryName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ],
          "nullable": false
        },
        {
          "name": "opt_srsName",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.Intersects"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.within",
      "kind": "function",
      "description": "Create a `<Within>` operator to test whether a geometry-valued property\nis within a given geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "geometryName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ],
          "nullable": false
        },
        {
          "name": "opt_srsName",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.Within"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.equalTo",
      "kind": "function",
      "description": "Creates a `<PropertyIsEqualTo>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "string",
            "number"
          ],
          "nullable": false
        },
        {
          "name": "opt_matchCase",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.EqualTo"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.notEqualTo",
      "kind": "function",
      "description": "Creates a `<PropertyIsNotEqualTo>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "string",
            "number"
          ],
          "nullable": false
        },
        {
          "name": "opt_matchCase",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.NotEqualTo"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.lessThan",
      "kind": "function",
      "description": "Creates a `<PropertyIsLessThan>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.LessThan"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.lessThanOrEqualTo",
      "kind": "function",
      "description": "Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.LessThanOrEqualTo"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.greaterThan",
      "kind": "function",
      "description": "Creates a `<PropertyIsGreaterThan>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.GreaterThan"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.greaterThanOrEqualTo",
      "kind": "function",
      "description": "Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.GreaterThanOrEqualTo"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.isNull",
      "kind": "function",
      "description": "Creates a `<PropertyIsNull>` comparison operator to test whether a property value\nis null.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.IsNull"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.between",
      "kind": "function",
      "description": "Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\nvalue lies within a range given by a lower and upper bound (inclusive).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "lowerBoundary",
          "types": [
            "number"
          ],
          "nullable": false
        },
        {
          "name": "upperBoundary",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.IsBetween"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.like",
      "kind": "function",
      "description": "Represents a `<PropertyIsLike>` comparison operator that matches a string property\nvalue against a text pattern.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "pattern",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "opt_wildCard",
          "types": [
            "string"
          ],
          "optional": true
        },
        {
          "name": "opt_singleChar",
          "types": [
            "string"
          ],
          "optional": true
        },
        {
          "name": "opt_escapeChar",
          "types": [
            "string"
          ],
          "optional": true
        },
        {
          "name": "opt_matchCase",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.IsLike"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.filter.during",
      "kind": "function",
      "description": "Create a `<During>` temporal operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter.js",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "begin",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "end",
          "types": [
            "string"
          ],
          "nullable": false
        }
      ],
      "returns": {
        "types": [
          "ol.format.filter.During"
        ],
        "nullable": false
      },
      "provides": [
        "ol.format.filter"
      ]
    },
    {
      "name": "ol.format.GeoJSON",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GeoJSON format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GeoJSONOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readFeature",
      "kind": "function",
      "description": "Read a feature from a GeoJSON Feature source.  Only works for Feature or\ngeometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\nFeatureCollection source. If feature at source has an id, it will be used\nas Feature id by calling {@link ol.Feature#setId} internally.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readFeatures",
      "kind": "function",
      "description": "Read all features from a GeoJSON source.  Works for all GeoJSON types.\nIf the source includes only geometries, features will be created with those\ngeometries.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readGeometry",
      "kind": "function",
      "description": "Read a geometry from a GeoJSON source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readProjection",
      "kind": "function",
      "description": "Read the projection from a GeoJSON source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeature",
      "kind": "function",
      "description": "Encode a feature as a GeoJSON Feature string.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeatureObject",
      "kind": "function",
      "description": "Encode a feature as a GeoJSON Feature object.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "GeoJSONFeature"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features as GeoJSON.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeaturesObject",
      "kind": "function",
      "description": "Encode an array of features as a GeoJSON object.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "GeoJSONFeatureCollection"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeGeometry",
      "kind": "function",
      "description": "Encode a geometry as a GeoJSON string.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeGeometryObject",
      "kind": "function",
      "description": "Encode a geometry as a GeoJSON object.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/geojson.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "GeoJSONGeometry",
          "GeoJSONGeometryCollection"
        ]
      },
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GML",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GML format\nversion 3.1.1.\nCurrently only supports GML 3.1.1 Simple Features profile.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gml.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GML"
      ]
    },
    {
      "name": "ol.format.GML#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in GML 3.1.1 Simple Features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gml.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GML"
      ]
    },
    {
      "name": "ol.format.GML#writeFeaturesNode",
      "kind": "function",
      "description": "Encode an array of features in the GML 3.1.1 format as an XML node.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gml.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.GML"
      ]
    },
    {
      "name": "ol.format.GML2",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GML format,\nversion 2.1.2.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gml2.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GML2"
      ]
    },
    {
      "name": "ol.format.GML3",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GML format\nversion 3.1.1.\nCurrently only supports GML 3.1.1 Simple Features profile.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gml3.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GML3#writeGeometryNode",
      "kind": "function",
      "description": "Encode a geometry in GML 3.1.1 Simple Features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gml3.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GML3#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in GML 3.1.1 Simple Features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gml3.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GML3#writeFeaturesNode",
      "kind": "function",
      "description": "Encode an array of features in the GML 3.1.1 format as an XML node.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gml3.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.GML3"
      ]
    },
    {
      "name": "ol.format.GMLBase#readFeatures",
      "kind": "function",
      "description": "Read all features from a GML FeatureCollection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gmlbase.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GMLBase"
      ]
    },
    {
      "name": "ol.format.GPX",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GPX format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gpx.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GPXOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#readFeature",
      "kind": "function",
      "description": "Read the first feature from a GPX source.\nRoutes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\ninto MultiLineString. Any properties on route and track waypoints are ignored.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gpx.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#readFeatures",
      "kind": "function",
      "description": "Read all features from a GPX source.\nRoutes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\ninto MultiLineString. Any properties on route and track waypoints are ignored.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gpx.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#readProjection",
      "kind": "function",
      "description": "Read the projection from a GPX source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gpx.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in the GPX format.\nLineString geometries are output as routes (`<rte>`), and MultiLineString\nas tracks (`<trk>`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gpx.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.GPX#writeFeaturesNode",
      "kind": "function",
      "description": "Encode an array of features in the GPX format as an XML node.\nLineString geometries are output as routes (`<rte>`), and MultiLineString\nas tracks (`<trk>`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gpx.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.GPX"
      ]
    },
    {
      "name": "ol.format.IGC",
      "kind": "class",
      "description": "Feature format for `*.igc` flight recording files.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/igc.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.IGCOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.IGC"
      ]
    },
    {
      "name": "ol.format.IGC#readFeature",
      "kind": "function",
      "description": "Read the feature from the IGC source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/igc.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.IGC"
      ]
    },
    {
      "name": "ol.format.IGC#readFeatures",
      "kind": "function",
      "description": "Read the feature from the source. As IGC sources contain a single\nfeature, this will return the feature in an array.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/igc.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.IGC"
      ]
    },
    {
      "name": "ol.format.IGC#readProjection",
      "kind": "function",
      "description": "Read the projection from the IGC source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/igc.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.IGC"
      ]
    },
    {
      "name": "ol.format.KML",
      "kind": "class",
      "description": "Feature format for reading and writing data in the KML format.\n\nNote that the KML format uses the URL() constructor. Older browsers such as IE\nwhich do not support this will need a URL polyfill to be loaded before use.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.KMLOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readFeature",
      "kind": "function",
      "description": "Read the first feature from a KML source. MultiGeometries are converted into\nGeometryCollections if they are a mix of geometry types, and into MultiPoint/\nMultiLineString/MultiPolygon if they are all of the same type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readFeatures",
      "kind": "function",
      "description": "Read all features from a KML source. MultiGeometries are converted into\nGeometryCollections if they are a mix of geometry types, and into MultiPoint/\nMultiLineString/MultiPolygon if they are all of the same type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readName",
      "kind": "function",
      "description": "Read the name of the KML.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readNetworkLinks",
      "kind": "function",
      "description": "Read the network links of the KML.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<Object>"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readRegion",
      "kind": "function",
      "description": "Read the regions of the KML.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<Object>"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readRegionFromNode",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "params": [
        {
          "name": "node",
          "types": [
            "Node"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<Object>"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readProjection",
      "kind": "function",
      "description": "Read the projection from a KML source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in the KML format. GeometryCollections, MultiPoints,\nMultiLineStrings, and MultiPolygons are output as MultiGeometries.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#writeFeaturesNode",
      "kind": "function",
      "description": "Encode an array of features in the KML format as an XML node. GeometryCollections,\nMultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/kml.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.MVT",
      "kind": "class",
      "description": "Feature format for reading data in the Mapbox MVT format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/mvt.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.MVTOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.MVT"
      ]
    },
    {
      "name": "ol.format.MVT#getLastExtent",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/mvt.js",
      "provides": [
        "ol.format.MVT"
      ]
    },
    {
      "name": "ol.format.MVT#readFeatures",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/mvt.js",
      "provides": [
        "ol.format.MVT"
      ]
    },
    {
      "name": "ol.format.MVT#readProjection",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/mvt.js",
      "provides": [
        "ol.format.MVT"
      ]
    },
    {
      "name": "ol.format.MVT#setLayers",
      "kind": "function",
      "description": "Sets the layers that features will be read from.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/mvt.js",
      "params": [
        {
          "name": "layers",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.format.MVT"
      ]
    },
    {
      "name": "ol.format.OSMXML",
      "kind": "class",
      "description": "Feature format for reading data in the\n[OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/osmxml.js",
      "extends": "ol.format.Feature",
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.OSMXML#readFeatures",
      "kind": "function",
      "description": "Read all features from an OSM source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/osmxml.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.OSMXML#readProjection",
      "kind": "function",
      "description": "Read the projection from an OSM source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/osmxml.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.Polyline",
      "kind": "class",
      "description": "Feature format for reading and writing data in the Encoded\nPolyline Algorithm Format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.PolylineOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.encodeDeltas",
      "kind": "function",
      "description": "Encode a list of n-dimensional points and return an encoded string\n\nAttention: This function will modify the passed array!",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "params": [
        {
          "name": "numbers",
          "types": [
            "Array.<number>"
          ]
        },
        {
          "name": "stride",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_factor",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.decodeDeltas",
      "kind": "function",
      "description": "Decode a list of n-dimensional points from an encoded string",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "params": [
        {
          "name": "encoded",
          "types": [
            "string"
          ]
        },
        {
          "name": "stride",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_factor",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.encodeFloats",
      "kind": "function",
      "description": "Encode a list of floating point numbers and return an encoded string\n\nAttention: This function will modify the passed array!",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "params": [
        {
          "name": "numbers",
          "types": [
            "Array.<number>"
          ]
        },
        {
          "name": "opt_factor",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.decodeFloats",
      "kind": "function",
      "description": "Decode a list of floating point numbers from an encoded string",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "params": [
        {
          "name": "encoded",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_factor",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readFeature",
      "kind": "function",
      "description": "Read the feature from the Polyline source. The coordinates are assumed to be\nin two dimensions and in latitude, longitude order.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readFeatures",
      "kind": "function",
      "description": "Read the feature from the source. As Polyline sources contain a single\nfeature, this will return the feature in an array.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readGeometry",
      "kind": "function",
      "description": "Read the geometry from the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readProjection",
      "kind": "function",
      "description": "Read the projection from a Polyline source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#writeGeometry",
      "kind": "function",
      "description": "Write a single geometry in Polyline format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/polyline.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.TopoJSON",
      "kind": "class",
      "description": "Feature format for reading data in the TopoJSON format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/topojson.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.TopoJSONOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.TopoJSON#readFeatures",
      "kind": "function",
      "description": "Read all features from a TopoJSON source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/topojson.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.TopoJSON#readProjection",
      "kind": "member",
      "description": "Read the projection from a TopoJSON source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/topojson.js",
      "params": [
        {
          "name": "object",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.WFS",
      "kind": "class",
      "description": "Feature format for reading and writing data in the WFS format.\nBy default, supports WFS version 1.1.0. You can pass a GML format\nas option if you want to read a WFS that contains GML2 (WFS 1.0.0).\nAlso see {@link ol.format.GMLBase} which is used by this format.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wfs.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.WFSOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readFeatures",
      "kind": "function",
      "description": "Read all features from a WFS FeatureCollection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wfs.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readTransactionResponse",
      "kind": "function",
      "description": "Read transaction response of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wfs.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.WFSTransactionResponse",
          "undefined"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readFeatureCollectionMetadata",
      "kind": "function",
      "description": "Read feature collection metadata of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wfs.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.WFSFeatureCollectionMetadata",
          "undefined"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS.writeFilter",
      "kind": "function",
      "description": "Encode filter as WFS `Filter` and return the Node.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wfs.js",
      "params": [
        {
          "name": "filter",
          "types": [
            "ol.format.filter.Filter"
          ]
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#writeGetFeature",
      "kind": "function",
      "description": "Encode format as WFS `GetFeature` and return the Node.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wfs.js",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.format.WFSWriteGetFeatureOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#writeTransaction",
      "kind": "function",
      "description": "Encode format as WFS `Transaction` and return the Node.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wfs.js",
      "params": [
        {
          "name": "inserts",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "updates",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "deletes",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "options",
          "types": [
            "olx.format.WFSWriteTransactionOptions"
          ]
        }
      ],
      "returns": {
        "types": [
          "Node"
        ]
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readProjection",
      "kind": "function",
      "description": "Read the projection from a WFS source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wfs.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.proj.Projection"
        ],
        "nullable": true
      },
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WKT",
      "kind": "class",
      "description": "Geometry format for reading and writing data in the `WellKnownText` (WKT)\nformat.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wkt.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.WKTOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#readFeature",
      "kind": "function",
      "description": "Read a feature from a WKT source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wkt.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#readFeatures",
      "kind": "function",
      "description": "Read all features from a WKT source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wkt.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#readGeometry",
      "kind": "function",
      "description": "Read a single geometry from a WKT source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wkt.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#writeFeature",
      "kind": "function",
      "description": "Encode a feature as a WKT string.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wkt.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features as a WKT string.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wkt.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#writeGeometry",
      "kind": "function",
      "description": "Write a single geometry as a WKT string.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wkt.js",
      "params": [
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.WriteOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "string"
        ]
      },
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WMSCapabilities",
      "kind": "class",
      "description": "Format for reading WMS capabilities data",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wmscapabilities.js",
      "extends": "ol.format.XML",
      "provides": [
        "ol.format.WMSCapabilities"
      ]
    },
    {
      "name": "ol.format.WMSCapabilities#read",
      "kind": "function",
      "description": "Read a WMS capabilities document.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wmscapabilities.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.format.WMSCapabilities"
      ]
    },
    {
      "name": "ol.format.WMSGetFeatureInfo",
      "kind": "class",
      "description": "Format for reading WMSGetFeatureInfo format. It uses\n{@link ol.format.GML2} to read features.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wmsgetfeatureinfo.js",
      "extends": "ol.format.Feature",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.WMSGetFeatureInfoOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.WMSGetFeatureInfo"
      ]
    },
    {
      "name": "ol.format.WMSGetFeatureInfo#readFeatures",
      "kind": "function",
      "description": "Read all features from a WMSGetFeatureInfo response.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wmsgetfeatureinfo.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.WMSGetFeatureInfo"
      ]
    },
    {
      "name": "ol.format.WMTSCapabilities",
      "kind": "class",
      "description": "Format for reading WMTS capabilities data.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wmtscapabilities.js",
      "extends": "ol.format.XML",
      "provides": [
        "ol.format.WMTSCapabilities"
      ]
    },
    {
      "name": "ol.format.WMTSCapabilities#read",
      "kind": "function",
      "description": "Read a WMTS capabilities document.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/wmtscapabilities.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "Object"
        ]
      },
      "provides": [
        "ol.format.WMTSCapabilities"
      ]
    },
    {
      "name": "ol.format.filter.And",
      "kind": "class",
      "description": "Represents a logical `<And>` operator between two or more filter conditions.\n\ndeprecated: This class will no longer be exported starting from the next major version.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/and.js",
      "extends": "ol.format.filter.Filter",
      "virtual": true,
      "params": [
        {
          "name": "conditions",
          "types": [
            "ol.format.filter.Filter"
          ],
          "variable": true
        }
      ],
      "provides": [
        "ol.format.filter.And"
      ]
    },
    {
      "name": "ol.format.filter.Bbox",
      "kind": "class",
      "description": "Represents a `<BBOX>` operator to test whether a geometry-valued property\nintersects a fixed bounding box",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/bbox.js",
      "extends": "ol.format.filter.Filter",
      "params": [
        {
          "name": "geometryName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ],
          "nullable": false
        },
        {
          "name": "opt_srsName",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.filter.Bbox"
      ]
    },
    {
      "name": "ol.format.filter.Comparison",
      "kind": "class",
      "description": "Abstract class; normally only used for creating subclasses and not instantiated in apps.\nBase class for WFS GetFeature property comparison filters.\n\ndeprecated: This class will no longer be exported starting from the next major version.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/comparison.js",
      "extends": "ol.format.filter.Filter",
      "virtual": true,
      "params": [
        {
          "name": "tagName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.Comparison"
      ]
    },
    {
      "name": "ol.format.filter.ComparisonBinary",
      "kind": "class",
      "description": "Abstract class; normally only used for creating subclasses and not instantiated in apps.\nBase class for WFS GetFeature property binary comparison filters.\n\ndeprecated: This class will no longer be exported starting from the next major version.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/comparisonbinary.js",
      "extends": "ol.format.filter.Comparison",
      "virtual": true,
      "params": [
        {
          "name": "tagName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "string",
            "number"
          ],
          "nullable": false
        },
        {
          "name": "opt_matchCase",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.filter.ComparisonBinary"
      ]
    },
    {
      "name": "ol.format.filter.Contains",
      "kind": "class",
      "description": "Represents a `<Contains>` operator to test whether a geometry-valued property\ncontains a given geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/contains.js",
      "extends": "ol.format.filter.Spatial",
      "params": [
        {
          "name": "geometryName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ],
          "nullable": false
        },
        {
          "name": "opt_srsName",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.filter.Contains"
      ]
    },
    {
      "name": "ol.format.filter.During",
      "kind": "class",
      "description": "Represents a `<During>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/during.js",
      "extends": "ol.format.filter.Comparison",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "begin",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "end",
          "types": [
            "string"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.During"
      ]
    },
    {
      "name": "ol.format.filter.EqualTo",
      "kind": "class",
      "description": "Represents a `<PropertyIsEqualTo>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/equalto.js",
      "extends": "ol.format.filter.ComparisonBinary",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "string",
            "number"
          ],
          "nullable": false
        },
        {
          "name": "opt_matchCase",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.filter.EqualTo"
      ]
    },
    {
      "name": "ol.format.filter.Filter",
      "kind": "class",
      "description": "Abstract class; normally only used for creating subclasses and not instantiated in apps.\nBase class for WFS GetFeature filters.\n\ndeprecated: This class will no longer be exported starting from the next major version.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/filter.js",
      "virtual": true,
      "params": [
        {
          "name": "tagName",
          "types": [
            "string"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.Filter"
      ]
    },
    {
      "name": "ol.format.filter.GreaterThan",
      "kind": "class",
      "description": "Represents a `<PropertyIsGreaterThan>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/greaterthan.js",
      "extends": "ol.format.filter.ComparisonBinary",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.GreaterThan"
      ]
    },
    {
      "name": "ol.format.filter.GreaterThanOrEqualTo",
      "kind": "class",
      "description": "Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/greaterthanorequalto.js",
      "extends": "ol.format.filter.ComparisonBinary",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.GreaterThanOrEqualTo"
      ]
    },
    {
      "name": "ol.format.filter.Intersects",
      "kind": "class",
      "description": "Represents a `<Intersects>` operator to test whether a geometry-valued property\nintersects a given geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/intersects.js",
      "extends": "ol.format.filter.Spatial",
      "params": [
        {
          "name": "geometryName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ],
          "nullable": false
        },
        {
          "name": "opt_srsName",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.filter.Intersects"
      ]
    },
    {
      "name": "ol.format.filter.IsBetween",
      "kind": "class",
      "description": "Represents a `<PropertyIsBetween>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/isbetween.js",
      "extends": "ol.format.filter.Comparison",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "lowerBoundary",
          "types": [
            "number"
          ],
          "nullable": false
        },
        {
          "name": "upperBoundary",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.IsBetween"
      ]
    },
    {
      "name": "ol.format.filter.IsLike",
      "kind": "class",
      "description": "Represents a `<PropertyIsLike>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/islike.js",
      "extends": "ol.format.filter.Comparison",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "pattern",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "opt_wildCard",
          "types": [
            "string"
          ],
          "optional": true
        },
        {
          "name": "opt_singleChar",
          "types": [
            "string"
          ],
          "optional": true
        },
        {
          "name": "opt_escapeChar",
          "types": [
            "string"
          ],
          "optional": true
        },
        {
          "name": "opt_matchCase",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.filter.IsLike"
      ]
    },
    {
      "name": "ol.format.filter.IsNull",
      "kind": "class",
      "description": "Represents a `<PropertyIsNull>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/isnull.js",
      "extends": "ol.format.filter.Comparison",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.IsNull"
      ]
    },
    {
      "name": "ol.format.filter.LessThan",
      "kind": "class",
      "description": "Represents a `<PropertyIsLessThan>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/lessthan.js",
      "extends": "ol.format.filter.ComparisonBinary",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.LessThan"
      ]
    },
    {
      "name": "ol.format.filter.LessThanOrEqualTo",
      "kind": "class",
      "description": "Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/lessthanorequalto.js",
      "extends": "ol.format.filter.ComparisonBinary",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "number"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.LessThanOrEqualTo"
      ]
    },
    {
      "name": "ol.format.filter.Not",
      "kind": "class",
      "description": "Represents a logical `<Not>` operator for a filter condition.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/not.js",
      "extends": "ol.format.filter.Filter",
      "params": [
        {
          "name": "condition",
          "types": [
            "ol.format.filter.Filter"
          ],
          "nullable": false
        }
      ],
      "provides": [
        "ol.format.filter.Not"
      ]
    },
    {
      "name": "ol.format.filter.NotEqualTo",
      "kind": "class",
      "description": "Represents a `<PropertyIsNotEqualTo>` comparison operator.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/notequalto.js",
      "extends": "ol.format.filter.ComparisonBinary",
      "params": [
        {
          "name": "propertyName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "expression",
          "types": [
            "string",
            "number"
          ],
          "nullable": false
        },
        {
          "name": "opt_matchCase",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.filter.NotEqualTo"
      ]
    },
    {
      "name": "ol.format.filter.Or",
      "kind": "class",
      "description": "Represents a logical `<Or>` operator between two ore more filter conditions.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/or.js",
      "extends": "ol.format.filter.Filter",
      "params": [
        {
          "name": "conditions",
          "types": [
            "ol.format.filter.Filter"
          ],
          "variable": true
        }
      ],
      "provides": [
        "ol.format.filter.Or"
      ]
    },
    {
      "name": "ol.format.filter.Spatial",
      "kind": "class",
      "description": "Abstract class; normally only used for creating subclasses and not instantiated in apps.\nRepresents a spatial operator to test whether a geometry-valued property\nrelates to a given geometry.\n\ndeprecated: This class will no longer be exported starting from the next major version.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/spatial.js",
      "extends": "ol.format.filter.Filter",
      "virtual": true,
      "params": [
        {
          "name": "tagName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "geometryName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ],
          "nullable": false
        },
        {
          "name": "opt_srsName",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.filter.Spatial"
      ]
    },
    {
      "name": "ol.format.filter.Within",
      "kind": "class",
      "description": "Represents a `<Within>` operator to test whether a geometry-valued property\nis within a given geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/within.js",
      "extends": "ol.format.filter.Spatial",
      "params": [
        {
          "name": "geometryName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "geometry",
          "types": [
            "ol.geom.Geometry"
          ],
          "nullable": false
        },
        {
          "name": "opt_srsName",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.format.filter.Within"
      ]
    },
    {
      "name": "ol.events.condition.altKeyOnly",
      "kind": "function",
      "description": "Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\nadditionally the shift-key is pressed).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.altShiftKeysOnly",
      "kind": "function",
      "description": "Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n(e.g. when additionally the platform-modifier-key is pressed).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.always",
      "kind": "function",
      "description": "Return always true.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.click",
      "kind": "function",
      "description": "Return `true` if the event is a `click` event, `false` otherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.never",
      "kind": "function",
      "description": "Return always false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.pointerMove",
      "kind": "function",
      "description": "Return `true` if the browser event is a `pointermove` event, `false`\notherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.singleClick",
      "kind": "function",
      "description": "Return `true` if the event is a map `singleclick` event, `false` otherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.doubleClick",
      "kind": "function",
      "description": "Return `true` if the event is a map `dblclick` event, `false` otherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.noModifierKeys",
      "kind": "function",
      "description": "Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\npressed.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.platformModifierKeyOnly",
      "kind": "function",
      "description": "Return `true` if only the platform-modifier-key (the meta-key on Mac,\nctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\nthe shift-key is pressed).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.shiftKeyOnly",
      "kind": "function",
      "description": "Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\nadditionally the alt-key is pressed).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.targetNotEditable",
      "kind": "function",
      "description": "Return `true` if the target element is not editable, i.e. not a `<input>`-,\n`<select>`- or `<textarea>`-element, `false` otherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.mouseOnly",
      "kind": "function",
      "description": "Return `true` if the event originates from a mouse device.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.primaryAction",
      "kind": "function",
      "description": "Return `true` if the event originates from a primary pointer in\ncontact with the surface or if the left mouse button is pressed.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/condition.js",
      "params": [
        {
          "name": "mapBrowserEvent",
          "types": [
            "ol.MapBrowserEvent"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.events.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.events.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.events.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.control.Attribution",
      "kind": "class",
      "description": "Control to show all the attributions associated with the layer sources\nin the map. This control is one of the default controls included in maps.\nBy default it will show in the bottom right portion of the map, but this can\nbe changed by using a css selector for `.ol-attribution`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/attribution.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.AttributionOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution.render",
      "kind": "function",
      "description": "Update the attribution element.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/attribution.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#getCollapsible",
      "kind": "function",
      "description": "Return `true` if the attribution is collapsible, `false` otherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/attribution.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#setCollapsible",
      "kind": "function",
      "description": "Set whether the attribution should be collapsible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/attribution.js",
      "params": [
        {
          "name": "collapsible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#setCollapsed",
      "kind": "function",
      "description": "Collapse or expand the attribution according to the passed parameter. Will\nnot do anything if the attribution isn't collapsible or if the current\ncollapsed state is already the one requested.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/attribution.js",
      "params": [
        {
          "name": "collapsed",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#getCollapsed",
      "kind": "function",
      "description": "Return `true` when the attribution is currently collapsed or `false`\notherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/attribution.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Control",
      "kind": "class",
      "description": "A control is a visible widget with a DOM element in a fixed position on the\nscreen. They can involve user input (buttons), or be informational only;\nthe position is determined using CSS. By default these are placed in the\ncontainer with CSS class name `ol-overlaycontainer-stopevent`, but can use\nany outside DOM element.\n\nThis is the base class for controls. You can use it for simple custom\ncontrols by creating the element with listeners, creating an instance:\n```js\nvar myControl = new ol.control.Control({element: myElement});\n```\nand then adding this to the map.\n\nThe main advantage of having this as a control rather than a simple separate\nDOM element is that preventing propagation is handled for you. Controls\nwill also be `ol.Object`s in a `ol.Collection`, so you can use their\nmethods.\n\nYou can also extend this base for your own control class. See\nexamples/custom-controls for an example of how to do this.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "extends": "ol.Object",
      "params": [
        {
          "name": "options",
          "types": [
            "olx.control.ControlOptions"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen",
      "kind": "class",
      "description": "Provides a button that when clicked fills up the full screen with the map.\nThe full screen source element is by default the element containing the map viewport unless\noverridden by providing the `source` option. In which case, the dom\nelement introduced using this parameter will be displayed in full screen.\n\nWhen in full screen mode, a close button is shown to exit full screen mode.\nThe [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\ntoggle the map in full screen mode.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/fullscreen.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.FullScreenOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.FullScreen"
      ]
    },
    {
      "name": "ol.control.MousePosition",
      "kind": "class",
      "description": "A control to show the 2D coordinates of the mouse cursor. By default, these\nare in the view projection, but can be in any supported projection.\nBy default the control is shown in the top right corner of the map, but this\ncan be changed by using the css selector `.ol-mouse-position`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/mouseposition.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.MousePositionOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition.render",
      "kind": "function",
      "description": "Update the mouseposition element.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/mouseposition.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#getCoordinateFormat",
      "kind": "function",
      "description": "Return the coordinate format type used to render the current position or\nundefined.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/mouseposition.js",
      "returns": {
        "types": [
          "ol.CoordinateFormatType",
          "undefined"
        ]
      },
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#getProjection",
      "kind": "function",
      "description": "Return the projection that is used to report the mouse position.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/mouseposition.js",
      "returns": {
        "types": [
          "ol.proj.Projection",
          "undefined"
        ]
      },
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setCoordinateFormat",
      "kind": "function",
      "description": "Set the coordinate format type used to render the current position.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/mouseposition.js",
      "params": [
        {
          "name": "format",
          "types": [
            "ol.CoordinateFormatType"
          ]
        }
      ],
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setProjection",
      "kind": "function",
      "description": "Set the projection that is used to report the mouse position.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/mouseposition.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.OverviewMap",
      "kind": "class",
      "description": "Create a new control with a map acting as an overview map for an other\ndefined map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/overviewmap.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.OverviewMapOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap.render",
      "kind": "function",
      "description": "Update the overview map element.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/overviewmap.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getCollapsible",
      "kind": "function",
      "description": "Return `true` if the overview map is collapsible, `false` otherwise.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/overviewmap.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setCollapsible",
      "kind": "function",
      "description": "Set whether the overview map should be collapsible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/overviewmap.js",
      "params": [
        {
          "name": "collapsible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setCollapsed",
      "kind": "function",
      "description": "Collapse or expand the overview map according to the passed parameter. Will\nnot do anything if the overview map isn't collapsible or if the current\ncollapsed state is already the one requested.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/overviewmap.js",
      "params": [
        {
          "name": "collapsed",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getCollapsed",
      "kind": "function",
      "description": "Determine if the overview map is collapsed.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/overviewmap.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getOverviewMap",
      "kind": "function",
      "description": "Return the overview map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/overviewmap.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.OverviewMap"
      ]
    },
    {
      "name": "ol.control.Rotate",
      "kind": "class",
      "description": "A button control to reset rotation to 0.\nTo style this control use css selector `.ol-rotate`. A `.ol-hidden` css\nselector is added to the button when the rotation is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/rotate.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.RotateOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.Rotate"
      ]
    },
    {
      "name": "ol.control.Rotate.render",
      "kind": "function",
      "description": "Update the rotate control element.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/rotate.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.Rotate"
      ]
    },
    {
      "name": "ol.control.ScaleLine",
      "kind": "class",
      "description": "A control displaying rough y-axis distances, calculated for the center of the\nviewport. For conformal projections (e.g. EPSG:3857, the default view\nprojection in OpenLayers), the scale is valid for all directions.\nNo scale line will be shown when the y-axis distance of a pixel at the\nviewport center cannot be calculated in the view projection.\nBy default the scale line will show in the bottom left portion of the map,\nbut this can be changed by using the css selector `.ol-scale-line`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/scaleline.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.ScaleLineOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.ScaleLine"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getUnits",
      "kind": "function",
      "description": "Return the units to use in the scale line.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/scaleline.js",
      "returns": {
        "types": [
          "ol.control.ScaleLineUnits",
          "undefined"
        ]
      },
      "provides": [
        "ol.control.ScaleLine"
      ]
    },
    {
      "name": "ol.control.ScaleLine.render",
      "kind": "function",
      "description": "Update the scale line element.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/scaleline.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.ScaleLine"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setUnits",
      "kind": "function",
      "description": "Set the units to use in the scale line.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/scaleline.js",
      "params": [
        {
          "name": "units",
          "types": [
            "ol.control.ScaleLineUnits"
          ]
        }
      ],
      "provides": [
        "ol.control.ScaleLine"
      ]
    },
    {
      "name": "ol.control.Zoom",
      "kind": "class",
      "description": "A control with 2 buttons, one for zoom in and one for zoom out.\nThis control is one of the default controls of a map. To style this control\nuse css selectors `.ol-zoom-in` and `.ol-zoom-out`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/zoom.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.ZoomOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.Zoom"
      ]
    },
    {
      "name": "ol.control.ZoomSlider",
      "kind": "class",
      "description": "A slider type of control for zooming.\n\nExample:\n\n    map.addControl(new ol.control.ZoomSlider());",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/zoomslider.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.ZoomSliderOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.ZoomSlider"
      ]
    },
    {
      "name": "ol.control.ZoomSlider.render",
      "kind": "function",
      "description": "Update the zoomslider element.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/zoomslider.js",
      "params": [
        {
          "name": "mapEvent",
          "types": [
            "ol.MapEvent"
          ]
        }
      ],
      "provides": [
        "ol.control.ZoomSlider"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent",
      "kind": "class",
      "description": "A button control which, when pressed, changes the map view to a specific\nextent. To style this control use the css selector `.ol-zoom-extent`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/zoomtoextent.js",
      "extends": "ol.control.Control",
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.control.ZoomToExtentOptions"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.control.ZoomToExtent"
      ]
    },
    {
      "name": "ol.Object#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.PluggableMap#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.PluggableMap#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.PluggableMap#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.PluggableMap#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.PluggableMap#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.PluggableMap#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.PluggableMap#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.PluggableMap#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.PluggableMap#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.PluggableMap#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.PluggableMap#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.PluggableMap#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.CanvasMap#addControl",
      "kind": "function",
      "description": "Add the given control to the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "control",
          "types": [
            "ol.control.Control"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#addInteraction",
      "kind": "function",
      "description": "Add the given interaction to the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "interaction",
          "types": [
            "ol.interaction.Interaction"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#addLayer",
      "kind": "function",
      "description": "Adds the given layer to the top of this map. If you want to add a layer\nelsewhere in the stack, use `getLayers()` and the methods available on\n{@link ol.Collection}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Base"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#addOverlay",
      "kind": "function",
      "description": "Add the given overlay to the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "overlay",
          "types": [
            "ol.Overlay"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#forEachFeatureAtPixel",
      "kind": "function",
      "description": "Detect features that intersect a pixel on the viewport, and execute a\ncallback with each intersecting feature. Layers included in the detection can\nbe configured through the `layerFilter` option in `opt_options`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.AtPixelOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "template": "S,T",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getFeaturesAtPixel",
      "kind": "function",
      "description": "Get all features that intersect a pixel on the viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.AtPixelOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<(ol.Feature|ol.render.Feature)>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#forEachLayerAtPixel",
      "kind": "function",
      "description": "Detect layers that have a color value at a pixel on the viewport, and\nexecute a callback with each matching layer. Layers included in the\ndetection can be configured through `opt_layerFilter`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "S"
          ],
          "optional": true
        },
        {
          "name": "opt_layerFilter",
          "types": [
            "Function"
          ],
          "optional": true
        },
        {
          "name": "opt_this2",
          "types": [
            "U"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "template": "S,T,U",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#hasFeatureAtPixel",
      "kind": "function",
      "description": "Detect if features intersect a pixel on the viewport. Layers included in the\ndetection can be configured through `opt_layerFilter`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.AtPixelOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "template": "U",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getEventCoordinate",
      "kind": "function",
      "description": "Returns the coordinate in view projection for a browser event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Event"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getEventPixel",
      "kind": "function",
      "description": "Returns the map pixel position for a browser event relative to the viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Event"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Pixel"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getTarget",
      "kind": "function",
      "description": "Get the target in which this map is rendered.\nNote that this returns what is entered as an option or in setTarget:\nif that was an element, it returns an element; if a string, it returns that.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "Element",
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getTargetElement",
      "kind": "function",
      "description": "Get the DOM element into which this map is rendered. In contrast to\n`getTarget` this method always return an `Element`, or `null` if the\nmap has no target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "Element"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getCoordinateFromPixel",
      "kind": "function",
      "description": "Get the coordinate for a given pixel.  This returns a coordinate in the\nmap view projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getControls",
      "kind": "function",
      "description": "Get the map controls. Modifying this collection changes the controls\nassociated with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.control.Control>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getOverlays",
      "kind": "function",
      "description": "Get the map overlays. Modifying this collection changes the overlays\nassociated with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.Overlay>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getOverlayById",
      "kind": "function",
      "description": "Get an overlay by its identifier (the value returned by overlay.getId()).\nNote that the index treats string and numeric identifiers as the same. So\n`map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Overlay"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getInteractions",
      "kind": "function",
      "description": "Get the map interactions. Modifying this collection changes the interactions\nassociated with the map.\n\nInteractions are used for e.g. pan, zoom and rotate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.interaction.Interaction>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getLayerGroup",
      "kind": "function",
      "description": "Get the layergroup associated with this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.layer.Group"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getLayers",
      "kind": "function",
      "description": "Get the collection of layers associated with this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.layer.Base>"
        ],
        "nullable": false
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getPixelFromCoordinate",
      "kind": "function",
      "description": "Get the pixel for a coordinate.  This takes a coordinate in the map view\nprojection and returns the corresponding pixel.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Pixel"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getSize",
      "kind": "function",
      "description": "Get the size of this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Size",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getView",
      "kind": "function",
      "description": "Get the view associated with this map. A view manages properties such as\ncenter and resolution.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.View"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#getViewport",
      "kind": "function",
      "description": "Get the element that serves as the map viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "Element"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#renderSync",
      "kind": "function",
      "description": "Requests an immediate render in a synchronous manner.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#render",
      "kind": "function",
      "description": "Request a map rendering (at the next animation frame).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#removeControl",
      "kind": "function",
      "description": "Remove the given control from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "control",
          "types": [
            "ol.control.Control"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.control.Control",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#removeInteraction",
      "kind": "function",
      "description": "Remove the given interaction from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "interaction",
          "types": [
            "ol.interaction.Interaction"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.interaction.Interaction",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#removeLayer",
      "kind": "function",
      "description": "Removes the given layer from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Base"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.layer.Base",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#removeOverlay",
      "kind": "function",
      "description": "Remove the given overlay from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "overlay",
          "types": [
            "ol.Overlay"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Overlay",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#setLayerGroup",
      "kind": "function",
      "description": "Sets the layergroup of this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "layerGroup",
          "types": [
            "ol.layer.Group"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#setSize",
      "kind": "function",
      "description": "Set the size of this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "size",
          "types": [
            "ol.Size",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#setTarget",
      "kind": "function",
      "description": "Set the target element to render this map into.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#setView",
      "kind": "function",
      "description": "Set the view for this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "view",
          "types": [
            "ol.View"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#updateSize",
      "kind": "function",
      "description": "Force a recalculation of the map viewport size.  This should be called when\nthird-party code changes the size of the map viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.CanvasMap#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.CanvasMap#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.CanvasMap#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.CanvasMap#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.CanvasMap#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.CanvasMap#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.CanvasMap#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.CanvasMap#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.CanvasMap#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.CanvasMap#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.CanvasMap#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.CanvasMap#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Collection#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Collection#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Collection#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Collection#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Collection#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Collection#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.Collection.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.Collection.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.Collection.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.DeviceOrientation#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.DeviceOrientation#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.DeviceOrientation#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.DeviceOrientation#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Feature#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Feature#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Feature#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Feature#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Feature#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Feature#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Geolocation#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Geolocation#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Geolocation#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Geolocation#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Geolocation#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Geolocation#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.ImageTile#getTileCoord",
      "kind": "function",
      "description": "Get the tile coordinate for this tile.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.ImageTile#load",
      "kind": "function",
      "description": "Load the image or retry if loading previously failed.\nLoading is taken care of by the tile queue, and calling this method is\nonly needed for preloading or for reloading in case of an error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.Map#addControl",
      "kind": "function",
      "description": "Add the given control to the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "control",
          "types": [
            "ol.control.Control"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#addInteraction",
      "kind": "function",
      "description": "Add the given interaction to the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "interaction",
          "types": [
            "ol.interaction.Interaction"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#addLayer",
      "kind": "function",
      "description": "Adds the given layer to the top of this map. If you want to add a layer\nelsewhere in the stack, use `getLayers()` and the methods available on\n{@link ol.Collection}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Base"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#addOverlay",
      "kind": "function",
      "description": "Add the given overlay to the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "overlay",
          "types": [
            "ol.Overlay"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#forEachFeatureAtPixel",
      "kind": "function",
      "description": "Detect features that intersect a pixel on the viewport, and execute a\ncallback with each intersecting feature. Layers included in the detection can\nbe configured through the `layerFilter` option in `opt_options`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.AtPixelOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "template": "S,T",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getFeaturesAtPixel",
      "kind": "function",
      "description": "Get all features that intersect a pixel on the viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.AtPixelOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<(ol.Feature|ol.render.Feature)>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#forEachLayerAtPixel",
      "kind": "function",
      "description": "Detect layers that have a color value at a pixel on the viewport, and\nexecute a callback with each matching layer. Layers included in the\ndetection can be configured through `opt_layerFilter`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "S"
          ],
          "optional": true
        },
        {
          "name": "opt_layerFilter",
          "types": [
            "Function"
          ],
          "optional": true
        },
        {
          "name": "opt_this2",
          "types": [
            "U"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "T",
          "undefined"
        ]
      },
      "template": "S,T,U",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#hasFeatureAtPixel",
      "kind": "function",
      "description": "Detect if features intersect a pixel on the viewport. Layers included in the\ndetection can be configured through `opt_layerFilter`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.AtPixelOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "template": "U",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getEventCoordinate",
      "kind": "function",
      "description": "Returns the coordinate in view projection for a browser event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Event"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getEventPixel",
      "kind": "function",
      "description": "Returns the map pixel position for a browser event relative to the viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Event"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Pixel"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getTarget",
      "kind": "function",
      "description": "Get the target in which this map is rendered.\nNote that this returns what is entered as an option or in setTarget:\nif that was an element, it returns an element; if a string, it returns that.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "Element",
          "string",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getTargetElement",
      "kind": "function",
      "description": "Get the DOM element into which this map is rendered. In contrast to\n`getTarget` this method always return an `Element`, or `null` if the\nmap has no target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "Element"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getCoordinateFromPixel",
      "kind": "function",
      "description": "Get the coordinate for a given pixel.  This returns a coordinate in the\nmap view projection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "pixel",
          "types": [
            "ol.Pixel"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getControls",
      "kind": "function",
      "description": "Get the map controls. Modifying this collection changes the controls\nassociated with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.control.Control>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getOverlays",
      "kind": "function",
      "description": "Get the map overlays. Modifying this collection changes the overlays\nassociated with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.Overlay>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getOverlayById",
      "kind": "function",
      "description": "Get an overlay by its identifier (the value returned by overlay.getId()).\nNote that the index treats string and numeric identifiers as the same. So\n`map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Overlay"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getInteractions",
      "kind": "function",
      "description": "Get the map interactions. Modifying this collection changes the interactions\nassociated with the map.\n\nInteractions are used for e.g. pan, zoom and rotate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.interaction.Interaction>"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getLayerGroup",
      "kind": "function",
      "description": "Get the layergroup associated with this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.layer.Group"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getLayers",
      "kind": "function",
      "description": "Get the collection of layers associated with this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.layer.Base>"
        ],
        "nullable": false
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getPixelFromCoordinate",
      "kind": "function",
      "description": "Get the pixel for a coordinate.  This takes a coordinate in the map view\nprojection and returns the corresponding pixel.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Pixel"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getSize",
      "kind": "function",
      "description": "Get the size of this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.Size",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getView",
      "kind": "function",
      "description": "Get the view associated with this map. A view manages properties such as\ncenter and resolution.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "ol.View"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#getViewport",
      "kind": "function",
      "description": "Get the element that serves as the map viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "returns": {
        "types": [
          "Element"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#renderSync",
      "kind": "function",
      "description": "Requests an immediate render in a synchronous manner.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#render",
      "kind": "function",
      "description": "Request a map rendering (at the next animation frame).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#removeControl",
      "kind": "function",
      "description": "Remove the given control from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "control",
          "types": [
            "ol.control.Control"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.control.Control",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#removeInteraction",
      "kind": "function",
      "description": "Remove the given interaction from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "interaction",
          "types": [
            "ol.interaction.Interaction"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.interaction.Interaction",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#removeLayer",
      "kind": "function",
      "description": "Removes the given layer from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Base"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.layer.Base",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#removeOverlay",
      "kind": "function",
      "description": "Remove the given overlay from the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "overlay",
          "types": [
            "ol.Overlay"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Overlay",
          "undefined"
        ]
      },
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#setLayerGroup",
      "kind": "function",
      "description": "Sets the layergroup of this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "layerGroup",
          "types": [
            "ol.layer.Group"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#setSize",
      "kind": "function",
      "description": "Set the size of this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "size",
          "types": [
            "ol.Size",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#setTarget",
      "kind": "function",
      "description": "Set the target element to render this map into.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#setView",
      "kind": "function",
      "description": "Set the view for this map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "params": [
        {
          "name": "view",
          "types": [
            "ol.View"
          ]
        }
      ],
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#updateSize",
      "kind": "function",
      "description": "Force a recalculation of the map viewport size.  This should be called when\nthird-party code changes the size of the map viewport.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/pluggablemap.js",
      "provides": [
        "ol.PluggableMap"
      ]
    },
    {
      "name": "ol.Map#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Map#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Map#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Map#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Map#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Map#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Map#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.MapEvent#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapEvent#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapEvent#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapEvent#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#map",
      "kind": "member",
      "description": "The map where the event occurred.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapevent.js",
      "types": [
        "ol.PluggableMap"
      ],
      "provides": [
        "ol.MapEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#frameState",
      "kind": "member",
      "description": "The frame state at the time of the event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapevent.js",
      "types": [
        "olx.FrameState"
      ],
      "provides": [
        "ol.MapEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#originalEvent",
      "kind": "constant",
      "description": "The original browser event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapbrowserevent.js",
      "types": [
        "Event"
      ],
      "provides": [
        "ol.MapBrowserEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#pixel",
      "kind": "member",
      "description": "The map pixel relative to the viewport corresponding to the original browser event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapbrowserevent.js",
      "types": [
        "ol.Pixel"
      ],
      "provides": [
        "ol.MapBrowserEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#coordinate",
      "kind": "member",
      "description": "The coordinate in view projection corresponding to the original browser event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapbrowserevent.js",
      "types": [
        "ol.Coordinate"
      ],
      "provides": [
        "ol.MapBrowserEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#dragging",
      "kind": "member",
      "description": "Indicates if the map is currently being dragged. Only set for\n`POINTERDRAG` and `POINTERMOVE` events. Default is `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapbrowserevent.js",
      "types": [
        "boolean"
      ],
      "provides": [
        "ol.MapBrowserEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#map",
      "kind": "member",
      "description": "The map where the event occurred.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapevent.js",
      "types": [
        "ol.PluggableMap"
      ],
      "provides": [
        "ol.MapEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#frameState",
      "kind": "member",
      "description": "The frame state at the time of the event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/mapevent.js",
      "types": [
        "olx.FrameState"
      ],
      "provides": [
        "ol.MapEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.Object.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.Object.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.Object.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.Object.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.Overlay#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Overlay#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Overlay#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Overlay#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Overlay#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Overlay#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.Overlay#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.VectorImageTile#getTileCoord",
      "kind": "function",
      "description": "Get the tile coordinate for this tile.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.VectorImageTile#load",
      "kind": "function",
      "description": "Load the image or retry if loading previously failed.\nLoading is taken care of by the tile queue, and calling this method is\nonly needed for preloading or for reloading in case of an error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.VectorTile#getTileCoord",
      "kind": "function",
      "description": "Get the tile coordinate for this tile.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.VectorTile#load",
      "kind": "function",
      "description": "Load the image or retry if loading previously failed.\nLoading is taken care of by the tile queue, and calling this method is\nonly needed for preloading or for reloading in case of an error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.View#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.View#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.View#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.View#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.View#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.View#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.View#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#forEachTileCoord",
      "kind": "function",
      "description": "Call a function with each tile coordinate for a given extent and zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "zoom",
          "types": [
            "number"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        }
      ],
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMaxZoom",
      "kind": "function",
      "description": "Get the maximum zoom level for the grid.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMinZoom",
      "kind": "function",
      "description": "Get the minimum zoom level for the grid.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getOrigin",
      "kind": "function",
      "description": "Get the origin for the grid at the given zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getResolution",
      "kind": "function",
      "description": "Get the resolution for the given zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getResolutions",
      "kind": "function",
      "description": "Get the list of resolutions for the tile grid.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "returns": {
        "types": [
          "Array.<number>"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getTileCoordExtent",
      "kind": "function",
      "description": "Get the extent of a tile coordinate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "tileCoord",
          "types": [
            "ol.TileCoord"
          ]
        },
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getTileCoordForCoordAndResolution",
      "kind": "function",
      "description": "Get the tile coordinate for the given map coordinate and resolution.  This\nmethod considers that coordinates that intersect tile boundaries should be\nassigned the higher tile coordinate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getTileCoordForCoordAndZ",
      "kind": "function",
      "description": "Get a tile coordinate given a map coordinate and zoom level.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "z",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_tileCoord",
          "types": [
            "ol.TileCoord"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getTileSize",
      "kind": "function",
      "description": "Get the tile size for a zoom level. The type of the return value matches the\n`tileSize` or `tileSizes` that the tile grid was configured with. To always\nget an `ol.Size`, run the result through `ol.size.toSize()`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "z",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "number",
          "ol.Size"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getZForResolution",
      "kind": "function",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tilegrid/tilegrid.js",
      "params": [
        {
          "name": "resolution",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_direction",
          "types": [
            "number"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.style.RegularShape#getOpacity",
      "kind": "function",
      "description": "Get the symbolizer opacity.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.RegularShape#getRotateWithView",
      "kind": "function",
      "description": "Determine whether the symbolizer rotates with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.RegularShape#getRotation",
      "kind": "function",
      "description": "Get the symoblizer rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.RegularShape#getScale",
      "kind": "function",
      "description": "Get the symbolizer scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.RegularShape#getSnapToPixel",
      "kind": "function",
      "description": "Determine whether the symbolizer should be snapped to a pixel.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.RegularShape#setOpacity",
      "kind": "function",
      "description": "Set the opacity.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.RegularShape#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.RegularShape#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Circle#clone",
      "kind": "function",
      "description": "Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "ol.style.RegularShape"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.Circle#getAngle",
      "kind": "function",
      "description": "Get the angle used in generating the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.Circle#getFill",
      "kind": "function",
      "description": "Get the fill style for the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "ol.style.Fill"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.Circle#getPoints",
      "kind": "function",
      "description": "Get the number of points for generating the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.Circle#getRadius",
      "kind": "function",
      "description": "Get the (primary) radius for the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.Circle#getRadius2",
      "kind": "function",
      "description": "Get the secondary radius for the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "number",
          "undefined"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.Circle#getStroke",
      "kind": "function",
      "description": "Get the stroke style for the shape.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/regularshape.js",
      "returns": {
        "types": [
          "ol.style.Stroke"
        ]
      },
      "provides": [
        "ol.style.RegularShape"
      ]
    },
    {
      "name": "ol.style.Circle#getOpacity",
      "kind": "function",
      "description": "Get the symbolizer opacity.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Circle#getRotateWithView",
      "kind": "function",
      "description": "Determine whether the symbolizer rotates with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Circle#getRotation",
      "kind": "function",
      "description": "Get the symoblizer rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Circle#getScale",
      "kind": "function",
      "description": "Get the symbolizer scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Circle#getSnapToPixel",
      "kind": "function",
      "description": "Determine whether the symbolizer should be snapped to a pixel.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Circle#setOpacity",
      "kind": "function",
      "description": "Set the opacity.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Circle#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Circle#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Icon#getOpacity",
      "kind": "function",
      "description": "Get the symbolizer opacity.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Icon#getRotateWithView",
      "kind": "function",
      "description": "Determine whether the symbolizer rotates with the map.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Icon#getRotation",
      "kind": "function",
      "description": "Get the symoblizer rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Icon#getScale",
      "kind": "function",
      "description": "Get the symbolizer scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Icon#getSnapToPixel",
      "kind": "function",
      "description": "Determine whether the symbolizer should be snapped to a pixel.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Icon#setOpacity",
      "kind": "function",
      "description": "Set the opacity.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Icon#setRotation",
      "kind": "function",
      "description": "Set the rotation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "rotation",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.style.Icon#setScale",
      "kind": "function",
      "description": "Set the scale.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/style/image.js",
      "params": [
        {
          "name": "scale",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.style.Image"
      ]
    },
    {
      "name": "ol.source.Source#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Source#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Source#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Source#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Source#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Source#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Source#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Tile#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Tile#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Tile#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Tile#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Tile#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Tile#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Tile#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Tile#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Tile#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Tile#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Tile#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Tile#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.UrlTile#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.UrlTile#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.UrlTile#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.UrlTile#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.UrlTile#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.UrlTile#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.UrlTile#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.UrlTile#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.UrlTile#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.UrlTile#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.UrlTile#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.UrlTile#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.UrlTile#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.UrlTile#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.UrlTile#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.UrlTile#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.UrlTile#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.UrlTile#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.UrlTile#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileImage#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileImage#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileImage#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileImage#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileImage#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.TileImage#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileImage#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileImage#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileImage#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileImage#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileImage#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileImage#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileImage#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileImage#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileImage#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileImage#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileImage#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileImage#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.BingMaps#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.BingMaps#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.BingMaps#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.BingMaps#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.BingMaps#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.BingMaps#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.BingMaps#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.BingMaps#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.BingMaps#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.BingMaps#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.BingMaps#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.BingMaps#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.BingMaps#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.BingMaps#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.BingMaps#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.BingMaps#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.BingMaps#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.BingMaps#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.XYZ#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.XYZ#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.XYZ#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.XYZ#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.XYZ#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.XYZ#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.XYZ#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.XYZ#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.XYZ#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.XYZ#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.XYZ#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.XYZ#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.XYZ#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.XYZ#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.XYZ#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.XYZ#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.XYZ#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.XYZ#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.CartoDB#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.CartoDB#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.CartoDB#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.CartoDB#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.CartoDB#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.CartoDB#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.CartoDB#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.CartoDB#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.CartoDB#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.CartoDB#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.CartoDB#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.CartoDB#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.CartoDB#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.CartoDB#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.CartoDB#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.CartoDB#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.CartoDB#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.CartoDB#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.CartoDB#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.CartoDB#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.CartoDB#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.CartoDB#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.CartoDB#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.CartoDB#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.CartoDB#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.CartoDB#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.CartoDB#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.CartoDB#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Vector#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Vector#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Vector#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Vector#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Vector#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Vector#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Vector#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Vector#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Vector#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Vector#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Vector#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Vector#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#addFeature",
      "kind": "function",
      "description": "Add a single feature to the source.  If you want to add a batch of features\nat once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\ninstead. A feature will not be added to the source if feature with\nthe same id is already there. The reason for this behavior is to avoid\nfeature duplication when using bbox or tile loading strategies.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#addFeatures",
      "kind": "function",
      "description": "Add a batch of features to the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "features",
          "types": [
            "Array.<ol.Feature>"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#clear",
      "kind": "function",
      "description": "Remove all features from the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "opt_fast",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#forEachFeature",
      "kind": "function",
      "description": "Iterate through all features on the source, calling the provided callback\nwith each one.  If the callback returns any \"truthy\" value, iteration will\nstop and the function will return the same value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#forEachFeatureInExtent",
      "kind": "function",
      "description": "Iterate through all features whose bounding box intersects the provided\nextent (note that the feature's geometry may not intersect the extent),\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you are interested in features whose geometry intersects an extent, call\nthe {@link ol.source.Vector#forEachFeatureIntersectingExtent\nsource.forEachFeatureIntersectingExtent()} method instead.\n\nWhen `useSpatialIndex` is set to false, this method will loop through all\nfeatures, equivalent to {@link ol.source.Vector#forEachFeature}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#forEachFeatureIntersectingExtent",
      "kind": "function",
      "description": "Iterate through all features whose geometry intersects the provided extent,\ncalling the callback with each feature.  If the callback returns a \"truthy\"\nvalue, iteration will stop and the function will return the same value.\n\nIf you only want to test for bounding box intersection, call the\n{@link ol.source.Vector#forEachFeatureInExtent\nsource.forEachFeatureInExtent()} method instead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "callback",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "T"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "S",
          "undefined"
        ]
      },
      "template": "T,S",
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getFeaturesCollection",
      "kind": "function",
      "description": "Get the features collection associated with this source. Will be `null`\nunless the source was configured with `useSpatialIndex` set to `false`, or\nwith an {@link ol.Collection} as `features`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "returns": {
        "types": [
          "ol.Collection.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getFeatures",
      "kind": "function",
      "description": "Get all features on the source in random order.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getFeaturesAtCoordinate",
      "kind": "function",
      "description": "Get all features whose geometry intersects the provided coordinate.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getFeaturesInExtent",
      "kind": "function",
      "description": "Get all features in the provided extent.  Note that this returns an array of\nall features intersecting the given extent in random order (so it may include\nfeatures whose geometries do not intersect the extent).\n\nThis method is not available when the source is configured with\n`useSpatialIndex` set to `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getClosestFeatureToCoordinate",
      "kind": "function",
      "description": "Get the closest feature to the provided coordinate.\n\nThis method is not available when the source is configured with\n`useSpatialIndex` set to `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_filter",
          "types": [
            "Function"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getExtent",
      "kind": "function",
      "description": "Get the extent of the features currently in the source.\n\nThis method is not available when the source is configured with\n`useSpatialIndex` set to `false`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "id",
          "types": [
            "string",
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.Feature"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getFormat",
      "kind": "function",
      "description": "Get the format associated with this source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "returns": {
        "types": [
          "ol.format.Feature",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getUrl",
      "kind": "function",
      "description": "Get the url associated with this source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "returns": {
        "types": [
          "string",
          "ol.FeatureUrlFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#removeLoadedExtent",
      "kind": "function",
      "description": "Remove an extent from the list of loaded extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#removeFeature",
      "kind": "function",
      "description": "Remove a single feature from the source.  If you want to remove all features\nat once, use the {@link ol.source.Vector#clear source.clear()} method\ninstead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "feature",
          "types": [
            "ol.Feature"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#setLoader",
      "kind": "function",
      "description": "Set the new loader of the source. The next loadFeatures call will use the\nnew loader.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/vector.js",
      "params": [
        {
          "name": "loader",
          "types": [
            "ol.FeatureLoader"
          ]
        }
      ],
      "provides": [
        "ol.source.Vector"
      ]
    },
    {
      "name": "ol.source.Cluster#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Cluster#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Cluster#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Cluster#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Cluster#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Cluster#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Cluster#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Cluster#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Cluster#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Cluster#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Cluster#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Cluster#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Cluster#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Cluster#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Image#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Image#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Image#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Image#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Image#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Image#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Image#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Image#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Image#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Image#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Image#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Image#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Image.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Image.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Image.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageArcGISRest#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageMapGuide#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageStatic#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageStatic#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageStatic#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageStatic#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageStatic#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageStatic#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageStatic#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageVector#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageVector#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageVector#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageVector#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageVector#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageVector#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageVector#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageVector#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageVector#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageVector#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageVector#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageVector#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageWMS#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageWMS#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.ImageWMS#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageWMS#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageWMS#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageWMS#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.ImageWMS#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.OSM#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.OSM#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.OSM#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.OSM#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.OSM#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.OSM#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.OSM#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.OSM#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.OSM#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.OSM#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.OSM#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.OSM#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.OSM#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.OSM#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.OSM#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.OSM#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.OSM#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.OSM#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.OSM#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.OSM#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Raster#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Raster#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Raster#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Raster#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Raster#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Raster#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Raster#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Raster#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Raster#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Raster#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Raster#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Raster#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Raster#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Raster#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Raster#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Raster#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Raster#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Raster#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Raster.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Raster.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Raster.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Raster.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Stamen#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Stamen#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Stamen#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Stamen#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Stamen#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Stamen#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.Stamen#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Stamen#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Stamen#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Stamen#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Stamen#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Stamen#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Stamen#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Stamen#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Stamen#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Stamen#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Stamen#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Stamen#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Stamen#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Tile.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Tile.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Tile.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileArcGISRest#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.TileDebug#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileDebug#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileDebug#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileDebug#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileDebug#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileDebug#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileDebug#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileDebug#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileDebug#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileDebug#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileDebug#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileDebug#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileDebug#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileJSON#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileJSON#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileJSON#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileJSON#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileJSON#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.TileJSON#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileJSON#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileJSON#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileJSON#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileJSON#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileJSON#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileJSON#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileJSON#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileJSON#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileJSON#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileJSON#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileJSON#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileJSON#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileUTFGrid#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileWMS#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileWMS#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileWMS#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileWMS#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileWMS#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.TileWMS#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileWMS#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileWMS#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileWMS#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileWMS#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileWMS#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.TileWMS#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileWMS#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileWMS#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileWMS#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileWMS#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileWMS#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.TileWMS#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Vector.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Vector.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.Vector.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.source.VectorTile#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.VectorTile#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.VectorTile#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.VectorTile#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.VectorTile#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.VectorTile#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.VectorTile#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.VectorTile#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.VectorTile#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.VectorTile#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.VectorTile#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.VectorTile#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.VectorTile#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.VectorTile#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.VectorTile#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.VectorTile#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.VectorTile#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.VectorTile#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.VectorTile#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.VectorTile#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.VectorTile#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.VectorTile#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.VectorTile#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.VectorTile#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.VectorTile#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.VectorTile#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.WMTS#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.WMTS#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.WMTS#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.WMTS#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.WMTS#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.WMTS#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.WMTS#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.WMTS#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.WMTS#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.WMTS#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.WMTS#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.WMTS#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.WMTS#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.WMTS#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.WMTS#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.WMTS#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.WMTS#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.WMTS#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#setRenderReprojectionEdges",
      "kind": "function",
      "description": "Sets whether to render reprojection edges or not (usually for debugging).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "render",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#setTileGridForProjection",
      "kind": "function",
      "description": "Sets the tile grid to use when reprojecting the tiles to the given\nprojection instead of the default tile grid for the projection.\n\nThis can be useful when the default tile grid cannot be created\n(e.g. projection has no extent defined) or\nfor optimization reasons (custom tile size, resolutions, ...).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tileimage.js",
      "params": [
        {
          "name": "projection",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "tilegrid",
          "types": [
            "ol.tilegrid.TileGrid"
          ]
        }
      ],
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileLoadFunction",
      "kind": "function",
      "description": "Return the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileLoadFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileUrlFunction",
      "kind": "function",
      "description": "Return the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "ol.TileUrlFunctionType"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Zoomify#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this source.\nWhen a tileUrlFunction is used instead of url or urls,\nnull will be returned.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "returns": {
        "types": [
          "!Array.<string>",
          "null"
        ]
      },
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Zoomify#setTileLoadFunction",
      "kind": "function",
      "description": "Set the tile load function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileLoadFunction",
          "types": [
            "ol.TileLoadFunctionType"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Zoomify#setTileUrlFunction",
      "kind": "function",
      "description": "Set the tile URL function of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "tileUrlFunction",
          "types": [
            "ol.TileUrlFunctionType"
          ]
        },
        {
          "name": "opt_key",
          "types": [
            "string"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Zoomify#setUrl",
      "kind": "function",
      "description": "Set the URL to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "url",
          "types": [
            "string"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Zoomify#setUrls",
      "kind": "function",
      "description": "Set the URLs to use for requests.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "params": [
        {
          "name": "urls",
          "types": [
            "Array.<string>"
          ]
        }
      ],
      "provides": [
        "ol.source.UrlTile"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileGrid",
      "kind": "function",
      "description": "Return the tile grid of the tile source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/tile.js",
      "returns": {
        "types": [
          "ol.tilegrid.TileGrid"
        ]
      },
      "provides": [
        "ol.source.Tile"
      ]
    },
    {
      "name": "ol.source.Zoomify#refresh",
      "kind": "function",
      "description": "Refreshes the source and finally dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Zoomify#getAttributions",
      "kind": "function",
      "description": "Get the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "Array.<ol.Attribution>"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Zoomify#getLogo",
      "kind": "function",
      "description": "Get the logo of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "string",
          "olx.LogoOptions",
          "undefined"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Zoomify#getProjection",
      "kind": "function",
      "description": "Get the projection of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.proj.Projection"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Zoomify#getState",
      "kind": "function",
      "description": "Get the state of the source, see {@link ol.source.State} for possible states.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "returns": {
        "types": [
          "ol.source.State"
        ]
      },
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Zoomify#setAttributions",
      "kind": "function",
      "description": "Set the attributions of the source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/source.js",
      "params": [
        {
          "name": "attributions",
          "types": [
            "ol.AttributionLike",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.source.Source"
      ]
    },
    {
      "name": "ol.source.Zoomify#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Zoomify#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Zoomify#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Zoomify#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Zoomify#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Zoomify#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.source.Zoomify#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.reproj.Tile#getTileCoord",
      "kind": "function",
      "description": "Get the tile coordinate for this tile.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "returns": {
        "types": [
          "ol.TileCoord"
        ]
      },
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.reproj.Tile#load",
      "kind": "function",
      "description": "Load the image or retry if loading previously failed.\nLoading is taken care of by the tile queue, and calling this method is\nonly needed for preloading or for reloading in case of an error.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "provides": [
        "ol.Tile"
      ]
    },
    {
      "name": "ol.renderer.Layer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.Layer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.Layer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.Layer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.Layer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.Layer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.Layer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.Layer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.Layer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.Layer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.Layer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.Layer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.ImageLayer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.ImageLayer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.ImageLayer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.ImageLayer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.ImageLayer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.ImageLayer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.TileLayer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.TileLayer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.TileLayer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.TileLayer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.TileLayer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.TileLayer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.VectorLayer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.VectorLayer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.VectorLayer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.VectorLayer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.VectorLayer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.webgl.VectorLayer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.Layer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.Layer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.Layer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.Layer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.Layer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.Layer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.IntermediateCanvas#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.IntermediateCanvas#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.IntermediateCanvas#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.IntermediateCanvas#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.IntermediateCanvas#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.IntermediateCanvas#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.ImageLayer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.ImageLayer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.ImageLayer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.ImageLayer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.ImageLayer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.ImageLayer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.TileLayer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.TileLayer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.TileLayer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.TileLayer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.TileLayer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.TileLayer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorLayer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorLayer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorLayer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorLayer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorLayer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorLayer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorTileLayer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorTileLayer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorTileLayer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorTileLayer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorTileLayer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.renderer.canvas.VectorTileLayer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.render.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.render.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.render.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.render.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.pointer.PointerEvent#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.pointer.PointerEvent#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.pointer.PointerEvent#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.pointer.PointerEvent#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.layer.Base#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Base#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Base#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Base#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Base#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Base#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Base#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#getExtent",
      "kind": "function",
      "description": "Return the {@link ol.Extent extent} of the layer or `undefined` if it\nwill be visible regardless of extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#getMaxResolution",
      "kind": "function",
      "description": "Return the maximum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#getMinResolution",
      "kind": "function",
      "description": "Return the minimum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#getOpacity",
      "kind": "function",
      "description": "Return the opacity of the layer (between 0 and 1).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#getVisible",
      "kind": "function",
      "description": "Return the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#getZIndex",
      "kind": "function",
      "description": "Return the Z-index of the layer, which is used to order layers before\nrendering. The default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#setMaxResolution",
      "kind": "function",
      "description": "Set the maximum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#setMinResolution",
      "kind": "function",
      "description": "Set the minimum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#setOpacity",
      "kind": "function",
      "description": "Set the opacity of the layer, allowed values range from 0 to 1.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#setVisible",
      "kind": "function",
      "description": "Set the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#setZIndex",
      "kind": "function",
      "description": "Set Z-index of the layer, which is used to order layers before rendering.\nThe default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "zindex",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Group#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Group#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Group#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Group#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Group#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Group#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Group#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#getExtent",
      "kind": "function",
      "description": "Return the {@link ol.Extent extent} of the layer or `undefined` if it\nwill be visible regardless of extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#getMaxResolution",
      "kind": "function",
      "description": "Return the maximum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#getMinResolution",
      "kind": "function",
      "description": "Return the minimum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#getOpacity",
      "kind": "function",
      "description": "Return the opacity of the layer (between 0 and 1).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#getVisible",
      "kind": "function",
      "description": "Return the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#getZIndex",
      "kind": "function",
      "description": "Return the Z-index of the layer, which is used to order layers before\nrendering. The default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#setMaxResolution",
      "kind": "function",
      "description": "Set the maximum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#setMinResolution",
      "kind": "function",
      "description": "Set the minimum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#setOpacity",
      "kind": "function",
      "description": "Set the opacity of the layer, allowed values range from 0 to 1.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#setVisible",
      "kind": "function",
      "description": "Set the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#setZIndex",
      "kind": "function",
      "description": "Set Z-index of the layer, which is used to order layers before rendering.\nThe default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "zindex",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Layer#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Layer#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Layer#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Layer#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Layer#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Layer#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Layer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#setMap",
      "kind": "function",
      "description": "Sets the layer to be rendered on top of other layers on a map. The map will\nnot manage this layer in its layers collection, and the callback in\n{@link ol.Map#forEachLayerAtPixel} will receive `null` as layer. This\nis useful for temporary layers. To remove an unmanaged layer from the map,\nuse `#setMap(null)`.\n\nTo add the layer to a map and have it managed by the map, use\n{@link ol.Map#addLayer} instead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Vector#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Vector#getExtent",
      "kind": "function",
      "description": "Return the {@link ol.Extent extent} of the layer or `undefined` if it\nwill be visible regardless of extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#getMaxResolution",
      "kind": "function",
      "description": "Return the maximum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#getMinResolution",
      "kind": "function",
      "description": "Return the minimum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#getOpacity",
      "kind": "function",
      "description": "Return the opacity of the layer (between 0 and 1).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#getVisible",
      "kind": "function",
      "description": "Return the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#getZIndex",
      "kind": "function",
      "description": "Return the Z-index of the layer, which is used to order layers before\nrendering. The default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#setMaxResolution",
      "kind": "function",
      "description": "Set the maximum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#setMinResolution",
      "kind": "function",
      "description": "Set the minimum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#setOpacity",
      "kind": "function",
      "description": "Set the opacity of the layer, allowed values range from 0 to 1.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#setVisible",
      "kind": "function",
      "description": "Set the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#setZIndex",
      "kind": "function",
      "description": "Set Z-index of the layer, which is used to order layers before rendering.\nThe default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "zindex",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Vector#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Vector#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Vector#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Vector#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Vector#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Vector#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Vector#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getSource",
      "kind": "function",
      "description": "Return the associated {@link ol.source.Vector vectorsource} of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "returns": {
        "types": [
          "ol.source.Vector"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.StyleFunction"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "returns": {
        "types": [
          "ol.StyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles. If it is `undefined` the default style is used. If\nit is `null` the layer has no style (a `null` style), so only features\nthat have their own styles will be rendered in the layer. See\n{@link ol.style} for information on the default style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.StyleFunction",
            "null",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setMap",
      "kind": "function",
      "description": "Sets the layer to be rendered on top of other layers on a map. The map will\nnot manage this layer in its layers collection, and the callback in\n{@link ol.Map#forEachLayerAtPixel} will receive `null` as layer. This\nis useful for temporary layers. To remove an unmanaged layer from the map,\nuse `#setMap(null)`.\n\nTo add the layer to a map and have it managed by the map, use\n{@link ol.Map#addLayer} instead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getExtent",
      "kind": "function",
      "description": "Return the {@link ol.Extent extent} of the layer or `undefined` if it\nwill be visible regardless of extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getMaxResolution",
      "kind": "function",
      "description": "Return the maximum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getMinResolution",
      "kind": "function",
      "description": "Return the minimum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getOpacity",
      "kind": "function",
      "description": "Return the opacity of the layer (between 0 and 1).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getVisible",
      "kind": "function",
      "description": "Return the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getZIndex",
      "kind": "function",
      "description": "Return the Z-index of the layer, which is used to order layers before\nrendering. The default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setMaxResolution",
      "kind": "function",
      "description": "Set the maximum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setMinResolution",
      "kind": "function",
      "description": "Set the minimum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setOpacity",
      "kind": "function",
      "description": "Set the opacity of the layer, allowed values range from 0 to 1.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setVisible",
      "kind": "function",
      "description": "Set the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setZIndex",
      "kind": "function",
      "description": "Set Z-index of the layer, which is used to order layers before rendering.\nThe default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "zindex",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Heatmap#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Heatmap#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Heatmap#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#setMap",
      "kind": "function",
      "description": "Sets the layer to be rendered on top of other layers on a map. The map will\nnot manage this layer in its layers collection, and the callback in\n{@link ol.Map#forEachLayerAtPixel} will receive `null` as layer. This\nis useful for temporary layers. To remove an unmanaged layer from the map,\nuse `#setMap(null)`.\n\nTo add the layer to a map and have it managed by the map, use\n{@link ol.Map#addLayer} instead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Image#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Image#getExtent",
      "kind": "function",
      "description": "Return the {@link ol.Extent extent} of the layer or `undefined` if it\nwill be visible regardless of extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#getMaxResolution",
      "kind": "function",
      "description": "Return the maximum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#getMinResolution",
      "kind": "function",
      "description": "Return the minimum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#getOpacity",
      "kind": "function",
      "description": "Return the opacity of the layer (between 0 and 1).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#getVisible",
      "kind": "function",
      "description": "Return the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#getZIndex",
      "kind": "function",
      "description": "Return the Z-index of the layer, which is used to order layers before\nrendering. The default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#setMaxResolution",
      "kind": "function",
      "description": "Set the maximum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#setMinResolution",
      "kind": "function",
      "description": "Set the minimum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#setOpacity",
      "kind": "function",
      "description": "Set the opacity of the layer, allowed values range from 0 to 1.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#setVisible",
      "kind": "function",
      "description": "Set the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#setZIndex",
      "kind": "function",
      "description": "Set Z-index of the layer, which is used to order layers before rendering.\nThe default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "zindex",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Image#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Image#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Image#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Image#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Image#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Image#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Image#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#setMap",
      "kind": "function",
      "description": "Sets the layer to be rendered on top of other layers on a map. The map will\nnot manage this layer in its layers collection, and the callback in\n{@link ol.Map#forEachLayerAtPixel} will receive `null` as layer. This\nis useful for temporary layers. To remove an unmanaged layer from the map,\nuse `#setMap(null)`.\n\nTo add the layer to a map and have it managed by the map, use\n{@link ol.Map#addLayer} instead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Tile#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Tile#getExtent",
      "kind": "function",
      "description": "Return the {@link ol.Extent extent} of the layer or `undefined` if it\nwill be visible regardless of extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#getMaxResolution",
      "kind": "function",
      "description": "Return the maximum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#getMinResolution",
      "kind": "function",
      "description": "Return the minimum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#getOpacity",
      "kind": "function",
      "description": "Return the opacity of the layer (between 0 and 1).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#getVisible",
      "kind": "function",
      "description": "Return the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#getZIndex",
      "kind": "function",
      "description": "Return the Z-index of the layer, which is used to order layers before\nrendering. The default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#setMaxResolution",
      "kind": "function",
      "description": "Set the maximum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#setMinResolution",
      "kind": "function",
      "description": "Set the minimum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#setOpacity",
      "kind": "function",
      "description": "Set the opacity of the layer, allowed values range from 0 to 1.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#setVisible",
      "kind": "function",
      "description": "Set the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#setZIndex",
      "kind": "function",
      "description": "Set Z-index of the layer, which is used to order layers before rendering.\nThe default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "zindex",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.Tile#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Tile#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Tile#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Tile#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Tile#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Tile#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.Tile#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "returns": {
        "types": [
          "ol.style.Style",
          "Array.<ol.style.Style>",
          "ol.StyleFunction"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "returns": {
        "types": [
          "ol.StyleFunction",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles. If it is `undefined` the default style is used. If\nit is `null` the layer has no style (a `null` style), so only features\nthat have their own styles will be rendered in the layer. See\n{@link ol.style} for information on the default style.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/vector.js",
      "params": [
        {
          "name": "style",
          "types": [
            "ol.style.Style",
            "Array.<ol.style.Style>",
            "ol.StyleFunction",
            "null",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setMap",
      "kind": "function",
      "description": "Sets the layer to be rendered on top of other layers on a map. The map will\nnot manage this layer in its layers collection, and the callback in\n{@link ol.Map#forEachLayerAtPixel} will receive `null` as layer. This\nis useful for temporary layers. To remove an unmanaged layer from the map,\nuse `#setMap(null)`.\n\nTo add the layer to a map and have it managed by the map, use\n{@link ol.Map#addLayer} instead.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setSource",
      "kind": "function",
      "description": "Set the layer source.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/layer.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.source.Source"
          ]
        }
      ],
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getExtent",
      "kind": "function",
      "description": "Return the {@link ol.Extent extent} of the layer or `undefined` if it\nwill be visible regardless of extent.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "ol.Extent",
          "undefined"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getMaxResolution",
      "kind": "function",
      "description": "Return the maximum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getMinResolution",
      "kind": "function",
      "description": "Return the minimum resolution of the layer.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getOpacity",
      "kind": "function",
      "description": "Return the opacity of the layer (between 0 and 1).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getVisible",
      "kind": "function",
      "description": "Return the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getZIndex",
      "kind": "function",
      "description": "Return the Z-index of the layer, which is used to order layers before\nrendering. The default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setExtent",
      "kind": "function",
      "description": "Set the extent at which the layer is visible.  If `undefined`, the layer\nwill be visible at all extents.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent",
            "undefined"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setMaxResolution",
      "kind": "function",
      "description": "Set the maximum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "maxResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setMinResolution",
      "kind": "function",
      "description": "Set the minimum resolution at which the layer is visible.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "minResolution",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setOpacity",
      "kind": "function",
      "description": "Set the opacity of the layer, allowed values range from 0 to 1.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "opacity",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setVisible",
      "kind": "function",
      "description": "Set the visibility of the layer (`true` or `false`).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "visible",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setZIndex",
      "kind": "function",
      "description": "Set Z-index of the layer, which is used to order layers before rendering.\nThe default Z-index is 0.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/layer/base.js",
      "params": [
        {
          "name": "zindex",
          "types": [
            "number"
          ]
        }
      ],
      "provides": [
        "ol.layer.Base"
      ]
    },
    {
      "name": "ol.layer.VectorTile#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.VectorTile#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.VectorTile#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.VectorTile#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.layer.VectorTile#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.VectorTile#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.VectorTile#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.VectorTile#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.VectorTile#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.VectorTile#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Interaction#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Interaction#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Interaction#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Interaction#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Pointer#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Pointer#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Pointer#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Pointer#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Pointer#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Pointer#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragBox#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragBox#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragBox#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragBox#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragBox#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragBox#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.DragBox.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.DragBox.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.DragBox.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragPan#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragPan#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragPan#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragPan#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragPan#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragPan#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getGeometry",
      "kind": "function",
      "description": "Returns geometry of last drawn box.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/dragbox.js",
      "returns": {
        "types": [
          "ol.geom.Polygon"
        ]
      },
      "provides": [
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Draw#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Draw#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Draw#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Draw#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Draw#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Draw#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Draw#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Draw#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Draw#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Draw.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Draw.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Draw.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Extent#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Extent#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Extent#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Extent#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Extent#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Extent#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Extent#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Extent#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Extent#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Extent#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Extent#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Extent#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Extent#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Extent#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Extent#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Extent.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Extent.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Extent.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Extent.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Modify#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Modify#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Modify#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Modify#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Modify#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Modify#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Modify#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Modify#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Modify#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Modify.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Modify.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Modify.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Select#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Select#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Select#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Select#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Select#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Select#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Select#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Select#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Select#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Select.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Select.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Select.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Snap#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Snap#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Snap#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Snap#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Snap#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Snap#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Snap#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Snap#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Snap#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Snap#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Snap#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Snap#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Snap#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Snap#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Snap#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Translate#getActive",
      "kind": "function",
      "description": "Return whether the interaction is currently active.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Translate#getMap",
      "kind": "function",
      "description": "Get the map associated with this interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Translate#setActive",
      "kind": "function",
      "description": "Activate or deactivate the interaction.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/interaction/interaction.js",
      "params": [
        {
          "name": "active",
          "types": [
            "boolean"
          ]
        }
      ],
      "provides": [
        "ol.interaction.Interaction"
      ]
    },
    {
      "name": "ol.interaction.Translate#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Translate#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Translate#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Translate#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Translate#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Translate#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.interaction.Translate#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Translate#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Translate#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Translate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Translate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Translate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Translate.Event#type",
      "kind": "member",
      "description": "The event type.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "string"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Translate.Event#target",
      "kind": "member",
      "description": "The event target.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "types": [
        "Object"
      ],
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Translate.Event#preventDefault",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.interaction.Translate.Event#stopPropagation",
      "kind": "function",
      "description": "Stop event propagation.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/events/event.js",
      "provides": [
        "ol.events.Event"
      ]
    },
    {
      "name": "ol.geom.Geometry#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Geometry#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Geometry#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Geometry#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Geometry#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Geometry#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Geometry#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#getFirstCoordinate",
      "kind": "function",
      "description": "Return the first coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getLastCoordinate",
      "kind": "function",
      "description": "Return the last coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getLayout",
      "kind": "function",
      "description": "Return the {@link ol.geom.GeometryLayout layout} of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Circle#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Circle#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Circle#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Circle#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Circle#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Circle#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Circle#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Circle#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Circle#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Circle#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getFirstCoordinate",
      "kind": "function",
      "description": "Return the first coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getLastCoordinate",
      "kind": "function",
      "description": "Return the last coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getLayout",
      "kind": "function",
      "description": "Return the {@link ol.geom.GeometryLayout layout} of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LinearRing#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LinearRing#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LinearRing#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LinearRing#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#getFirstCoordinate",
      "kind": "function",
      "description": "Return the first coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getLastCoordinate",
      "kind": "function",
      "description": "Return the last coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getLayout",
      "kind": "function",
      "description": "Return the {@link ol.geom.GeometryLayout layout} of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LineString#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LineString#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LineString#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LineString#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.LineString#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LineString#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LineString#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LineString#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LineString#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LineString#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.LineString#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getFirstCoordinate",
      "kind": "function",
      "description": "Return the first coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLastCoordinate",
      "kind": "function",
      "description": "Return the last coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLayout",
      "kind": "function",
      "description": "Return the {@link ol.geom.GeometryLayout layout} of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getFirstCoordinate",
      "kind": "function",
      "description": "Return the first coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getLastCoordinate",
      "kind": "function",
      "description": "Return the last coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getLayout",
      "kind": "function",
      "description": "Return the {@link ol.geom.GeometryLayout layout} of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getFirstCoordinate",
      "kind": "function",
      "description": "Return the first coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getLastCoordinate",
      "kind": "function",
      "description": "Return the last coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getLayout",
      "kind": "function",
      "description": "Return the {@link ol.geom.GeometryLayout layout} of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#getFirstCoordinate",
      "kind": "function",
      "description": "Return the first coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getLastCoordinate",
      "kind": "function",
      "description": "Return the last coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getLayout",
      "kind": "function",
      "description": "Return the {@link ol.geom.GeometryLayout layout} of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Point#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Point#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Point#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Point#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Point#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Point#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Point#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Point#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Point#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Point#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Point#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Point#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Point#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#getFirstCoordinate",
      "kind": "function",
      "description": "Return the first coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLastCoordinate",
      "kind": "function",
      "description": "Return the last coordinate of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLayout",
      "kind": "function",
      "description": "Return the {@link ol.geom.GeometryLayout layout} of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/simplegeometry.js",
      "returns": {
        "types": [
          "ol.geom.GeometryLayout"
        ]
      },
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#rotate",
      "kind": "function",
      "description": "Rotate the geometry around a given coordinate. This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "angle",
          "types": [
            "number"
          ]
        },
        {
          "name": "anchor",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#scale",
      "kind": "function",
      "description": "Scale the geometry (with an optional origin).  This modifies the geometry\ncoordinates in place.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "sx",
          "types": [
            "number"
          ]
        },
        {
          "name": "opt_sy",
          "types": [
            "number"
          ],
          "optional": true
        },
        {
          "name": "opt_anchor",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getClosestPoint",
      "kind": "function",
      "description": "Return the closest point of the geometry to the passed point as\n{@link ol.Coordinate coordinate}.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "point",
          "types": [
            "ol.Coordinate"
          ]
        },
        {
          "name": "opt_closestPoint",
          "types": [
            "ol.Coordinate"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Coordinate"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#intersectsCoordinate",
      "kind": "function",
      "description": "Returns true if this geometry includes the specified coordinate. If the\ncoordinate is on the boundary of the geometry, returns false.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "coordinate",
          "types": [
            "ol.Coordinate"
          ]
        }
      ],
      "returns": {
        "types": [
          "boolean"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "opt_extent",
          "types": [
            "ol.Extent"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.Extent"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#simplify",
      "kind": "function",
      "description": "Create a simplified version of this geometry.  For linestrings, this uses\nthe the {@link\nhttps://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\nDouglas Peucker} algorithm.  For polygons, a quantization-based\nsimplification is used to preserve topology.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#transform",
      "kind": "function",
      "description": "Transform each coordinate of the geometry from one coordinate reference\nsystem to another. The geometry is modified in place.\nFor example, a line will be transformed to a line and a circle to a circle.\nIf you do not want the geometry modified in place, first `clone()` it and\nthen use this function on the clone.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/geom/geometry.js",
      "params": [
        {
          "name": "source",
          "types": [
            "ol.ProjectionLike"
          ]
        },
        {
          "name": "destination",
          "types": [
            "ol.ProjectionLike"
          ]
        }
      ],
      "returns": {
        "types": [
          "ol.geom.Geometry"
        ]
      },
      "provides": [
        "ol.geom.Geometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Polygon#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Polygon#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Polygon#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Polygon#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Polygon#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.geom.Polygon#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.format.GML#readFeatures",
      "kind": "function",
      "description": "Read all features from a GML FeatureCollection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gmlbase.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GMLBase"
      ]
    },
    {
      "name": "ol.format.GML2#readFeatures",
      "kind": "function",
      "description": "Read all features from a GML FeatureCollection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gmlbase.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GMLBase"
      ]
    },
    {
      "name": "ol.format.GML3#readFeatures",
      "kind": "function",
      "description": "Read all features from a GML FeatureCollection.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gmlbase.js",
      "params": [
        {
          "name": "source",
          "types": [
            "Document",
            "Node",
            "Object",
            "string"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.format.ReadOptions"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "Array.<ol.Feature>"
        ]
      },
      "provides": [
        "ol.format.GMLBase"
      ]
    },
    {
      "name": "ol.control.Control#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Control#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Control#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Control#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Control#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Control#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Control#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Attribution#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Attribution#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Attribution#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Attribution#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Attribution#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Attribution#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.FullScreen#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.FullScreen#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.FullScreen#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.FullScreen#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.FullScreen#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.FullScreen#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.MousePosition#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.MousePosition#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.MousePosition#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.MousePosition#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.MousePosition#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.MousePosition#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.MousePosition#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.MousePosition#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.MousePosition#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.OverviewMap#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.OverviewMap#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.OverviewMap#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.OverviewMap#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.OverviewMap#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.OverviewMap#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Rotate#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Rotate#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Rotate#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Rotate#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Rotate#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Rotate#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ScaleLine#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ScaleLine#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Zoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Zoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Zoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Zoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Zoom#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.Zoom#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "returns": {
        "types": [
          "ol.PluggableMap"
        ]
      },
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setTarget",
      "kind": "function",
      "description": "This function is used to set a target element for the control. It has no\neffect if it is called after the control has been added to the map (i.e.\nafter `setMap` is called on the control). If no `target` is set in the\noptions passed to the control constructor and if `setTarget` is not called\nthen the control is added to the map's overlay container.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/control/control.js",
      "params": [
        {
          "name": "target",
          "types": [
            "Element",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#get",
      "kind": "function",
      "description": "Gets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        }
      ],
      "returns": {
        "types": [
          "*"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Array.<string>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "returns": {
        "types": [
          "Object.<string, *>"
        ]
      },
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#set",
      "kind": "function",
      "description": "Sets a value.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "value",
          "types": [
            "*"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.  Note that this changes any existing\nproperties and adds new ones (it does not remove any existing properties).",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "values",
          "types": [
            "Object.<string, *>"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unset",
      "kind": "function",
      "description": "Unsets a property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/object.js",
      "params": [
        {
          "name": "key",
          "types": [
            "string"
          ]
        },
        {
          "name": "opt_silent",
          "types": [
            "boolean"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Object"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#changed",
      "kind": "function",
      "description": "Increases the revision counter and dispatches a 'change' event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#dispatchEvent",
      "kind": "function",
      "description": "Dispatches an event and calls all listeners listening for events\nof this type. The event parameter can either be a string or an\nObject with a `type` property.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "event",
          "types": [
            "Object",
            "ol.events.Event",
            "string"
          ]
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getRevision",
      "kind": "function",
      "description": "Get the version number for this object.  Each time the object is modified,\nits version number will be incremented.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "returns": {
        "types": [
          "number"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "returns": {
        "types": [
          "ol.EventsKey",
          "Array.<ol.EventsKey>"
        ]
      },
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "stability": "experimental",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/observable.js",
      "params": [
        {
          "name": "type",
          "types": [
            "string",
            "Array.<string>"
          ]
        },
        {
          "name": "listener",
          "types": [
            "Function"
          ]
        },
        {
          "name": "opt_this",
          "types": [
            "Object"
          ],
          "optional": true
        }
      ],
      "provides": [
        "ol.Observable"
      ]
    }
  ],
  "defines": [
    {
      "name": "ol.ASSUME_TOUCH",
      "description": "Assume touch.  Default is `false`.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/index.js",
      "default": false
    },
    {
      "name": "ol.ENABLE_CANVAS",
      "description": "Enable the Canvas renderer.  Default is `true`. Setting\n    this to false at compile time in advanced mode removes all code\n    supporting the Canvas renderer from the build.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/index.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_PROJ4JS",
      "description": "Enable integration with the Proj4js library.  Default is\n    `true`.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/index.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_RASTER_REPROJECTION",
      "description": "Enable automatic reprojection of raster sources. Default is\n    `true`.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/index.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_WEBGL",
      "description": "Enable the WebGL renderer.  Default is `true`. Setting\n    this to false at compile time in advanced mode removes all code\n    supporting the WebGL renderer from the build.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/index.js",
      "default": true
    },
    {
      "name": "ol.DEBUG_WEBGL",
      "description": "Include debuggable shader sources.  Default is `true`.\n    This should be set to `false` for production builds (if `ol.ENABLE_WEBGL`\n    is `true`).",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/index.js",
      "default": true
    }
  ],
  "typedefs": [
    {
      "name": "olx.CollectionOptions",
      "types": [
        "{unique: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.AttributionOptions",
      "types": [
        "{html: (string)}"
      ]
    },
    {
      "name": "olx.DeviceOrientationOptions",
      "types": [
        "{tracking: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.GeolocationOptions",
      "types": [
        "{tracking: (boolean|undefined), trackingOptions: (GeolocationPositionOptions|undefined), projection: (ol.ProjectionLike)}"
      ]
    },
    {
      "name": "olx.LogoOptions",
      "types": [
        "{href: (string), src: (string)}"
      ]
    },
    {
      "name": "olx.GraticuleOptions",
      "types": [
        "{map: (ol.PluggableMap|undefined), maxLines: (number|undefined), strokeStyle: (ol.style.Stroke|undefined), targetSize: (number|undefined), showLabels: (boolean|undefined), lonLabelFormatter: (undefined|Function), latLabelFormatter: (undefined|Function), lonLabelPosition: (number|undefined), latLabelPosition: (number|undefined), lonLabelStyle: (ol.style.Text|undefined), latLabelStyle: (ol.style.Text|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.InteractionOptions",
      "types": [
        "{handleEvent: (Function)}"
      ]
    },
    {
      "name": "olx.MapOptions",
      "types": [
        "{controls: (ol.Collection.<ol.control.Control>|Array.<ol.control.Control>|undefined), pixelRatio: (number|undefined), interactions: (ol.Collection.<ol.interaction.Interaction>|Array.<ol.interaction.Interaction>|undefined), keyboardEventTarget: (Element|Document|string|undefined), layers: (Array.<ol.layer.Base>|ol.Collection.<ol.layer.Base>|undefined), loadTilesWhileAnimating: (boolean|undefined), loadTilesWhileInteracting: (boolean|undefined), logo: (boolean|string|olx.LogoOptions|Element|undefined), moveTolerance: (number|undefined), overlays: (ol.Collection.<ol.Overlay>|Array.<ol.Overlay>|undefined), renderer: (ol.renderer.Type|Array.<ol.renderer.Type>|undefined), target: (Element|string|undefined), view: (ol.View|undefined)}"
      ]
    },
    {
      "name": "olx.SphereMetricOptions",
      "types": [
        "{projection: (ol.ProjectionLike|undefined), radius: (number|undefined)}"
      ]
    },
    {
      "name": "olx.TileOptions",
      "types": [
        "{transition: (number|undefined)}"
      ]
    },
    {
      "name": "olx.AtPixelOptions",
      "types": [
        "{layerFilter: (Function|undefined), hitTolerance: (number|undefined)}"
      ]
    },
    {
      "name": "olx.OverlayOptions",
      "types": [
        "{id: (number|string|undefined), element: (Element|undefined), offset: (Array.<number>|undefined), position: (ol.Coordinate|undefined), positioning: (ol.OverlayPositioning|string|undefined), stopEvent: (boolean|undefined), insertFirst: (boolean|undefined), autoPan: (boolean|undefined), autoPanAnimation: (olx.OverlayPanOptions|undefined), autoPanMargin: (number|undefined), className: (string|undefined)}"
      ]
    },
    {
      "name": "olx.OverlayPanOptions",
      "types": [
        "{duration: (number|undefined), easing: (undefined|Function)}"
      ]
    },
    {
      "name": "olx.ProjectionOptions",
      "types": [
        "{code: (string), units: (ol.proj.Units|string|undefined), extent: (ol.Extent|undefined), axisOrientation: (string|undefined), global: (boolean|undefined), metersPerUnit: (number|undefined), worldExtent: (ol.Extent|undefined), getPointResolution: (Function|undefined)}"
      ]
    },
    {
      "name": "olx.ViewOptions",
      "types": [
        "{center: (ol.Coordinate|undefined), constrainRotation: (boolean|number|undefined), enableRotation: (boolean|undefined), extent: (ol.Extent|undefined), maxResolution: (number|undefined), minResolution: (number|undefined), maxZoom: (number|undefined), minZoom: (number|undefined), projection: (ol.ProjectionLike), resolution: (number|undefined), resolutions: (Array.<number>|undefined), rotation: (number|undefined), zoom: (number|undefined), zoomFactor: (number|undefined)}"
      ]
    },
    {
      "name": "olx.AnimationOptions",
      "types": [
        "{center: (ol.Coordinate|undefined), zoom: (number|undefined), resolution: (number|undefined), rotation: (number|undefined), anchor: (ol.Coordinate|undefined), duration: (number|undefined), easing: (undefined|Function), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.animation.BounceOptions",
      "types": [
        "{resolution: (number), start: (number|undefined), duration: (number|undefined), easing: (undefined|Function)}"
      ]
    },
    {
      "name": "olx.animation.PanOptions",
      "types": [
        "{source: (ol.Coordinate), start: (number|undefined), duration: (number|undefined), easing: (undefined|Function)}"
      ]
    },
    {
      "name": "olx.animation.RotateOptions",
      "types": [
        "{rotation: (number|undefined), anchor: (ol.Coordinate|undefined), start: (number|undefined), duration: (number|undefined), easing: (undefined|Function)}"
      ]
    },
    {
      "name": "olx.animation.ZoomOptions",
      "types": [
        "{resolution: (number), start: (number|undefined), duration: (number|undefined), easing: (undefined|Function), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.control.AttributionOptions",
      "types": [
        "{className: (string|undefined), target: (Element|string|undefined), collapsible: (boolean|undefined), collapsed: (boolean|undefined), tipLabel: (string|undefined), label: (string|Node|undefined), collapseLabel: (string|Node|undefined), render: (Function|undefined)}"
      ]
    },
    {
      "name": "olx.control.ControlOptions",
      "types": [
        "{element: (Element|undefined), render: (Function|undefined), target: (Element|string|undefined)}"
      ]
    },
    {
      "name": "olx.control.DefaultsOptions",
      "types": [
        "{attribution: (boolean|undefined), attributionOptions: (olx.control.AttributionOptions|undefined), rotate: (boolean|undefined), rotateOptions: (olx.control.RotateOptions|undefined), zoom: (boolean|undefined), zoomOptions: (olx.control.ZoomOptions|undefined)}"
      ]
    },
    {
      "name": "olx.control.FullScreenOptions",
      "types": [
        "{className: (string|undefined), label: (string|Node|undefined), labelActive: (string|Node|undefined), tipLabel: (string|undefined), keys: (boolean|undefined), target: (Element|string|undefined), source: (Element|string|undefined)}"
      ]
    },
    {
      "name": "olx.control.MousePositionOptions",
      "types": [
        "{className: (string|undefined), coordinateFormat: (ol.CoordinateFormatType|undefined), projection: (ol.ProjectionLike), render: (Function|undefined), target: (Element|string|undefined), undefinedHTML: (string|undefined)}"
      ]
    },
    {
      "name": "olx.control.OverviewMapOptions",
      "types": [
        "{collapsed: (boolean|undefined), collapseLabel: (string|Node|undefined), collapsible: (boolean|undefined), label: (string|Node|undefined), layers: (Array.<ol.layer.Layer>|ol.Collection.<ol.layer.Layer>|undefined), render: (Function|undefined), target: (Element|string|undefined), tipLabel: (string|undefined), view: (ol.View|undefined)}"
      ]
    },
    {
      "name": "olx.control.ScaleLineOptions",
      "types": [
        "{className: (string|undefined), minWidth: (number|undefined), render: (Function|undefined), target: (Element|string|undefined), units: (ol.control.ScaleLineUnits|string|undefined)}"
      ]
    },
    {
      "name": "olx.control.RotateOptions",
      "types": [
        "{className: (string|undefined), label: (string|Element|undefined), tipLabel: (string|undefined), duration: (number|undefined), autoHide: (boolean|undefined), render: (Function|undefined), resetNorth: (Function|undefined), target: (Element|string|undefined)}"
      ]
    },
    {
      "name": "olx.control.ZoomOptions",
      "types": [
        "{duration: (number|undefined), className: (string|undefined), zoomInLabel: (string|Node|undefined), zoomOutLabel: (string|Node|undefined), zoomInTipLabel: (string|undefined), zoomOutTipLabel: (string|undefined), delta: (number|undefined), target: (Element|string|undefined)}"
      ]
    },
    {
      "name": "olx.control.ZoomSliderOptions",
      "types": [
        "{className: (string|undefined), duration: (number|undefined), maxResolution: (number|undefined), minResolution: (number|undefined), render: (Function|undefined)}"
      ]
    },
    {
      "name": "olx.control.ZoomToExtentOptions",
      "types": [
        "{className: (string|undefined), target: (Element|string|undefined), label: (string|Node|undefined), tipLabel: (string|undefined), extent: (ol.Extent|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.format.ReadOptions",
      "types": [
        "{dataProjection: (ol.ProjectionLike), extent: (ol.Extent), featureProjection: (ol.ProjectionLike)}"
      ]
    },
    {
      "name": "olx.format.WriteOptions",
      "types": [
        "{dataProjection: (ol.ProjectionLike), featureProjection: (ol.ProjectionLike), rightHanded: (boolean|undefined), decimals: (number|undefined)}"
      ]
    },
    {
      "name": "olx.format.GeoJSONOptions",
      "types": [
        "{defaultDataProjection: (ol.ProjectionLike), featureProjection: (ol.ProjectionLike), geometryName: (string|undefined), extractGeometryName: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.format.EsriJSONOptions",
      "types": [
        "{geometryName: (string|undefined)}"
      ]
    },
    {
      "name": "olx.format.MVTOptions",
      "types": [
        "{featureClass: (undefined|Function|Function), geometryName: (string|undefined), layerName: (string|undefined), layers: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.format.PolylineOptions",
      "types": [
        "{factor: (number|undefined), geometryLayout: (ol.geom.GeometryLayout|undefined)}"
      ]
    },
    {
      "name": "olx.format.TopoJSONOptions",
      "types": [
        "{defaultDataProjection: (ol.ProjectionLike), layerName: (string|undefined), layers: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.format.IGCOptions",
      "types": [
        "{altitudeMode: (ol.format.IGCZ|undefined)}"
      ]
    },
    {
      "name": "olx.format.KMLOptions",
      "types": [
        "{extractStyles: (boolean|undefined), showPointNames: (boolean|undefined), defaultStyle: (Array.<ol.style.Style>|undefined), writeStyles: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.format.GMLOptions",
      "types": [
        "{featureNS: (Object.<string, string>|string|undefined), featureType: (Array.<string>|string|undefined), srsName: (string), surface: (boolean|undefined), curve: (boolean|undefined), multiCurve: (boolean|undefined), multiSurface: (boolean|undefined), schemaLocation: (string|undefined)}"
      ]
    },
    {
      "name": "olx.format.GPXOptions",
      "types": [
        "{readExtensions: (Function|undefined)}"
      ]
    },
    {
      "name": "olx.format.WFSOptions",
      "types": [
        "{featureNS: (Object.<string, string>|string|undefined), featureType: (Array.<string>|string|undefined), gmlFormat: (ol.format.GMLBase|undefined), schemaLocation: (string|undefined)}"
      ]
    },
    {
      "name": "olx.format.WFSWriteGetFeatureOptions",
      "types": [
        "{featureNS: (string), featurePrefix: (string), featureTypes: (Array.<string>), srsName: (string|undefined), handle: (string|undefined), outputFormat: (string|undefined), maxFeatures: (number|undefined), geometryName: (string|undefined), propertyNames: (Array.<string>|undefined), startIndex: (number|undefined), count: (number|undefined), bbox: (ol.Extent|undefined), filter: (ol.format.filter.Filter|undefined), resultType: (string|undefined)}"
      ]
    },
    {
      "name": "olx.format.WFSWriteTransactionOptions",
      "types": [
        "{featureNS: (string), featurePrefix: (string), featureType: (string), srsName: (string|undefined), handle: (string|undefined), hasZ: (boolean|undefined), nativeElements: (Array.<Object>), gmlOptions: (olx.format.GMLOptions|undefined), version: (string|undefined)}"
      ]
    },
    {
      "name": "olx.format.WKTOptions",
      "types": [
        "{splitCollection: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.format.WMSGetFeatureInfoOptions",
      "types": [
        "{layers: (Array.<string>|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.interaction.DefaultsOptions",
      "types": [
        "{altShiftDragRotate: (boolean|undefined), constrainResolution: (boolean|undefined), doubleClickZoom: (boolean|undefined), keyboard: (boolean|undefined), mouseWheelZoom: (boolean|undefined), shiftDragZoom: (boolean|undefined), dragPan: (boolean|undefined), pinchRotate: (boolean|undefined), pinchZoom: (boolean|undefined), zoomDelta: (number|undefined), zoomDuration: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DoubleClickZoomOptions",
      "types": [
        "{duration: (number|undefined), delta: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragAndDropOptions",
      "types": [
        "{formatConstructors: (Array.<function(new:ol.format.Feature)>|undefined), source: (ol.source.Vector|undefined), projection: (ol.ProjectionLike), target: (Element|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragBoxOptions",
      "types": [
        "{className: (string|undefined), condition: (ol.EventsConditionType|undefined), minArea: (number|undefined), boxEndCondition: (ol.DragBoxEndConditionType|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragPanOptions",
      "types": [
        "{condition: (ol.EventsConditionType|undefined), kinetic: (ol.Kinetic|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragRotateAndZoomOptions",
      "types": [
        "{condition: (ol.EventsConditionType|undefined), duration: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragRotateOptions",
      "types": [
        "{condition: (ol.EventsConditionType|undefined), duration: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DragZoomOptions",
      "types": [
        "{className: (string|undefined), condition: (ol.EventsConditionType|undefined), duration: (number|undefined), out: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.DrawOptions",
      "types": [
        "{clickTolerance: (number|undefined), features: (ol.Collection.<ol.Feature>|undefined), source: (ol.source.Vector|undefined), snapTolerance: (number|undefined), type: (ol.geom.GeometryType|string), stopClick: (boolean|undefined), maxPoints: (number|undefined), minPoints: (number|undefined), finishCondition: (ol.EventsConditionType|undefined), style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined), geometryFunction: (ol.DrawGeometryFunctionType|undefined), geometryName: (string|undefined), condition: (ol.EventsConditionType|undefined), freehand: (boolean|undefined), freehandCondition: (ol.EventsConditionType|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.ExtentOptions",
      "types": [
        "{extent: (ol.Extent|undefined), boxStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined), pixelTolerance: (number|undefined), pointerStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.TranslateOptions",
      "types": [
        "{features: (ol.Collection.<ol.Feature>|undefined), layers: (undefined|Array.<ol.layer.Layer>|Function), hitTolerance: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.KeyboardPanOptions",
      "types": [
        "{condition: (ol.EventsConditionType|undefined), duration: (number|undefined), pixelDelta: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.KeyboardZoomOptions",
      "types": [
        "{duration: (number|undefined), condition: (ol.EventsConditionType|undefined), delta: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.ModifyOptions",
      "types": [
        "{condition: (ol.EventsConditionType|undefined), deleteCondition: (ol.EventsConditionType|undefined), insertVertexCondition: (ol.EventsConditionType|undefined), pixelTolerance: (number|undefined), style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined), source: (ol.source.Vector|undefined), features: (ol.Collection.<ol.Feature>|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.MouseWheelZoomOptions",
      "types": [
        "{duration: (number|undefined), timeout: (number|undefined), constrainResolution: (boolean|undefined), useAnchor: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.PinchRotateOptions",
      "types": [
        "{duration: (number|undefined), threshold: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.PinchZoomOptions",
      "types": [
        "{duration: (number|undefined), constrainResolution: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.PointerOptions",
      "types": [
        "{handleDownEvent: (Function|undefined), handleDragEvent: (Function|undefined), handleEvent: (Function|undefined), handleMoveEvent: (Function|undefined), handleUpEvent: (Function|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.SelectOptions",
      "types": [
        "{addCondition: (ol.EventsConditionType|undefined), condition: (ol.EventsConditionType|undefined), layers: (undefined|Array.<ol.layer.Layer>|Function), style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined), removeCondition: (ol.EventsConditionType|undefined), toggleCondition: (ol.EventsConditionType|undefined), multi: (boolean|undefined), features: (ol.Collection.<ol.Feature>|undefined), filter: (ol.SelectFilterFunction|undefined), wrapX: (boolean|undefined), hitTolerance: (number|undefined)}"
      ]
    },
    {
      "name": "olx.interaction.SnapOptions",
      "types": [
        "{features: (ol.Collection.<ol.Feature>|undefined), edge: (boolean|undefined), vertex: (boolean|undefined), pixelTolerance: (number|undefined), source: (ol.source.Vector|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.layer.BaseOptions",
      "types": [
        "{opacity: (number|undefined), visible: (boolean|undefined), extent: (ol.Extent|undefined), zIndex: (number|undefined), minResolution: (number|undefined), maxResolution: (number|undefined)}"
      ]
    },
    {
      "name": "olx.layer.LayerOptions",
      "types": [
        "{opacity: (number|undefined), source: (ol.source.Source|undefined), visible: (boolean|undefined), extent: (ol.Extent|undefined), zIndex: (number|undefined), minResolution: (number|undefined), maxResolution: (number|undefined)}"
      ]
    },
    {
      "name": "olx.layer.GroupOptions",
      "types": [
        "{opacity: (number|undefined), visible: (boolean|undefined), extent: (ol.Extent|undefined), zIndex: (number|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), layers: (Array.<ol.layer.Base>|ol.Collection.<ol.layer.Base>|undefined)}"
      ]
    },
    {
      "name": "olx.layer.HeatmapOptions",
      "types": [
        "{gradient: (Array.<string>|undefined), radius: (number|undefined), blur: (number|undefined), shadow: (number|undefined), weight: (string|Function), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), opacity: (number|undefined), source: (ol.source.Vector), visible: (boolean|undefined), zIndex: (number|undefined)}"
      ]
    },
    {
      "name": "olx.layer.ImageOptions",
      "types": [
        "{opacity: (number|undefined), source: (ol.source.Image), map: (ol.PluggableMap|undefined), visible: (boolean|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), zIndex: (number|undefined)}"
      ]
    },
    {
      "name": "olx.layer.TileOptions",
      "types": [
        "{opacity: (number|undefined), preload: (number|undefined), source: (ol.source.Tile), map: (ol.PluggableMap|undefined), visible: (boolean|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), useInterimTilesOnError: (boolean|undefined), zIndex: (number|undefined)}"
      ]
    },
    {
      "name": "olx.layer.VectorOptions",
      "types": [
        "{renderMode: (ol.layer.VectorRenderType|string|undefined), renderOrder: (ol.RenderOrderFunction|null|undefined), map: (ol.PluggableMap|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), opacity: (number|undefined), renderBuffer: (number|undefined), source: (ol.source.Vector), declutter: (boolean|undefined), style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined), updateWhileAnimating: (boolean|undefined), updateWhileInteracting: (boolean|undefined), visible: (boolean|undefined), zIndex: (number|undefined)}"
      ]
    },
    {
      "name": "olx.layer.VectorTileOptions",
      "types": [
        "{renderBuffer: (number|undefined), renderMode: (ol.layer.VectorTileRenderType|string|undefined), renderOrder: (ol.RenderOrderFunction|undefined), map: (ol.PluggableMap|undefined), extent: (ol.Extent|undefined), minResolution: (number|undefined), maxResolution: (number|undefined), opacity: (number|undefined), preload: (number|undefined), source: (ol.source.VectorTile|undefined), declutter: (boolean|undefined), style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined), updateWhileAnimating: (boolean|undefined), updateWhileInteracting: (boolean|undefined), visible: (boolean|undefined), zIndex: (number|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.render.State",
      "types": [
        "{context: (CanvasRenderingContext2D), pixelRatio: (number), resolution: (number), rotation: (number)}"
      ]
    },
    {
      "name": "olx.render.ToContextOptions",
      "types": [
        "{size: (ol.Size|undefined), pixelRatio: (number|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.source.BingMapsOptions",
      "types": [
        "{cacheSize: (number|undefined), hidpi: (boolean|undefined), culture: (string|undefined), key: (string), imagerySet: (string), maxZoom: (number|undefined), reprojectionErrorThreshold: (number|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), wrapX: (boolean|undefined), transition: (number|undefined)}"
      ]
    },
    {
      "name": "olx.source.ClusterOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), distance: (number|undefined), extent: (ol.Extent|undefined), geometryFunction: (undefined|Function), format: (ol.format.Feature|undefined), logo: (string|undefined), projection: (ol.ProjectionLike), source: (ol.source.Vector), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.source.TileUTFGridOptions",
      "types": [
        "{jsonp: (boolean|undefined), preemptive: (boolean|undefined), tileJSON: (TileJSON|undefined), url: (string|undefined)}"
      ]
    },
    {
      "name": "olx.source.TileImageOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), crossOrigin: (null|string|undefined), logo: (string|olx.LogoOptions|undefined), opaque: (boolean|undefined), projection: (ol.ProjectionLike), reprojectionErrorThreshold: (number|undefined), state: (ol.source.State|undefined), tileClass: (Function|undefined), tileGrid: (ol.tilegrid.TileGrid|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), tilePixelRatio: (number|undefined), tileUrlFunction: (ol.TileUrlFunctionType|undefined), url: (string|undefined), urls: (Array.<string>|undefined), wrapX: (boolean|undefined), transition: (number|undefined)}"
      ]
    },
    {
      "name": "olx.source.VectorTileOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), format: (ol.format.Feature|undefined), logo: (string|olx.LogoOptions|undefined), overlaps: (boolean|undefined), projection: (ol.ProjectionLike), state: (ol.source.State|undefined), tileClass: (Function|undefined), tileGrid: (ol.tilegrid.TileGrid|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), tileUrlFunction: (ol.TileUrlFunctionType|undefined), url: (string|undefined), urls: (Array.<string>|undefined), wrapX: (boolean|undefined), transition: (number|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageMapGuideOptions",
      "types": [
        "{url: (string|undefined), displayDpi: (number|undefined), metersPerUnit: (number|undefined), hidpi: (boolean|undefined), useOverlay: (boolean|undefined), projection: (ol.ProjectionLike), ratio: (number|undefined), resolutions: (Array.<number>|undefined), imageLoadFunction: (ol.ImageLoadFunctionType|undefined), params: (Object|undefined)}"
      ]
    },
    {
      "name": "olx.source.MapQuestOptions",
      "types": [
        "{cacheSize: (number|undefined), layer: (string), reprojectionErrorThreshold: (number|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined)}"
      ]
    },
    {
      "name": "olx.source.TileDebugOptions",
      "types": [
        "{projection: (ol.ProjectionLike), tileGrid: (ol.tilegrid.TileGrid|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.source.OSMOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), crossOrigin: (null|string|undefined), maxZoom: (number|undefined), opaque: (boolean|undefined), reprojectionErrorThreshold: (number|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageArcGISRestOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), crossOrigin: (null|string|undefined), hidpi: (boolean|undefined), logo: (string|olx.LogoOptions|undefined), imageLoadFunction: (ol.ImageLoadFunctionType|undefined), params: (Object.<string, *>|undefined), projection: (ol.ProjectionLike), ratio: (number|undefined), resolutions: (Array.<number>|undefined), url: (string|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageCanvasOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), canvasFunction: (ol.CanvasFunctionType), logo: (string|olx.LogoOptions|undefined), projection: (ol.ProjectionLike), ratio: (number|undefined), resolutions: (Array.<number>|undefined), state: (ol.source.State|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageVectorOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), logo: (string|olx.LogoOptions|undefined), projection: (ol.ProjectionLike), ratio: (number|undefined), renderBuffer: (number|undefined), resolutions: (Array.<number>|undefined), source: (ol.source.Vector), style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)}"
      ]
    },
    {
      "name": "olx.source.RasterOptions",
      "types": [
        "{sources: (Array.<ol.source.Source>), operation: (ol.RasterOperation|undefined), lib: (Object|undefined), threads: (number|undefined), operationType: (ol.source.RasterOperationType|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageWMSOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), crossOrigin: (null|string|undefined), hidpi: (boolean|undefined), serverType: (ol.source.WMSServerType|string|undefined), imageLoadFunction: (ol.ImageLoadFunctionType|undefined), logo: (string|olx.LogoOptions|undefined), params: (Object.<string, *>), projection: (ol.ProjectionLike), ratio: (number|undefined), resolutions: (Array.<number>|undefined), url: (string|undefined)}"
      ]
    },
    {
      "name": "olx.source.StamenOptions",
      "types": [
        "{cacheSize: (number|undefined), layer: (string), minZoom: (number|undefined), maxZoom: (number|undefined), opaque: (boolean|undefined), reprojectionErrorThreshold: (number|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.source.ImageStaticOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), crossOrigin: (null|string|undefined), imageExtent: (ol.Extent), imageLoadFunction: (ol.ImageLoadFunctionType|undefined), logo: (string|olx.LogoOptions|undefined), projection: (ol.ProjectionLike), imageSize: (ol.Size|undefined), url: (string)}"
      ]
    },
    {
      "name": "olx.source.TileArcGISRestOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), crossOrigin: (null|string|undefined), params: (Object.<string, *>|undefined), logo: (string|olx.LogoOptions|undefined), tileGrid: (ol.tilegrid.TileGrid|undefined), projection: (ol.ProjectionLike), reprojectionErrorThreshold: (number|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined), wrapX: (boolean|undefined), transition: (number|undefined), urls: (Array.<string>|undefined)}"
      ]
    },
    {
      "name": "olx.source.TileJSONOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), crossOrigin: (null|string|undefined), jsonp: (boolean|undefined), reprojectionErrorThreshold: (number|undefined), tileJSON: (TileJSON|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined), wrapX: (boolean|undefined), transition: (number|undefined)}"
      ]
    },
    {
      "name": "olx.source.TileWMSOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), params: (Object.<string, *>), crossOrigin: (null|string|undefined), gutter: (number|undefined), hidpi: (boolean|undefined), logo: (string|olx.LogoOptions|undefined), tileClass: (Function|undefined), tileGrid: (ol.tilegrid.TileGrid|undefined), projection: (ol.ProjectionLike), reprojectionErrorThreshold: (number|undefined), serverType: (ol.source.WMSServerType|string|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), url: (string|undefined), urls: (Array.<string>|undefined), wrapX: (boolean|undefined), transition: (number|undefined)}"
      ]
    },
    {
      "name": "olx.source.VectorOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), features: (Array.<ol.Feature>|ol.Collection.<ol.Feature>|undefined), format: (ol.format.Feature|undefined), loader: (ol.FeatureLoader|undefined), logo: (string|olx.LogoOptions|undefined), overlaps: (boolean|undefined), strategy: (ol.LoadingStrategy|undefined), url: (string|ol.FeatureUrlFunction|undefined), useSpatialIndex: (boolean|undefined), wrapX: (boolean|undefined)}"
      ]
    },
    {
      "name": "olx.source.WMTSOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), crossOrigin: (string|null|undefined), logo: (string|olx.LogoOptions|undefined), tileGrid: (ol.tilegrid.WMTS), projection: (ol.ProjectionLike), reprojectionErrorThreshold: (number|undefined), requestEncoding: (ol.source.WMTSRequestEncoding|string|undefined), layer: (string), style: (string), tileClass: (Function|undefined), tilePixelRatio: (number|undefined), version: (string|undefined), format: (string|undefined), matrixSet: (string), dimensions: (Object|undefined), url: (string|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), urls: (Array.<string>|undefined), wrapX: (boolean|undefined), transition: (number|undefined)}"
      ]
    },
    {
      "name": "olx.source.XYZOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), crossOrigin: (null|string|undefined), logo: (string|olx.LogoOptions|undefined), opaque: (boolean|undefined), projection: (ol.ProjectionLike), reprojectionErrorThreshold: (number|undefined), maxZoom: (number|undefined), minZoom: (number|undefined), tileGrid: (ol.tilegrid.TileGrid|undefined), tileLoadFunction: (ol.TileLoadFunctionType|undefined), tilePixelRatio: (number|undefined), tileSize: (number|ol.Size|undefined), tileUrlFunction: (ol.TileUrlFunctionType|undefined), url: (string|undefined), urls: (Array.<string>|undefined), wrapX: (boolean|undefined), transition: (number|undefined)}"
      ]
    },
    {
      "name": "olx.source.CartoDBOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), crossOrigin: (null|string|undefined), logo: (string|olx.LogoOptions|undefined), projection: (ol.ProjectionLike), maxZoom: (number|undefined), minZoom: (number|undefined), wrapX: (boolean|undefined), config: (Object|undefined), map: (string|undefined), account: (string)}"
      ]
    },
    {
      "name": "olx.source.ZoomifyOptions",
      "types": [
        "{attributions: (ol.AttributionLike|undefined), cacheSize: (number|undefined), crossOrigin: (null|string|undefined), logo: (string|olx.LogoOptions|undefined), projection: (ol.ProjectionLike|undefined), reprojectionErrorThreshold: (number|undefined), url: (string), tierSizeCalculation: (string|undefined), size: (ol.Size), extent: (ol.Extent|undefined), transition: (number|undefined), tileSize: (number|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.style.CircleOptions",
      "types": [
        "{fill: (ol.style.Fill|undefined), radius: (number), snapToPixel: (boolean|undefined), stroke: (ol.style.Stroke|undefined), atlasManager: (ol.style.AtlasManager|undefined)}"
      ]
    },
    {
      "name": "olx.style.FillOptions",
      "types": [
        "{color: (ol.Color|ol.ColorLike|undefined)}"
      ]
    },
    {
      "name": "olx.style.IconOptions",
      "types": [
        "{anchor: (Array.<number>|undefined), anchorOrigin: (ol.style.IconOrigin|undefined), anchorXUnits: (ol.style.IconAnchorUnits|undefined), anchorYUnits: (ol.style.IconAnchorUnits|undefined), color: (ol.Color|string|undefined), crossOrigin: (null|string|undefined), img: (Image|HTMLCanvasElement|undefined), offset: (Array.<number>|undefined), offsetOrigin: (ol.style.IconOrigin|undefined), opacity: (number|undefined), scale: (number|undefined), snapToPixel: (boolean|undefined), rotateWithView: (boolean|undefined), rotation: (number|undefined), size: (ol.Size|undefined), imgSize: (ol.Size|undefined), src: (string|undefined)}"
      ]
    },
    {
      "name": "olx.style.RegularShapeOptions",
      "types": [
        "{fill: (ol.style.Fill|undefined), points: (number), radius: (number|undefined), radius1: (number|undefined), radius2: (number|undefined), angle: (number|undefined), snapToPixel: (boolean|undefined), stroke: (ol.style.Stroke|undefined), rotation: (number|undefined), rotateWithView: (boolean|undefined), atlasManager: (ol.style.AtlasManager|undefined)}"
      ]
    },
    {
      "name": "olx.style.StrokeOptions",
      "types": [
        "{color: (ol.Color|ol.ColorLike|undefined), lineCap: (string|undefined), lineJoin: (string|undefined), lineDash: (Array.<number>|undefined), lineDashOffset: (number|undefined), miterLimit: (number|undefined), width: (number|undefined)}"
      ]
    },
    {
      "name": "olx.style.TextOptions",
      "types": [
        "{exceedLength: (boolean|undefined), font: (string|undefined), maxAngle: (number|undefined), offsetX: (number|undefined), offsetY: (number|undefined), overflow: (boolean|undefined), placement: (ol.style.TextPlacement|undefined), scale: (number|undefined), rotateWithView: (boolean|undefined), rotation: (number|undefined), text: (string|undefined), textAlign: (string|undefined), textBaseline: (string|undefined), fill: (ol.style.Fill|undefined), stroke: (ol.style.Stroke|undefined), backgroundFill: (ol.style.Fill|undefined), backgroundStroke: (ol.style.Stroke|undefined), padding: (Array.<number>|undefined)}"
      ]
    },
    {
      "name": "olx.style.StyleOptions",
      "types": [
        "{geometry: (undefined|string|ol.geom.Geometry|ol.StyleGeometryFunction), fill: (ol.style.Fill|undefined), image: (ol.style.Image|undefined), renderer: (ol.StyleRenderFunction|undefined), stroke: (ol.style.Stroke|undefined), text: (ol.style.Text|undefined), zIndex: (number|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.tilegrid.TileGridOptions",
      "types": [
        "{extent: (ol.Extent|undefined), minZoom: (number|undefined), origin: (ol.Coordinate|undefined), origins: (Array.<ol.Coordinate>|undefined), resolutions: (Array.<number>), tileSize: (number|ol.Size|undefined), tileSizes: (Array.<(number|ol.Size)>|undefined)}"
      ]
    },
    {
      "name": "olx.tilegrid.WMTSOptions",
      "types": [
        "{extent: (ol.Extent|undefined), origin: (ol.Coordinate|undefined), origins: (Array.<ol.Coordinate>|undefined), resolutions: (Array.<number>), matrixIds: (Array.<string>), sizes: (Array.<ol.Size>|undefined), tileSize: (number|ol.Size|undefined), tileSizes: (Array.<(number|ol.Size)>|undefined), widths: (Array.<number>|undefined)}"
      ]
    },
    {
      "name": "olx.tilegrid.XYZOptions",
      "types": [
        "{extent: (ol.Extent|undefined), maxZoom: (number|undefined), minZoom: (number|undefined), tileSize: (number|ol.Size|undefined), undefined: (Object)}"
      ]
    },
    {
      "name": "olx.view.FitOptions",
      "types": [
        "{size: (ol.Size|undefined), padding: (!Array.<number>|undefined), constrainResolution: (boolean|undefined), nearest: (boolean|undefined), minResolution: (number|undefined), maxZoom: (number|undefined), duration: (number|undefined), easing: (undefined|Function), callback: (undefined|Function)}"
      ]
    },
    {
      "name": "olx.FrameState",
      "types": [
        "{pixelRatio: (number), time: (number), viewState: (olx.ViewState)}"
      ]
    },
    {
      "name": "olx.ViewState",
      "types": [
        "{center: (ol.Coordinate), projection: (ol.proj.Projection), resolution: (number), rotation: (number), zoom: (number)}"
      ]
    },
    {
      "name": "olx.style.AtlasManagerOptions",
      "types": [
        "{initialSize: (number|undefined), maxSize: (number|undefined), space: (number|undefined)}"
      ]
    },
    {
      "name": "olx.MapRendererPlugin",
      "types": [
        "{handles: (Function), create: (Function)}"
      ]
    },
    {
      "name": "olx.LayerRendererPlugin",
      "types": [
        "{handles: (Function), create: (Function)}"
      ]
    },
    {
      "name": "ol.layer.VectorRenderType",
      "types": [
        "string"
      ]
    },
    {
      "name": "ol.layer.VectorTileRenderType",
      "types": [
        "string"
      ]
    }
  ],
  "externs": [
    {
      "name": "olx",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/olx.js",
      "types": [
        "Object"
      ],
      "params": []
    },
    {
      "name": "GeoJSONObject",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "params": []
    },
    {
      "name": "GeoJSONObject#bbox",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONObject#type",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONObject#crs",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONCRS",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "params": []
    },
    {
      "name": "GeoJSONCRS#type",
      "kind": "member",
      "description": "CRS type. One of `link` or `name`.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONCRS#properties",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "GeoJSONCRSName",
        "GeoJSONLink"
      ]
    },
    {
      "name": "GeoJSONCRSName",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "params": []
    },
    {
      "name": "GeoJSONCRSName#name",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONGeometry",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "extends": "GeoJSONObject",
      "params": []
    },
    {
      "name": "GeoJSONGeometry#coordinates",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "!Array.<!Array.<number>>",
        "!Array.<!Array.<!Array.<number>>>"
      ]
    },
    {
      "name": "GeoJSONGeometryCollection",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "extends": "GeoJSONObject",
      "params": []
    },
    {
      "name": "GeoJSONGeometryCollection#geometries",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "Array.<GeoJSONGeometry>"
      ]
    },
    {
      "name": "GeoJSONFeature",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "extends": "GeoJSONObject",
      "params": []
    },
    {
      "name": "GeoJSONFeature#geometry",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "GeoJSONGeometry",
        "GeoJSONGeometryCollection"
      ]
    },
    {
      "name": "GeoJSONFeature#id",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "number",
        "string",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeature#properties",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "Object.<string, *>"
      ]
    },
    {
      "name": "GeoJSONFeature#geometry_name",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeatureCollection",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "extends": "GeoJSONObject",
      "params": []
    },
    {
      "name": "GeoJSONFeatureCollection#features",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "Array.<GeoJSONFeature>"
      ]
    },
    {
      "name": "GeoJSONLink",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "params": []
    },
    {
      "name": "GeoJSONLink#href",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONLink#type",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONGeometry#bbox",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONGeometry#type",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONGeometry#crs",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONGeometryCollection#bbox",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONGeometryCollection#type",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONGeometryCollection#crs",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeature#bbox",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeature#type",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONFeature#crs",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeatureCollection#bbox",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "!Array.<number>",
        "undefined"
      ]
    },
    {
      "name": "GeoJSONFeatureCollection#type",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "string"
      ]
    },
    {
      "name": "GeoJSONFeatureCollection#crs",
      "kind": "member",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/externs/geojson.js",
      "types": [
        "GeoJSONCRS",
        "undefined"
      ]
    }
  ],
  "base": [
    {
      "name": "ol.Disposable",
      "kind": "class",
      "description": "Objects that need to clean up after themselves.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/disposable.js"
    },
    {
      "name": "ol.ImageBase",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/imagebase.js",
      "extends": "ol.events.EventTarget",
      "virtual": true,
      "params": [
        {
          "name": "extent",
          "types": [
            "ol.Extent"
          ]
        },
        {
          "name": "resolution",
          "types": [
            "number",
            "undefined"
          ]
        },
        {
          "name": "pixelRatio",
          "types": [
            "number"
          ]
        },
        {
          "name": "state",
          "types": [
            "ol.ImageState"
          ]
        }
      ]
    },
    {
      "name": "ol.Tile",
      "kind": "class",
      "description": "Base class for tiles.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/tile.js",
      "extends": "ol.events.EventTarget",
      "virtual": true,
      "params": [
        {
          "name": "tileCoord",
          "types": [
            "ol.TileCoord"
          ]
        },
        {
          "name": "state",
          "types": [
            "ol.TileState"
          ]
        },
        {
          "name": "opt_options",
          "types": [
            "olx.TileOptions"
          ],
          "optional": true
        }
      ]
    },
    {
      "name": "ol.webgl.Shader",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/webgl/shader.js",
      "virtual": true,
      "params": [
        {
          "name": "source",
          "types": [
            "string"
          ]
        }
      ]
    },
    {
      "name": "ol.source.UrlTile",
      "kind": "class",
      "description": "Base class for sources providing tiles divided into a tile grid over http.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/source/urltile.js",
      "extends": "ol.source.Tile",
      "virtual": true,
      "params": [
        {
          "name": "options",
          "types": [
            "ol.SourceUrlTileOptions"
          ]
        }
      ]
    },
    {
      "name": "ol.renderer.Map",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/map.js",
      "extends": "ol.Disposable",
      "virtual": true,
      "params": [
        {
          "name": "container",
          "types": [
            "Element"
          ]
        },
        {
          "name": "map",
          "types": [
            "ol.PluggableMap"
          ]
        }
      ]
    },
    {
      "name": "ol.renderer.webgl.Layer",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/webgl/layer.js",
      "extends": "ol.renderer.Layer",
      "virtual": true,
      "params": [
        {
          "name": "mapRenderer",
          "types": [
            "ol.renderer.webgl.Map"
          ]
        },
        {
          "name": "layer",
          "types": [
            "ol.layer.Layer"
          ]
        }
      ]
    },
    {
      "name": "ol.renderer.canvas.IntermediateCanvas",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/canvas/intermediatecanvas.js",
      "extends": "ol.renderer.canvas.Layer",
      "virtual": true,
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Layer"
          ]
        }
      ]
    },
    {
      "name": "ol.renderer.canvas.Layer",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/renderer/canvas/layer.js",
      "extends": "ol.renderer.Layer",
      "virtual": true,
      "params": [
        {
          "name": "layer",
          "types": [
            "ol.layer.Layer"
          ]
        }
      ]
    },
    {
      "name": "ol.render.ReplayGroup",
      "kind": "class",
      "description": "Base class for replay groups.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/replaygroup.js",
      "virtual": true
    },
    {
      "name": "ol.render.webgl.Replay",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/webgl/replay.js",
      "extends": "ol.render.VectorContext",
      "virtual": true,
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        },
        {
          "name": "maxExtent",
          "types": [
            "ol.Extent"
          ]
        }
      ]
    },
    {
      "name": "ol.render.webgl.TextureReplay",
      "kind": "class",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/render/webgl/texturereplay.js",
      "extends": "ol.render.webgl.Replay",
      "virtual": true,
      "params": [
        {
          "name": "tolerance",
          "types": [
            "number"
          ]
        },
        {
          "name": "maxExtent",
          "types": [
            "ol.Extent"
          ]
        }
      ]
    },
    {
      "name": "ol.format.GMLBase",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nFeature base format for reading and writing data in the GML format.\nThis class cannot be instantiated, it contains only base content that\nis shared with versioned format classes ol.format.GML2 and\nol.format.GML3.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/gmlbase.js",
      "extends": "ol.format.XMLFeature",
      "virtual": true,
      "params": [
        {
          "name": "opt_options",
          "types": [
            "olx.format.GMLOptions"
          ],
          "optional": true
        }
      ]
    },
    {
      "name": "ol.format.JSONFeature",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for JSON feature formats.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/jsonfeature.js",
      "extends": "ol.format.Feature",
      "virtual": true
    },
    {
      "name": "ol.format.TextFeature",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for text feature formats.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/textfeature.js",
      "extends": "ol.format.Feature",
      "virtual": true
    },
    {
      "name": "ol.format.XML",
      "kind": "class",
      "description": "Generic format for reading non-feature XML data",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/xml.js",
      "virtual": true
    },
    {
      "name": "ol.format.XMLFeature",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for XML feature formats.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/xmlfeature.js",
      "extends": "ol.format.Feature",
      "virtual": true
    },
    {
      "name": "ol.format.filter.LogicalNary",
      "kind": "class",
      "description": "Abstract class; normally only used for creating subclasses and not instantiated in apps.\nBase class for WFS GetFeature n-ary logical filters.",
      "path": "/home/dweise/Projekte/trunk/trunk/libs/bower/bower_components/openlayers/src/ol/format/filter/logicalnary.js",
      "extends": "ol.format.filter.Filter",
      "virtual": true,
      "params": [
        {
          "name": "tagName",
          "types": [
            "string"
          ],
          "nullable": false
        },
        {
          "name": "conditions",
          "types": [
            "ol.format.filter.Filter"
          ],
          "variable": true
        }
      ]
    }
  ]
}