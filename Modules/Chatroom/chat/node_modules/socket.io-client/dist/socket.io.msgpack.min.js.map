{"version":3,"file":"socket.io.msgpack.min.js","sources":["../node_modules/parseuri/index.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/yeast/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/parseqs/index.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/notepack.io/browser/encode.js","../node_modules/notepack.io/browser/decode.js","../node_modules/notepack.io/lib/index.js","../node_modules/component-emitter/index.js","../node_modules/socket.io-msgpack-parser/index.js","../build/esm/on.js","../build/esm/socket.js","../node_modules/backo2/index.js","../build/esm/manager.js","../build/esm/index.js","../build/esm/url.js"],"sourcesContent":["/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","'use strict';\n\nfunction utf8Write(view, offset, str) {\n  var c = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      view.setUint8(offset++, c);\n    }\n    else if (c < 0x800) {\n      view.setUint8(offset++, 0xc0 | (c >> 6));\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      view.setUint8(offset++, 0xe0 | (c >> 12));\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else {\n      i++;\n      c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n      view.setUint8(offset++, 0xf0 | (c >> 18));\n      view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n  }\n}\n\nfunction utf8Length(str) {\n  var c = 0, length = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      length += 1;\n    }\n    else if (c < 0x800) {\n      length += 2;\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    }\n    else {\n      i++;\n      length += 4;\n    }\n  }\n  return length;\n}\n\nfunction _encode(bytes, defers, value) {\n  var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n\n  if (type === 'string') {\n    length = utf8Length(value);\n\n    // fixstr\n    if (length < 0x20) {\n      bytes.push(length | 0xa0);\n      size = 1;\n    }\n    // str 8\n    else if (length < 0x100) {\n      bytes.push(0xd9, length);\n      size = 2;\n    }\n    // str 16\n    else if (length < 0x10000) {\n      bytes.push(0xda, length >> 8, length);\n      size = 3;\n    }\n    // str 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('String too long');\n    }\n    defers.push({ _str: value, _length: length, _offset: bytes.length });\n    return size + length;\n  }\n  if (type === 'number') {\n    // TODO: encode to float 32?\n\n    // float 64\n    if (Math.floor(value) !== value || !isFinite(value)) {\n      bytes.push(0xcb);\n      defers.push({ _float: value, _length: 8, _offset: bytes.length });\n      return 9;\n    }\n\n    if (value >= 0) {\n      // positive fixnum\n      if (value < 0x80) {\n        bytes.push(value);\n        return 1;\n      }\n      // uint 8\n      if (value < 0x100) {\n        bytes.push(0xcc, value);\n        return 2;\n      }\n      // uint 16\n      if (value < 0x10000) {\n        bytes.push(0xcd, value >> 8, value);\n        return 3;\n      }\n      // uint 32\n      if (value < 0x100000000) {\n        bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // uint 64\n      hi = (value / Math.pow(2, 32)) >> 0;\n      lo = value >>> 0;\n      bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    } else {\n      // negative fixnum\n      if (value >= -0x20) {\n        bytes.push(value);\n        return 1;\n      }\n      // int 8\n      if (value >= -0x80) {\n        bytes.push(0xd0, value);\n        return 2;\n      }\n      // int 16\n      if (value >= -0x8000) {\n        bytes.push(0xd1, value >> 8, value);\n        return 3;\n      }\n      // int 32\n      if (value >= -0x80000000) {\n        bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // int 64\n      hi = Math.floor(value / Math.pow(2, 32));\n      lo = value >>> 0;\n      bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    }\n  }\n  if (type === 'object') {\n    // nil\n    if (value === null) {\n      bytes.push(0xc0);\n      return 1;\n    }\n\n    if (Array.isArray(value)) {\n      length = value.length;\n\n      // fixarray\n      if (length < 0x10) {\n        bytes.push(length | 0x90);\n        size = 1;\n      }\n      // array 16\n      else if (length < 0x10000) {\n        bytes.push(0xdc, length >> 8, length);\n        size = 3;\n      }\n      // array 32\n      else if (length < 0x100000000) {\n        bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Array too large');\n      }\n      for (i = 0; i < length; i++) {\n        size += _encode(bytes, defers, value[i]);\n      }\n      return size;\n    }\n\n    // fixext 8 / Date\n    if (value instanceof Date) {\n      var time = value.getTime();\n      hi = Math.floor(time / Math.pow(2, 32));\n      lo = time >>> 0;\n      bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 10;\n    }\n\n    if (value instanceof ArrayBuffer) {\n      length = value.byteLength;\n\n      // bin 8\n      if (length < 0x100) {\n        bytes.push(0xc4, length);\n        size = 2;\n      } else\n      // bin 16\n      if (length < 0x10000) {\n        bytes.push(0xc5, length >> 8, length);\n        size = 3;\n      } else\n      // bin 32\n      if (length < 0x100000000) {\n        bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Buffer too large');\n      }\n      defers.push({ _bin: value, _length: length, _offset: bytes.length });\n      return size + length;\n    }\n\n    if (typeof value.toJSON === 'function') {\n      return _encode(bytes, defers, value.toJSON());\n    }\n\n    var keys = [], key = '';\n\n    var allKeys = Object.keys(value);\n    for (i = 0, l = allKeys.length; i < l; i++) {\n      key = allKeys[i];\n      if (typeof value[key] !== 'function') {\n        keys.push(key);\n      }\n    }\n    length = keys.length;\n\n    // fixmap\n    if (length < 0x10) {\n      bytes.push(length | 0x80);\n      size = 1;\n    }\n    // map 16\n    else if (length < 0x10000) {\n      bytes.push(0xde, length >> 8, length);\n      size = 3;\n    }\n    // map 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('Object too large');\n    }\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      size += _encode(bytes, defers, key);\n      size += _encode(bytes, defers, value[key]);\n    }\n    return size;\n  }\n  // false/true\n  if (type === 'boolean') {\n    bytes.push(value ? 0xc3 : 0xc2);\n    return 1;\n  }\n  // fixext 1 / undefined\n  if (type === 'undefined') {\n    bytes.push(0xd4, 0, 0);\n    return 3;\n  }\n  throw new Error('Could not encode');\n}\n\nfunction encode(value) {\n  var bytes = [];\n  var defers = [];\n  var size = _encode(bytes, defers, value);\n  var buf = new ArrayBuffer(size);\n  var view = new DataView(buf);\n\n  var deferIndex = 0;\n  var deferWritten = 0;\n  var nextOffset = -1;\n  if (defers.length > 0) {\n    nextOffset = defers[0]._offset;\n  }\n\n  var defer, deferLength = 0, offset = 0;\n  for (var i = 0, l = bytes.length; i < l; i++) {\n    view.setUint8(deferWritten + i, bytes[i]);\n    if (i + 1 !== nextOffset) { continue; }\n    defer = defers[deferIndex];\n    deferLength = defer._length;\n    offset = deferWritten + nextOffset;\n    if (defer._bin) {\n      var bin = new Uint8Array(defer._bin);\n      for (var j = 0; j < deferLength; j++) {\n        view.setUint8(offset + j, bin[j]);\n      }\n    } else if (defer._str) {\n      utf8Write(view, offset, defer._str);\n    } else if (defer._float !== undefined) {\n      view.setFloat64(offset, defer._float);\n    }\n    deferIndex++;\n    deferWritten += deferLength;\n    if (defers[deferIndex]) {\n      nextOffset = defers[deferIndex]._offset;\n    }\n  }\n  return buf;\n}\n\nmodule.exports = encode;\n","'use strict';\n\nfunction Decoder(buffer) {\n  this._offset = 0;\n  if (buffer instanceof ArrayBuffer) {\n    this._buffer = buffer;\n    this._view = new DataView(this._buffer);\n  } else if (ArrayBuffer.isView(buffer)) {\n    this._buffer = buffer.buffer;\n    this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n  } else {\n    throw new Error('Invalid argument');\n  }\n}\n\nfunction utf8Read(view, offset, length) {\n  var string = '', chr = 0;\n  for (var i = offset, end = offset + length; i < end; i++) {\n    var byte = view.getUint8(i);\n    if ((byte & 0x80) === 0x00) {\n      string += String.fromCharCode(byte);\n      continue;\n    }\n    if ((byte & 0xe0) === 0xc0) {\n      string += String.fromCharCode(\n        ((byte & 0x1f) << 6) |\n        (view.getUint8(++i) & 0x3f)\n      );\n      continue;\n    }\n    if ((byte & 0xf0) === 0xe0) {\n      string += String.fromCharCode(\n        ((byte & 0x0f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0)\n      );\n      continue;\n    }\n    if ((byte & 0xf8) === 0xf0) {\n      chr = ((byte & 0x07) << 18) |\n        ((view.getUint8(++i) & 0x3f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0);\n      if (chr >= 0x010000) { // surrogate pair\n        chr -= 0x010000;\n        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n      } else {\n        string += String.fromCharCode(chr);\n      }\n      continue;\n    }\n    throw new Error('Invalid byte ' + byte.toString(16));\n  }\n  return string;\n}\n\nDecoder.prototype._array = function (length) {\n  var value = new Array(length);\n  for (var i = 0; i < length; i++) {\n    value[i] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._map = function (length) {\n  var key = '', value = {};\n  for (var i = 0; i < length; i++) {\n    key = this._parse();\n    value[key] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._str = function (length) {\n  var value = utf8Read(this._view, this._offset, length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._bin = function (length) {\n  var value = this._buffer.slice(this._offset, this._offset + length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._parse = function () {\n  var prefix = this._view.getUint8(this._offset++);\n  var value, length = 0, type = 0, hi = 0, lo = 0;\n\n  if (prefix < 0xc0) {\n    // positive fixint\n    if (prefix < 0x80) {\n      return prefix;\n    }\n    // fixmap\n    if (prefix < 0x90) {\n      return this._map(prefix & 0x0f);\n    }\n    // fixarray\n    if (prefix < 0xa0) {\n      return this._array(prefix & 0x0f);\n    }\n    // fixstr\n    return this._str(prefix & 0x1f);\n  }\n\n  // negative fixint\n  if (prefix > 0xdf) {\n    return (0xff - prefix + 1) * -1;\n  }\n\n  switch (prefix) {\n    // nil\n    case 0xc0:\n      return null;\n    // false\n    case 0xc2:\n      return false;\n    // true\n    case 0xc3:\n      return true;\n\n    // bin\n    case 0xc4:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._bin(length);\n    case 0xc5:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._bin(length);\n    case 0xc6:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._bin(length);\n\n    // ext\n    case 0xc7:\n      length = this._view.getUint8(this._offset);\n      type = this._view.getInt8(this._offset + 1);\n      this._offset += 2;\n      return [type, this._bin(length)];\n    case 0xc8:\n      length = this._view.getUint16(this._offset);\n      type = this._view.getInt8(this._offset + 2);\n      this._offset += 3;\n      return [type, this._bin(length)];\n    case 0xc9:\n      length = this._view.getUint32(this._offset);\n      type = this._view.getInt8(this._offset + 4);\n      this._offset += 5;\n      return [type, this._bin(length)];\n\n    // float\n    case 0xca:\n      value = this._view.getFloat32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcb:\n      value = this._view.getFloat64(this._offset);\n      this._offset += 8;\n      return value;\n\n    // uint\n    case 0xcc:\n      value = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xcd:\n      value = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xce:\n      value = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcf:\n      hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // int\n    case 0xd0:\n      value = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xd1:\n      value = this._view.getInt16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xd2:\n      value = this._view.getInt32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xd3:\n      hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // fixext\n    case 0xd4:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        this._offset += 1;\n        return void 0;\n      }\n      return [type, this._bin(1)];\n    case 0xd5:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(2)];\n    case 0xd6:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(4)];\n    case 0xd7:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n        lo = this._view.getUint32(this._offset + 4);\n        this._offset += 8;\n        return new Date(hi + lo);\n      }\n      return [type, this._bin(8)];\n    case 0xd8:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(16)];\n\n    // str\n    case 0xd9:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._str(length);\n    case 0xda:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._str(length);\n    case 0xdb:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._str(length);\n\n    // array\n    case 0xdc:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._array(length);\n    case 0xdd:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._array(length);\n\n    // map\n    case 0xde:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._map(length);\n    case 0xdf:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._map(length);\n  }\n\n  throw new Error('Could not parse');\n};\n\nfunction decode(buffer) {\n  var decoder = new Decoder(buffer);\n  var value = decoder._parse();\n  if (decoder._offset !== buffer.byteLength) {\n    throw new Error((buffer.byteLength - decoder._offset) + ' trailing bytes');\n  }\n  return value;\n}\n\nmodule.exports = decode;\n","exports.encode = require('./encode');\nexports.decode = require('./decode');\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","var msgpack = require(\"notepack.io\");\nvar Emitter = require(\"component-emitter\");\n\nexports.protocol = 5;\n\n/**\n * Packet types (see https://github.com/socketio/socket.io-protocol)\n */\n\nvar PacketType = (exports.PacketType = {\n  CONNECT: 0,\n  DISCONNECT: 1,\n  EVENT: 2,\n  ACK: 3,\n  CONNECT_ERROR: 4,\n});\n\nvar isInteger =\n  Number.isInteger ||\n  function (value) {\n    return (\n      typeof value === \"number\" &&\n      isFinite(value) &&\n      Math.floor(value) === value\n    );\n  };\n\nvar isString = function (value) {\n  return typeof value === \"string\";\n};\n\nvar isObject = function (value) {\n  return Object.prototype.toString.call(value) === \"[object Object]\";\n};\n\nfunction Encoder() {}\n\nEncoder.prototype.encode = function (packet) {\n  return [msgpack.encode(packet)];\n};\n\nfunction Decoder() {}\n\nEmitter(Decoder.prototype);\n\nDecoder.prototype.add = function (obj) {\n  var decoded = msgpack.decode(obj);\n  this.checkPacket(decoded);\n  this.emit(\"decoded\", decoded);\n};\n\nfunction isDataValid(decoded) {\n  switch (decoded.type) {\n    case PacketType.CONNECT:\n      return decoded.data === undefined || isObject(decoded.data);\n    case PacketType.DISCONNECT:\n      return decoded.data === undefined;\n    case PacketType.CONNECT_ERROR:\n      return isString(decoded.data) || isObject(decoded.data);\n    default:\n      return Array.isArray(decoded.data);\n  }\n}\n\nDecoder.prototype.checkPacket = function (decoded) {\n  var isTypeValid =\n    isInteger(decoded.type) &&\n    decoded.type >= PacketType.CONNECT &&\n    decoded.type <= PacketType.CONNECT_ERROR;\n  if (!isTypeValid) {\n    throw new Error(\"invalid packet type\");\n  }\n\n  if (!isString(decoded.nsp)) {\n    throw new Error(\"invalid namespace\");\n  }\n\n  if (!isDataValid(decoded)) {\n    throw new Error(\"invalid payload\");\n  }\n\n  var isAckValid = decoded.id === undefined || isInteger(decoded.id);\n  if (!isAckValid) {\n    throw new Error(\"invalid packet id\");\n  }\n};\n\nDecoder.prototype.destroy = function () {};\n\nexports.Encoder = Encoder;\nexports.Decoder = Decoder;\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["re","parts","parseuri","str","src","b","indexOf","e","substring","replace","length","query","data","m","exec","uri","i","source","host","authority","ipv6uri","pathNames","obj","path","regx","names","split","substr","splice","queryKey","$0","$1","$2","hasCorsModule","XMLHttpRequest","err","self","window","Function","opts","xdomain","hasCORS","globalThis","concat","join","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter","key","prototype","mixin","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","prev","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Transport","writable","readyState","socket","msg","desc","Error","description","doOpen","doClose","onClose","packets","write","packet","onPacket","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","yeast_1","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","polling","poll","onPause","pause","_this2","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","_this3","onOpen","close","_this4","count","encodePayload","_this5","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","XHR","location","isSSL","protocol","xd","xs","forceBase64","Request","req","request","method","onError","onData","pollXhr","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","name","transports","websocket","Socket","_this","writeBuffer","prevBufferLen","_extends","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","o","clone","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","_this6","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","utf8Write","view","offset","c","setUint8","_encode","defers","value","hi","lo","size","utf8Length","_str","_length","_offset","isFinite","pow","_float","isArray","time","getTime","byteLength","_bin","toJSON","allKeys","encode_1","buf","DataView","deferIndex","deferWritten","nextOffset","defer","deferLength","bin","setFloat64","Decoder","_buffer","_view","byteOffset","_array","_parse","_map","string","chr","end","byte","getUint8","utf8Read","prefix","getUint16","getUint32","getInt8","getFloat32","getFloat64","getInt16","getInt32","decode_1","decoder","require$$0","require$$1","module","msgpack","PacketType","PacketType_1","CONNECT","DISCONNECT","EVENT","ACK","CONNECT_ERROR","isInteger","isString","isObject","Encoder","add","checkPacket","nsp","isDataValid","destroy","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","unshift","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","timer","_packet","onconnect","BINARY_EVENT","onevent","BINARY_ACK","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","backo2","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","active","_close","delay","onreconnect","attempt","cache","_typeof","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"mappings":"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"}