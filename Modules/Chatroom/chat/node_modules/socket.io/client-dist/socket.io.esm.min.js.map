{"version":3,"file":"socket.io.esm.min.js","sources":["../node_modules/parseuri/index.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-client/node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/yeast/index.js","../node_modules/parseqs/index.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../node_modules/backo2/index.js","../build/esm/manager.js","../build/esm/index.js","../build/esm/url.js"],"sourcesContent":["/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["re","parts","parseuri","str","src","b","indexOf","e","substring","replace","length","query","data","m","exec","uri","i","source","host","authority","ipv6uri","pathNames","obj","path","regx","names","split","substr","splice","queryKey","$0","$1","$2","hasCorsModule","XMLHttpRequest","err","self","window","Function","opts","xdomain","hasCORS","globalThis","concat","join","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter","key","prototype","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Transport","constructor","super","writable","readyState","socket","onError","msg","desc","Error","description","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","prev","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","yeast_1","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","polling","name","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","Request","method","async","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","onSuccess","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","transports","websocket","location","isSSL","protocol","request","assign","req","pollXhr","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","o","clone","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","add","decodeString","BINARY_EVENT","BINARY_ACK","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","c","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","destroy","finishedReconstruction","reconPack","binData","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","volatile","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","backo2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"mappings":"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"}