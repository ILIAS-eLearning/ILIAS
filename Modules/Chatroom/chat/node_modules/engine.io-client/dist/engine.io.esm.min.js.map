{"version":3,"file":"engine.io.esm.min.js","sources":["../node_modules/has-cors/index.js","../build/esm/globalThis.browser.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../build/esm/transport.js","../node_modules/yeast/index.js","../node_modules/parseqs/index.js","../build/esm/transports/polling.js","../build/esm/transports/polling-xhr.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/index.js","../node_modules/parseuri/index.js","../build/esm/socket.js","../build/esm/index.js"],"sourcesContent":["\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\n"],"names":["hasCorsModule","XMLHttpRequest","err","self","window","Function","opts","xdomain","hasCORS","e","globalThis","concat","join","pick","obj","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter","key","prototype","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Transport","constructor","super","writable","query","readyState","socket","onError","msg","desc","Error","description","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","prev","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","yeast_1","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","polling","name","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","uri","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","indexOf","path","empty","hasXHR2","responseType","Request","method","async","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","onSuccess","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","transports","websocket","location","isSSL","protocol","request","assign","req","pollXhr","re","parts","parseuri","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","o","clone","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j"],"mappings":"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"}